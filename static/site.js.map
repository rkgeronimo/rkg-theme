{"version":3,"sources":["site.js","../../../node_modules/pdf417/bcmath-min.js","../../../node_modules/pdf417/pdf417.js","../../../node_modules/generator-barkoda-uplatnica/BarcodePayment.js","modal.js","cookie.js"],"names":["jQuery","document","ready","$","libbcmath","PLUS","MINUS","BASE","scale","bc_num","n_sign","n_len","n_scale","n_value","toString","b","a","join","substr","setScale","push","pop","bc_new_num","c","safe_emalloc","memset","Array","bc_init_num","_bc_rm_leading_zeros","shift","php_str2num","indexOf","bc_str2num","length","CH_VAL","BCD_CHAR","isdigit","isNaN","parseInt","h","g","f","e","i","d","split","MIN","cint","MAX","ODD","memcpy","bc_is_zero","bc_out_of_memory","Error","bc_add","_bc_do_add","_bc_do_compare","_bc_do_sub","bc_compare","Math","min","_one_mult","j","floor","bc_divide","l","k","z","y","w","p","o","x","u","A","s","q","r","m","t","v","n","MUL_BASE_DIGITS","MUL_SMALL_DIGITS","bc_multiply","_bc_rec_mul","new_sub_num","_bc_simp_mul","_bc_shift_addsub","bc_sub","bcadd","bcsub","bccomp","bcscale","bcdiv","bcmul","bcround","substring","PDF417","ROWHEIGHT","QUIETH","QUIETV","barcode_array","start_pattern","stop_pattern","textsubmodes","textlatch","clusters","rsfactors","init","code","ecl","aspectratio","unescape","encodeURIComponent","sequence","getInputSequences","codewords","cw","getCompaction","concat","numcw","getErrorCorrectionLevel","errsize","nce","cols","round","sqrt","rows","ceil","size","abs","pad","_array_fill","sld","unshift","ecw","getErrorCorrection","pstart","_str_repeat","pstop","empty_row","L","cid","row","_intval","_sprintf","arow","_preg_split","sequence_array","numseq","match","offset","seq","seqlen","prevseq","textseq","txtoffset","txtseq","txtseqlen","prevtxtseq","mode","addmode","submode","txtarr","codelen","chval","_ord","charAt","_array_search","txtarrlen","rest","sublen","cw6","_my_bcmod","maxecl","maxerrsize","ecc","eclsize","eclmaxid","t1","t2","t3","reverse","getBarcodeArray","start_index","num","mixed_val","key","tmp_arr","tmpArray","input","multiplier","mixed_var","base","tmp","type","isFinite","regex","arguments","format","str","len","chr","leftJustify","padding","justify","value","prefix","minWidth","zeroPad","customPadChar","diff","slice","formatBaseX","precision","number","formatString","doFormat","valueIndex","flags","_","method","textTransform","positivePrefix","prefixBaseX","flagsl","undefined","String","fromCharCode","toUpperCase","toLowerCase","replace","pattern","subject","limit","result","ret","index","noEmpty","delim","OPTS","optTemp","regexpBody","exec","regexpFlags","global","RegExp","PREG_SPLIT_NO_EMPTY","PREG_SPLIT_DELIM_CAPTURE","PREG_SPLIT_OFFSET_CAPTURE","_filter","strindex","resarr","prototype","call","string","charCodeAt","needle","haystack","argStrict","strict","change_key_case","search","multiline","sticky","source","test","take","mod","BarcodePayment","_me","_allowedSingleByteCharacters","_allowedTwoByteCharacters","_allowedCharacters","merge","_priceFieldLength","_pricePattern","_delimiter","_header","_currency","_paymentModelPrefix","_settings","Defaults","ValidateIBAN","ValidateModelPozivNaBroj","GetLength","StringNotDefinedOrEmpty","inArray","IsIBANValid","iban","IsPaymentModelValid","paymentModel","isValid","each","PaymentModels","model","IsCalloutNumberValid","calloutNumber","IsIntentCodeValid","intentCode","IntentCodes","ValidatePaymentParams","paymentParams","PaymentParams","ValidationResult","OK","fieldLength","Iznos","MaxLengths","Price","PriceMaxLengthExceeded","PricePatternInvalid","ImePlatitelja","PayerName","PayerNameMaxLengthExceeded","PayerNameInvalid","AdresaPlatitelja","PayerAddress","PayerAddressMaxLengthExceeded","PayerAddressInvalid","SjedistePlatitelja","PayerHQ","PayerHQMaxLengthExceeded","PayerHQInvalid","Primatelj","ReceiverName","ReceiverNameMaxLengthExceeded","ReceiverNameInvalid","AdresaPrimatelja","ReceiverAddress","ReceiverAddressMaxLengthExceeded","ReceiverAddressInvalid","SjedistePrimatelja","ReceiverHQ","ReceiverHQMaxLengthExceeded","ReceiverHQInvalid","IBAN","IBANMaxLengthExceeded","IBANInvalid","ModelPlacanja","PaymentModel","PaymentModelMaxLengthExceeded","PaymentModelInvalid","PozivNaBroj","CalloutNumber","CalloutNumberMaxLengthExceeded","CalloutNumberInvalid","SifraNamjene","IntentCode","IntentCodeMaxLengthExceeded","IntentCodeInvalid","OpisPlacanja","Description","DescriptionMaxLengthExceeded","DescriptionInvalid","GetEncodedText","ResultCode","InvalidObject","InvalidContent","ConcatenateStrings","EncodePrice","PadLeft","price","fullLength","res","title","AllowedSingleByteCharacters","AllowedTwoByteCharacters","AllowedCharacters","PricePattern","Init","settings","extend","modalStatusClass","removeClass","addClass","loginStatus","action","click","fadeIn","queue","duration","animate","bottom","top","fadeOut","modalShow","signup","modalOpen","modal","callback","text","promise","done","hide","show","window","width","preventDefault","textToEncode","currentTarget","data","console","log","barcode","bw","bh","container","getElementById","firstChild","removeChild","canvas","createElement","num_cols","height","num_rows","appendChild","ctx","getContext","bcode","fillRect","primatelj","modelPlacanja","pozivNaBroj","opisPlacanja","iznos","html","location","reload","is","ajax","url","rkgTheme","ajaxurl","success","devicePixelRatio","css","opacity","on","signupId","signupName","signupDate","link","val","attr","post","response","dob","oib","tel","submit","dataType","username","password","security","status","message","error","regNonce","regPass","regMail","regFirstname","regLastname","nonce","pass","mail","firstname","lastname","loadingmessage","pob","course","signoutName","resize","Croppie","viewport","boundary","showZoomer","enableOrientation","rotate","readURL","files","reader","FileReader","onload","bind","target","then","dataImg","formData","FormData","append","rkgScript","ajaxUrl","contentType","processData","readAsDataURL","change","File","FileList","Blob","alert","get","gearId","name","email","setCookie","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","checkBetaCookie","betaMessage","rkgStick","pageYOffset","onscroll","scrollIntoView","behavior","block","lost_username","cat","state","slick","infinite","slidesToShow","slidesToScroll","prevArrow","nextArrow","gallery","parent","children","img","src","filter","toggle","find","not","mouseup","has","scroll","next","slideToggle","getParameterByName","href","rename","results","decodeURIComponent","month","year"],"mappings":"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","file":"site.js","sourcesContent":["/* global rkgTheme Croppie */\n\njQuery(document).ready(($) => {\n    /**\n     * Binary Calculator (BC) Arbitrary Precision Mathematics Lib v0.10  (LGPL)\n     * Copy of libbcmath included in PHP5 src\n     * supports bcadd, bcsub, bcmul, bcdiv, bccomp, bcscale, and new function bcround(val, precision)\n     * See PHP Manual for parameters.. functions work identical to the PHP5 funcions\n     * Feel free to use how-ever you want, just email any bug-fixes/improvements to the sourceforge project:\n     *      https://sourceforge.net/projects/bcmath-js/\n     *\n     * Ported from the PHP5 bcmath extension source code,\n     * which uses the libbcmath package...\n     *    Copyright (C) 1991, 1992, 1993, 1994, 1997 Free Software Foundation, Inc.\n     *    Copyright (C) 2000 Philip A. Nelson\n     *     The Free Software Foundation, Inc.\n     *     59 Temple Place, Suite 330\n     *     Boston, MA 02111-1307 USA.\n     *      e-mail:  philnelson@acm.org\n     *     us-mail:  Philip A. Nelson\n     *               Computer Science Department, 9062\n     *               Western Washington University\n     *               Bellingham, WA 98226-9062\n     */\n    var libbcmath={PLUS:\"+\",MINUS:\"-\",BASE:10,scale:0,bc_num:function(){this.n_sign=null;this.n_len=null;this.n_scale=null;this.n_value=null;this.toString=function(){var b,a;a=this.n_value.join(\"\");b=((this.n_sign==libbcmath.PLUS)?\"\":this.n_sign)+a.substr(0,this.n_len);if(this.n_scale>0){b+=\".\"+a.substr(this.n_len,this.n_scale)}return b};this.setScale=function(a){while(this.n_scale<a){this.n_value.push(0);this.n_scale++}while(this.n_scale>a){this.n_value.pop();this.n_scale--}return this}},bc_new_num:function(b,c){var a;a=new libbcmath.bc_num();a.n_sign=libbcmath.PLUS;a.n_len=b;a.n_scale=c;a.n_value=libbcmath.safe_emalloc(1,b+c,0);libbcmath.memset(a.n_value,0,0,b+c);return a},safe_emalloc:function(c,b,a){return Array((c*b)+a)},bc_init_num:function(){return new libbcmath.bc_new_num(1,0)},_bc_rm_leading_zeros:function(a){while((a.n_value[0]===0)&&(a.n_len>1)){a.n_value.shift();a.n_len--}},php_str2num:function(b){var a;a=b.indexOf(\".\");if(a==-1){return libbcmath.bc_str2num(b,0)}else{return libbcmath.bc_str2num(b,(b.length-a))}},CH_VAL:function(a){return a-\"0\"},BCD_CHAR:function(a){return a+\"0\"},isdigit:function(a){return(isNaN(parseInt(a,10))?false:true)},bc_str2num:function(h,c){var g,f,a,b,e,i,d;g=h.split(\"\");a=0;b=0;e=0;i=false;if((g[a]===\"+\")||(g[a]===\"-\")){a++}while(g[a]===\"0\"){a++}while((g[a])%1===0){a++;b++}if(g[a]===\".\"){a++}while((g[a])%1===0){a++;e++}if((g[a])||(b+e===0)){return libbcmath.bc_init_num()}e=libbcmath.MIN(e,c);if(b===0){i=true;b=1}f=libbcmath.bc_new_num(b,e);a=0;if(g[a]===\"-\"){f.n_sign=libbcmath.MINUS;a++}else{f.n_sign=libbcmath.PLUS;if(g[a]===\"+\"){a++}}while(g[a]===\"0\"){a++}d=0;if(i){f.n_value[d++]=0;b=0}for(;b>0;b--){f.n_value[d++]=libbcmath.CH_VAL(g[a++])}if(e>0){a++;for(;e>0;e--){f.n_value[d++]=libbcmath.CH_VAL(g[a++])}}return f},cint:function(b){if(typeof(b)==\"undefined\"){b=0}var a=parseInt(b,10);if(isNaN(a)){a=0}return a},MIN:function(d,c){return((d>c)?c:d)},MAX:function(d,c){return((d>c)?d:c)},ODD:function(b){return(b&1)},memset:function(d,e,c,a){var b;for(b=0;b<a;b++){d[e+b]=c}},memcpy:function(b,f,e,d,a){var c;for(c=0;c<a;c++){b[f+c]=e[d+c]}return true},bc_is_zero:function(a){var b;var c;b=a.n_len+a.n_scale;c=0;while((b>0)&&(a.n_value[c++]===0)){b--}if(b!==0){return false}else{return true}},bc_out_of_memory:function(){throw new Error(\"(BC) Out of memory\")}};libbcmath.bc_add=function(f,d,c){var e,b,a;if(f.n_sign===d.n_sign){e=libbcmath._bc_do_add(f,d,c);e.n_sign=f.n_sign}else{b=libbcmath._bc_do_compare(f,d,false,false);switch(b){case -1:e=libbcmath._bc_do_sub(d,f,c);e.n_sign=d.n_sign;break;case 0:a=libbcmath.MAX(c,libbcmath.MAX(f.n_scale,d.n_scale));e=libbcmath.bc_new_num(1,a);libbcmath.memset(e.n_value,0,0,a+1);break;case 1:e=libbcmath._bc_do_sub(f,d,c);e.n_sign=f.n_sign}}return e};libbcmath.bc_compare=function(b,a){return libbcmath._bc_do_compare(b,a,true,false)};libbcmath._bc_do_compare=function(e,d,c,b){var g,a;var f;if(c&&(e.n_sign!=d.n_sign)){if(e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}if(e.n_len!=d.n_len){if(e.n_len>d.n_len){if(!c||(e.n_sign==libbcmath.PLUS)){return(1)}else{return(-1)}}else{if(!c||(e.n_sign==libbcmath.PLUS)){return(-1)}else{return(1)}}}f=e.n_len+Math.min(e.n_scale,d.n_scale);g=0;a=0;while((f>0)&&(e.n_value[g]==d.n_value[a])){g++;a++;f--}if(b&&(f==1)&&(e.n_scale==d.n_scale)){return(0)}if(f!==0){if(e.n_value[g]>d.n_value[a]){if(!c||e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}else{if(!c||e.n_sign==libbcmath.PLUS){return(-1)}else{return(1)}}}if(e.n_scale!=d.n_scale){if(e.n_scale>d.n_scale){for(f=(e.n_scale-d.n_scale);f>0;f--){if(e.n_value[g++]!==0){if(!c||e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}}}else{for(f=(d.n_scale-e.n_scale);f>0;f--){if(d.n_value[a++]!==0){if(!c||e.n_sign==libbcmath.PLUS){return(-1)}else{return(1)}}}}}return(0)};libbcmath._one_mult=function(d,e,i,f,j,c){var h,g;var b,a;if(f===0){libbcmath.memset(j,0,0,i)}else{if(f==1){libbcmath.memcpy(j,c,d,e,i)}else{b=e+i-1;a=c+i-1;h=0;while(i-->0){g=d[b--]*f+h;j[a--]=g%libbcmath.BASE;h=Math.floor(g/libbcmath.BASE)}if(h!=0){j[a]=h}}}};libbcmath.bc_divide=function(l,k,z){var y;var w;var c,b;var p,o,h,x;var u,A;var j,i,s,q,a,g;var r,m,t,v;var e;var n;var f;var d;if(libbcmath.bc_is_zero(k)){return -1}if(libbcmath.bc_is_zero(l)){return libbcmath.bc_new_num(1,z)}if(k.n_scale===0){if(k.n_len===1&&k.n_value[0]===1){w=libbcmath.bc_new_num(l.n_len,z);w.n_sign=(l.n_sign==k.n_sign?libbcmath.PLUS:libbcmath.MINUS);libbcmath.memset(w.n_value,l.n_len,0,z);libbcmath.memcpy(w.n_value,0,l.n_value,0,l.n_len+libbcmath.MIN(l.n_scale,z))}}s=k.n_scale;h=k.n_len+s-1;while((s>0)&&(k.n_value[h--]===0)){s--}j=l.n_len+s;u=l.n_scale-s;if(u<z){a=z-u}else{a=0}c=libbcmath.safe_emalloc(1,l.n_len+l.n_scale,a+2);if(c===null){libbcmath.bc_out_of_memory()}libbcmath.memset(c,0,0,l.n_len+l.n_scale+a+2);libbcmath.memcpy(c,1,l.n_value,0,l.n_len+l.n_scale);i=k.n_len+s;b=libbcmath.safe_emalloc(1,i,1);if(b===null){libbcmath.bc_out_of_memory()}libbcmath.memcpy(b,0,k.n_value,0,i);b[i]=0;h=0;while(b[h]===0){h++;i--}if(i>j+z){q=z+1;n=true}else{n=false;if(i>j){q=z+1}else{q=j-i+z+1}}w=libbcmath.bc_new_num(q-z,z);libbcmath.memset(w.n_value,0,0,q);e=libbcmath.safe_emalloc(1,i,1);if(e===null){libbcmath.bc_out_of_memory()}if(!n){f=Math.floor(10/(k.n_value[h]+1));if(f!=1){libbcmath._one_mult(c,0,j+u+a+1,f,c,0);libbcmath._one_mult(k.n_value,h,i,f,k.n_value,h)}r=0;if(i>j){x=i-j}else{x=0}while(r<=j+z-i){if(k.n_value[h]==c[r]){m=9}else{m=Math.floor((c[r]*10+c[r+1])/k.n_value[h])}if(k.n_value[h+1]*m>(c[r]*10+c[r+1]-k.n_value[h]*m)*10+c[r+2]){m--;if(k.n_value[h+1]*m>(c[r]*10+c[r+1]-k.n_value[h]*m)*10+c[r+2]){m--}}t=0;if(m!==0){e[0]=0;libbcmath._one_mult(k.n_value,h,i,m,e,1);p=r+i;o=i;for(g=0;g<i+1;g++){if(o<0){A=c[p]-0-t}else{A=c[p]-e[o--]-t}if(A<0){A+=10;t=1}else{t=0}c[p--]=A}}if(t==1){m--;p=r+i;o=i-1;v=0;for(g=0;g<i;g++){if(o<0){A=c[p]+0+v}else{A=c[p]+k.n_value[o--]+v}if(A>9){A-=10;v=1}else{v=0}c[p--]=A}if(v==1){c[p]=(c[p]+1)%10}}w.n_value[x++]=m;r++}}w.n_sign=(l.n_sign==k.n_sign?libbcmath.PLUS:libbcmath.MINUS);if(libbcmath.bc_is_zero(w)){w.n_sign=libbcmath.PLUS}libbcmath._bc_rm_leading_zeros(w);return w};libbcmath._bc_do_add=function(h,g,i){var f;var c,b;var k,e,j;var m,l,a;var d;c=libbcmath.MAX(h.n_scale,g.n_scale);b=libbcmath.MAX(h.n_len,g.n_len)+1;f=libbcmath.bc_new_num(b,libbcmath.MAX(c,i));l=h.n_scale;a=g.n_scale;k=(h.n_len+l-1);e=(g.n_len+a-1);j=(c+b-1);if(l!=a){if(l>a){while(l>a){f.n_value[j--]=h.n_value[k--];l--}}else{while(a>l){f.n_value[j--]=g.n_value[e--];a--}}}l+=h.n_len;a+=g.n_len;m=0;while((l>0)&&(a>0)){d=h.n_value[k--]+g.n_value[e--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j]=d;j--;l--;a--}if(l===0){while(a-->0){d=g.n_value[e--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j--]=d}}else{while(l-->0){d=h.n_value[k--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j--]=d}}if(m==1){f.n_value[j]+=1}libbcmath._bc_rm_leading_zeros(f);return f};libbcmath._bc_do_sub=function(h,g,i){var l;var m,a;var d,f;var k,c,n;var j,e,b;a=libbcmath.MAX(h.n_len,g.n_len);m=libbcmath.MAX(h.n_scale,g.n_scale);f=libbcmath.MIN(h.n_len,g.n_len);d=libbcmath.MIN(h.n_scale,g.n_scale);l=libbcmath.bc_new_num(a,libbcmath.MAX(m,i));k=(h.n_len+h.n_scale-1);c=(g.n_len+g.n_scale-1);n=(a+m-1);j=0;if(h.n_scale!=d){for(e=h.n_scale-d;e>0;e--){l.n_value[n--]=h.n_value[k--]}}else{for(e=g.n_scale-d;e>0;e--){b=0-g.n_value[c--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0;l.n_value[n--]=b}}}for(e=0;e<f+d;e++){b=h.n_value[k--]-g.n_value[c--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0}l.n_value[n--]=b}if(a!=f){for(e=a-f;e>0;e--){b=h.n_value[k--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0}l.n_value[n--]=b}}libbcmath._bc_rm_leading_zeros(l);return l};libbcmath.MUL_BASE_DIGITS=80;libbcmath.MUL_SMALL_DIGITS=(libbcmath.MUL_BASE_DIGITS/4);libbcmath.bc_multiply=function(f,d,h){var c;var b,a;var g,e;b=f.n_len+f.n_scale;a=d.n_len+d.n_scale;g=f.n_scale+d.n_scale;e=libbcmath.MIN(g,libbcmath.MAX(h,libbcmath.MAX(f.n_scale,d.n_scale)));c=libbcmath._bc_rec_mul(f,b,d,a,g);c.n_sign=(f.n_sign==d.n_sign?libbcmath.PLUS:libbcmath.MINUS);c.n_len=a+b+1-g;c.n_scale=e;libbcmath._bc_rm_leading_zeros(c);if(libbcmath.bc_is_zero(c)){c.n_sign=libbcmath.PLUS}return c};libbcmath.new_sub_num=function(b,d,c){var a=new libbcmath.bc_num();a.n_sign=libbcmath.PLUS;a.n_len=b;a.n_scale=d;a.n_value=c;return a};libbcmath._bc_simp_mul=function(i,b,h,m,a){var j;var k,c,f;var n,l;var e,g,d;d=b+m+1;j=libbcmath.bc_new_num(d,0);n=b-1;l=m-1;f=d-1;g=0;for(e=0;e<d-1;e++){k=n-libbcmath.MAX(0,e-m+1);c=l-libbcmath.MIN(e,m-1);while((k>=0)&&(c<=l)){g+=i.n_value[k--]*h.n_value[c++]}j.n_value[f--]=Math.floor(g%libbcmath.BASE);g=Math.floor(g/libbcmath.BASE)}j.n_value[f]=g;return j};libbcmath._bc_shift_addsub=function(b,g,a,d){var c,h;var e,f;e=g.n_len;if(g.n_value[0]===0){e--}if(!(b.n_len+b.n_scale>=a+e)){throw new Error(\"len + scale < shift + count\")}c=b.n_len+b.n_scale-a-1;h=g.n_len=1;f=0;if(d){while(e--){b.n_value[c]-=g.n_value[h--]+f;if(b.n_value[c]<0){f=1;b.n_value[c--]+=libbcmath.BASE}else{f=0;c--}}while(f){b.n_value[c]-=f;if(b.n_value[c]<0){b.n_value[c--]+=libbcmath.BASE}else{f=0}}}else{while(e--){b.n_value[c]+=g.n_value[h--]+f;if(b.n_value[c]>(libbcmath.BASE-1)){f=1;b.n_value[c--]-=libbcmath.BASE}else{f=0;c--}}while(f){b.n_value[c]+=f;if(b.n_value[c]>(libbcmath.BASE-1)){b.n_value[c--]-=libbcmath.BASE}else{f=0}}}return true};libbcmath._bc_rec_mul=function(m,i,l,j,c){var k;var s,r,h,g;var f,p;var d,b,a,y,x;var o,w,e;var q,t;if((i+j)<libbcmath.MUL_BASE_DIGITS||i<libbcmath.MUL_SMALL_DIGITS||j<libbcmath.MUL_SMALL_DIGITS){return libbcmath._bc_simp_mul(m,i,l,j,c)}o=Math.floor((libbcmath.MAX(i,j)+1)/2);if(i<o){r=libbcmath.bc_init_num();s=libbcmath.new_sub_num(i,0,m.n_value)}else{r=libbcmath.new_sub_num(i-o,0,m.n_value);s=libbcmath.new_sub_num(o,0,m.n_value+i-o)}if(j<o){g=libbcmath.bc_init_num();h=libbcmath.new_sub_num(j,0,l.n_value)}else{g=libbcmath.new_sub_num(j-o,0,l.n_value);h=libbcmath.new_sub_num(o,0,l.n_value+j-o)}libbcmath._bc_rm_leading_zeros(r);libbcmath._bc_rm_leading_zeros(s);f=s.n_len;libbcmath._bc_rm_leading_zeros(g);libbcmath._bc_rm_leading_zeros(h);p=h.n_len;e=libbcmath.bc_is_zero(r)||libbcmath.bc_is_zero(g);y=libbcmath.bc_init_num();x=libbcmath.bc_init_num();y=libbcmath.bc_sub(r,s,0);q=y.n_len;x=libbcmath.bc_sub(h,g,0);t=x.n_len;if(e){d=libbcmath.bc_init_num()}else{d=libbcmath._bc_rec_mul(r,r.n_len,g,g.n_len,0)}if(libbcmath.bc_is_zero(y)||libbcmath.bc_is_zero(x)){b=libbcmath.bc_init_num()}else{b=libbcmath._bc_rec_mul(y,q,x,t,0)}if(libbcmath.bc_is_zero(s)||libbcmath.bc_is_zero(h)){a=libbcmath.bc_init_num()}else{a=libbcmath._bc_rec_mul(s,s.n_len,h,h.n_len,0)}w=i+j+1;k=libbcmath.bc_new_num(w,0);if(!e){libbcmath._bc_shift_addsub(k,d,2*o,0);libbcmath._bc_shift_addsub(k,d,o,0)}libbcmath._bc_shift_addsub(k,a,o,0);libbcmath._bc_shift_addsub(k,a,0,0);libbcmath._bc_shift_addsub(k,b,o,y.n_sign!=x.n_sign);return k};libbcmath.bc_sub=function(e,d,c){var f;var b,a;if(e.n_sign!=d.n_sign){f=libbcmath._bc_do_add(e,d,c);f.n_sign=e.n_sign}else{b=libbcmath._bc_do_compare(e,d,false,false);switch(b){case -1:f=libbcmath._bc_do_sub(d,e,c);f.n_sign=(d.n_sign==libbcmath.PLUS?libbcmath.MINUS:libbcmath.PLUS);break;case 0:a=libbcmath.MAX(c,libbcmath.MAX(e.n_scale,d.n_scale));f=libbcmath.bc_new_num(1,a);libbcmath.memset(f.n_value,0,0,a+1);break;case 1:f=libbcmath._bc_do_sub(e,d,c);f.n_sign=e.n_sign;break}}return f};function bcadd(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_add(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcsub(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_sub(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bccomp(a,c,e){var d,b;if(typeof(e)==\"undefined\"){e=libbcmath.scale}e=((e<0)?0:e);d=libbcmath.bc_init_num();b=libbcmath.bc_init_num();d=libbcmath.bc_str2num(a.toString(),e);b=libbcmath.bc_str2num(c.toString(),e);return libbcmath.bc_compare(d,b,e)}function bcscale(a){a=parseInt(a,10);if(isNaN(a)){return false}if(a<0){return false}libbcmath.scale=a;return true}function bcdiv(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_divide(e,c,f);if(a===-1){throw new Error(11,\"(BC) Division by zero\")}if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcmul(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_multiply(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcround(d,b){var a,c;a=\"0.\"+Array(b+1).join(\"0\")+\"5\";if(d.toString().substring(0,1)==\"-\"){a=\"-\"+a}c=bcadd(d,a,b);return c};\n    /**\n     * PDF417 - 2D Barcode generator (LGPLv3)\n     *\n     * Ported from PHP - PDF417 class, version 1.0.005, from TCPDF library (http://www.tcpdf.org/)\n     */\n    var PDF417 = {\n    \tROWHEIGHT: 4,\n    \tQUIETH: 2,\n    \tQUIETV: 2,\n    \n    \tbarcode_array: {},\n    \tstart_pattern: '11111111010101000',\n    \tstop_pattern: '111111101000101001',\n    \n    \t/**\n    \t * Array of text Compaction Sub-Modes (values 0xFB - 0xFF are used for submode changers).\t \n    \t */\n    \ttextsubmodes: [\n    \t\t[0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x20,0xFD,0xFE,0xFF], // Alpha\n    \t\t[0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x20,0xFD,0xFE,0xFF], // Lower\n    \t\t[0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x26,0x0d,0x09,0x2c,0x3a,0x23,0x2d,0x2e,0x24,0x2f,0x2b,0x25,0x2a,0x3d,0x5e,0xFB,0x20,0xFD,0xFE,0xFF], // Mixed\n    \t\t[0x3b,0x3c,0x3e,0x40,0x5b,0x5c,0x5d,0x5f,0x60,0x7e,0x21,0x0d,0x09,0x2c,0x3a,0x0a,0x2d,0x2e,0x24,0x2f,0x22,0x7c,0x2a,0x28,0x29,0x3f,0x7b,0x7d,0x27,0xFF] // Puntuaction\n    \t],\n    \n    \t/**\n    \t * Array of switching codes for Text Compaction Sub-Modes.\t \n    \t */\n    \ttextlatch: {\n    \t\t'01': [27], '02': [28], '03': [28,25], //\n    \t\t'10': [28,28], '12': [28], '13': [28,25], //\n    \t\t'20': [28], '21': [27], '23': [25], //\n    \t\t'30': [29], '31': [29,27], '32': [29,28] //\n    \t},\n    \n    \t/**\n    \t * Clusters of codewords (0, 3, 6)<br/>\n    \t * Values are hex equivalents of binary representation of bars (1 = bar, 0 = space).<br/>\n    \t * The codewords numbered from 900 to 928 have special meaning, some enable to switch between modes in order to optimise the code:\n    \t * <ul>\n    \t * <li>900 : Switch to \"Text\" mode</li>\n    \t * <li>901 : Switch to \"Byte\" mode</li>\n    \t * <li>902 : Switch to \"Numeric\" mode</li>\n    \t * <li>903 - 912 : Reserved</li>\n    \t * <li>913 : Switch to \"Octet\" only for the next codeword</li>\n    \t * <li>914 - 920 : Reserved</li>\n    \t * <li>921 : Initialization</li>\n    \t * <li>922 : Terminator codeword for Macro PDF control block</li>\n    \t * <li>923 : Sequence tag to identify the beginning of optional fields in the Macro PDF control block</li>\n    \t * <li>924 : Switch to \"Byte\" mode (If the total number of byte is multiple of 6)</li>\n    \t * <li>925 : Identifier for a user defined Extended Channel Interpretation (ECI)</li>\n    \t * <li>926 : Identifier for a general purpose ECI format</li>\n    \t * <li>927 : Identifier for an ECI of a character set or code page</li>\n    \t * <li>928 : Macro marker codeword to indicate the beginning of a Macro PDF Control Block</li>\n    \t * </ul>\t \n    \t */\n    \tclusters: [\n    \t\t[ // cluster 0 -----------------------------------------------------------------------\n    \t\t\t0x1d5c0,0x1eaf0,0x1f57c,0x1d4e0,0x1ea78,0x1f53e,0x1a8c0,0x1d470,0x1a860,0x15040, //  10\n    \t\t\t0x1a830,0x15020,0x1adc0,0x1d6f0,0x1eb7c,0x1ace0,0x1d678,0x1eb3e,0x158c0,0x1ac70, //  20\n    \t\t\t0x15860,0x15dc0,0x1aef0,0x1d77c,0x15ce0,0x1ae78,0x1d73e,0x15c70,0x1ae3c,0x15ef0, //  30\n    \t\t\t0x1af7c,0x15e78,0x1af3e,0x15f7c,0x1f5fa,0x1d2e0,0x1e978,0x1f4be,0x1a4c0,0x1d270, //  40\n    \t\t\t0x1e93c,0x1a460,0x1d238,0x14840,0x1a430,0x1d21c,0x14820,0x1a418,0x14810,0x1a6e0, //  50\n    \t\t\t0x1d378,0x1e9be,0x14cc0,0x1a670,0x1d33c,0x14c60,0x1a638,0x1d31e,0x14c30,0x1a61c, //  60\n    \t\t\t0x14ee0,0x1a778,0x1d3be,0x14e70,0x1a73c,0x14e38,0x1a71e,0x14f78,0x1a7be,0x14f3c, //  70\n    \t\t\t0x14f1e,0x1a2c0,0x1d170,0x1e8bc,0x1a260,0x1d138,0x1e89e,0x14440,0x1a230,0x1d11c, //  80\n    \t\t\t0x14420,0x1a218,0x14410,0x14408,0x146c0,0x1a370,0x1d1bc,0x14660,0x1a338,0x1d19e, //  90\n    \t\t\t0x14630,0x1a31c,0x14618,0x1460c,0x14770,0x1a3bc,0x14738,0x1a39e,0x1471c,0x147bc, // 100\n    \t\t\t0x1a160,0x1d0b8,0x1e85e,0x14240,0x1a130,0x1d09c,0x14220,0x1a118,0x1d08e,0x14210, // 110\n    \t\t\t0x1a10c,0x14208,0x1a106,0x14360,0x1a1b8,0x1d0de,0x14330,0x1a19c,0x14318,0x1a18e, // 120\n    \t\t\t0x1430c,0x14306,0x1a1de,0x1438e,0x14140,0x1a0b0,0x1d05c,0x14120,0x1a098,0x1d04e, // 130\n    \t\t\t0x14110,0x1a08c,0x14108,0x1a086,0x14104,0x141b0,0x14198,0x1418c,0x140a0,0x1d02e, // 140\n    \t\t\t0x1a04c,0x1a046,0x14082,0x1cae0,0x1e578,0x1f2be,0x194c0,0x1ca70,0x1e53c,0x19460, // 150\n    \t\t\t0x1ca38,0x1e51e,0x12840,0x19430,0x12820,0x196e0,0x1cb78,0x1e5be,0x12cc0,0x19670, // 160\n    \t\t\t0x1cb3c,0x12c60,0x19638,0x12c30,0x12c18,0x12ee0,0x19778,0x1cbbe,0x12e70,0x1973c, // 170\n    \t\t\t0x12e38,0x12e1c,0x12f78,0x197be,0x12f3c,0x12fbe,0x1dac0,0x1ed70,0x1f6bc,0x1da60, // 180\n    \t\t\t0x1ed38,0x1f69e,0x1b440,0x1da30,0x1ed1c,0x1b420,0x1da18,0x1ed0e,0x1b410,0x1da0c, // 190\n    \t\t\t0x192c0,0x1c970,0x1e4bc,0x1b6c0,0x19260,0x1c938,0x1e49e,0x1b660,0x1db38,0x1ed9e, // 200\n    \t\t\t0x16c40,0x12420,0x19218,0x1c90e,0x16c20,0x1b618,0x16c10,0x126c0,0x19370,0x1c9bc, // 210\n    \t\t\t0x16ec0,0x12660,0x19338,0x1c99e,0x16e60,0x1b738,0x1db9e,0x16e30,0x12618,0x16e18, // 220\n    \t\t\t0x12770,0x193bc,0x16f70,0x12738,0x1939e,0x16f38,0x1b79e,0x16f1c,0x127bc,0x16fbc, // 230\n    \t\t\t0x1279e,0x16f9e,0x1d960,0x1ecb8,0x1f65e,0x1b240,0x1d930,0x1ec9c,0x1b220,0x1d918, // 240\n    \t\t\t0x1ec8e,0x1b210,0x1d90c,0x1b208,0x1b204,0x19160,0x1c8b8,0x1e45e,0x1b360,0x19130, // 250\n    \t\t\t0x1c89c,0x16640,0x12220,0x1d99c,0x1c88e,0x16620,0x12210,0x1910c,0x16610,0x1b30c, // 260\n    \t\t\t0x19106,0x12204,0x12360,0x191b8,0x1c8de,0x16760,0x12330,0x1919c,0x16730,0x1b39c, // 270\n    \t\t\t0x1918e,0x16718,0x1230c,0x12306,0x123b8,0x191de,0x167b8,0x1239c,0x1679c,0x1238e, // 280\n    \t\t\t0x1678e,0x167de,0x1b140,0x1d8b0,0x1ec5c,0x1b120,0x1d898,0x1ec4e,0x1b110,0x1d88c, // 290\n    \t\t\t0x1b108,0x1d886,0x1b104,0x1b102,0x12140,0x190b0,0x1c85c,0x16340,0x12120,0x19098, // 300\n    \t\t\t0x1c84e,0x16320,0x1b198,0x1d8ce,0x16310,0x12108,0x19086,0x16308,0x1b186,0x16304, // 310\n    \t\t\t0x121b0,0x190dc,0x163b0,0x12198,0x190ce,0x16398,0x1b1ce,0x1638c,0x12186,0x16386, // 320\n    \t\t\t0x163dc,0x163ce,0x1b0a0,0x1d858,0x1ec2e,0x1b090,0x1d84c,0x1b088,0x1d846,0x1b084, // 330\n    \t\t\t0x1b082,0x120a0,0x19058,0x1c82e,0x161a0,0x12090,0x1904c,0x16190,0x1b0cc,0x19046, // 340\n    \t\t\t0x16188,0x12084,0x16184,0x12082,0x120d8,0x161d8,0x161cc,0x161c6,0x1d82c,0x1d826, // 350\n    \t\t\t0x1b042,0x1902c,0x12048,0x160c8,0x160c4,0x160c2,0x18ac0,0x1c570,0x1e2bc,0x18a60, // 360\n    \t\t\t0x1c538,0x11440,0x18a30,0x1c51c,0x11420,0x18a18,0x11410,0x11408,0x116c0,0x18b70, // 370\n    \t\t\t0x1c5bc,0x11660,0x18b38,0x1c59e,0x11630,0x18b1c,0x11618,0x1160c,0x11770,0x18bbc, // 380\n    \t\t\t0x11738,0x18b9e,0x1171c,0x117bc,0x1179e,0x1cd60,0x1e6b8,0x1f35e,0x19a40,0x1cd30, // 390\n    \t\t\t0x1e69c,0x19a20,0x1cd18,0x1e68e,0x19a10,0x1cd0c,0x19a08,0x1cd06,0x18960,0x1c4b8, // 400\n    \t\t\t0x1e25e,0x19b60,0x18930,0x1c49c,0x13640,0x11220,0x1cd9c,0x1c48e,0x13620,0x19b18, // 410\n    \t\t\t0x1890c,0x13610,0x11208,0x13608,0x11360,0x189b8,0x1c4de,0x13760,0x11330,0x1cdde, // 420\n    \t\t\t0x13730,0x19b9c,0x1898e,0x13718,0x1130c,0x1370c,0x113b8,0x189de,0x137b8,0x1139c, // 430\n    \t\t\t0x1379c,0x1138e,0x113de,0x137de,0x1dd40,0x1eeb0,0x1f75c,0x1dd20,0x1ee98,0x1f74e, // 440\n    \t\t\t0x1dd10,0x1ee8c,0x1dd08,0x1ee86,0x1dd04,0x19940,0x1ccb0,0x1e65c,0x1bb40,0x19920, // 450\n    \t\t\t0x1eedc,0x1e64e,0x1bb20,0x1dd98,0x1eece,0x1bb10,0x19908,0x1cc86,0x1bb08,0x1dd86, // 460\n    \t\t\t0x19902,0x11140,0x188b0,0x1c45c,0x13340,0x11120,0x18898,0x1c44e,0x17740,0x13320, // 470\n    \t\t\t0x19998,0x1ccce,0x17720,0x1bb98,0x1ddce,0x18886,0x17710,0x13308,0x19986,0x17708, // 480\n    \t\t\t0x11102,0x111b0,0x188dc,0x133b0,0x11198,0x188ce,0x177b0,0x13398,0x199ce,0x17798, // 490\n    \t\t\t0x1bbce,0x11186,0x13386,0x111dc,0x133dc,0x111ce,0x177dc,0x133ce,0x1dca0,0x1ee58, // 500\n    \t\t\t0x1f72e,0x1dc90,0x1ee4c,0x1dc88,0x1ee46,0x1dc84,0x1dc82,0x198a0,0x1cc58,0x1e62e, // 510\n    \t\t\t0x1b9a0,0x19890,0x1ee6e,0x1b990,0x1dccc,0x1cc46,0x1b988,0x19884,0x1b984,0x19882, // 520\n    \t\t\t0x1b982,0x110a0,0x18858,0x1c42e,0x131a0,0x11090,0x1884c,0x173a0,0x13190,0x198cc, // 530\n    \t\t\t0x18846,0x17390,0x1b9cc,0x11084,0x17388,0x13184,0x11082,0x13182,0x110d8,0x1886e, // 540\n    \t\t\t0x131d8,0x110cc,0x173d8,0x131cc,0x110c6,0x173cc,0x131c6,0x110ee,0x173ee,0x1dc50, // 550\n    \t\t\t0x1ee2c,0x1dc48,0x1ee26,0x1dc44,0x1dc42,0x19850,0x1cc2c,0x1b8d0,0x19848,0x1cc26, // 560\n    \t\t\t0x1b8c8,0x1dc66,0x1b8c4,0x19842,0x1b8c2,0x11050,0x1882c,0x130d0,0x11048,0x18826, // 570\n    \t\t\t0x171d0,0x130c8,0x19866,0x171c8,0x1b8e6,0x11042,0x171c4,0x130c2,0x171c2,0x130ec, // 580\n    \t\t\t0x171ec,0x171e6,0x1ee16,0x1dc22,0x1cc16,0x19824,0x19822,0x11028,0x13068,0x170e8, // 590\n    \t\t\t0x11022,0x13062,0x18560,0x10a40,0x18530,0x10a20,0x18518,0x1c28e,0x10a10,0x1850c, // 600\n    \t\t\t0x10a08,0x18506,0x10b60,0x185b8,0x1c2de,0x10b30,0x1859c,0x10b18,0x1858e,0x10b0c, // 610\n    \t\t\t0x10b06,0x10bb8,0x185de,0x10b9c,0x10b8e,0x10bde,0x18d40,0x1c6b0,0x1e35c,0x18d20, // 620\n    \t\t\t0x1c698,0x18d10,0x1c68c,0x18d08,0x1c686,0x18d04,0x10940,0x184b0,0x1c25c,0x11b40, // 630\n    \t\t\t0x10920,0x1c6dc,0x1c24e,0x11b20,0x18d98,0x1c6ce,0x11b10,0x10908,0x18486,0x11b08, // 640\n    \t\t\t0x18d86,0x10902,0x109b0,0x184dc,0x11bb0,0x10998,0x184ce,0x11b98,0x18dce,0x11b8c, // 650\n    \t\t\t0x10986,0x109dc,0x11bdc,0x109ce,0x11bce,0x1cea0,0x1e758,0x1f3ae,0x1ce90,0x1e74c, // 660\n    \t\t\t0x1ce88,0x1e746,0x1ce84,0x1ce82,0x18ca0,0x1c658,0x19da0,0x18c90,0x1c64c,0x19d90, // 670\n    \t\t\t0x1cecc,0x1c646,0x19d88,0x18c84,0x19d84,0x18c82,0x19d82,0x108a0,0x18458,0x119a0, // 680\n    \t\t\t0x10890,0x1c66e,0x13ba0,0x11990,0x18ccc,0x18446,0x13b90,0x19dcc,0x10884,0x13b88, // 690\n    \t\t\t0x11984,0x10882,0x11982,0x108d8,0x1846e,0x119d8,0x108cc,0x13bd8,0x119cc,0x108c6, // 700\n    \t\t\t0x13bcc,0x119c6,0x108ee,0x119ee,0x13bee,0x1ef50,0x1f7ac,0x1ef48,0x1f7a6,0x1ef44, // 710\n    \t\t\t0x1ef42,0x1ce50,0x1e72c,0x1ded0,0x1ef6c,0x1e726,0x1dec8,0x1ef66,0x1dec4,0x1ce42, // 720\n    \t\t\t0x1dec2,0x18c50,0x1c62c,0x19cd0,0x18c48,0x1c626,0x1bdd0,0x19cc8,0x1ce66,0x1bdc8, // 730\n    \t\t\t0x1dee6,0x18c42,0x1bdc4,0x19cc2,0x1bdc2,0x10850,0x1842c,0x118d0,0x10848,0x18426, // 740\n    \t\t\t0x139d0,0x118c8,0x18c66,0x17bd0,0x139c8,0x19ce6,0x10842,0x17bc8,0x1bde6,0x118c2, // 750\n    \t\t\t0x17bc4,0x1086c,0x118ec,0x10866,0x139ec,0x118e6,0x17bec,0x139e6,0x17be6,0x1ef28, // 760\n    \t\t\t0x1f796,0x1ef24,0x1ef22,0x1ce28,0x1e716,0x1de68,0x1ef36,0x1de64,0x1ce22,0x1de62, // 770\n    \t\t\t0x18c28,0x1c616,0x19c68,0x18c24,0x1bce8,0x19c64,0x18c22,0x1bce4,0x19c62,0x1bce2, // 780\n    \t\t\t0x10828,0x18416,0x11868,0x18c36,0x138e8,0x11864,0x10822,0x179e8,0x138e4,0x11862, // 790\n    \t\t\t0x179e4,0x138e2,0x179e2,0x11876,0x179f6,0x1ef12,0x1de34,0x1de32,0x19c34,0x1bc74, // 800\n    \t\t\t0x1bc72,0x11834,0x13874,0x178f4,0x178f2,0x10540,0x10520,0x18298,0x10510,0x10508, // 810\n    \t\t\t0x10504,0x105b0,0x10598,0x1058c,0x10586,0x105dc,0x105ce,0x186a0,0x18690,0x1c34c, // 820\n    \t\t\t0x18688,0x1c346,0x18684,0x18682,0x104a0,0x18258,0x10da0,0x186d8,0x1824c,0x10d90, // 830\n    \t\t\t0x186cc,0x10d88,0x186c6,0x10d84,0x10482,0x10d82,0x104d8,0x1826e,0x10dd8,0x186ee, // 840\n    \t\t\t0x10dcc,0x104c6,0x10dc6,0x104ee,0x10dee,0x1c750,0x1c748,0x1c744,0x1c742,0x18650, // 850\n    \t\t\t0x18ed0,0x1c76c,0x1c326,0x18ec8,0x1c766,0x18ec4,0x18642,0x18ec2,0x10450,0x10cd0, // 860\n    \t\t\t0x10448,0x18226,0x11dd0,0x10cc8,0x10444,0x11dc8,0x10cc4,0x10442,0x11dc4,0x10cc2, // 870\n    \t\t\t0x1046c,0x10cec,0x10466,0x11dec,0x10ce6,0x11de6,0x1e7a8,0x1e7a4,0x1e7a2,0x1c728, // 880\n    \t\t\t0x1cf68,0x1e7b6,0x1cf64,0x1c722,0x1cf62,0x18628,0x1c316,0x18e68,0x1c736,0x19ee8, // 890\n    \t\t\t0x18e64,0x18622,0x19ee4,0x18e62,0x19ee2,0x10428,0x18216,0x10c68,0x18636,0x11ce8, // 900\n    \t\t\t0x10c64,0x10422,0x13de8,0x11ce4,0x10c62,0x13de4,0x11ce2,0x10436,0x10c76,0x11cf6, // 910\n    \t\t\t0x13df6,0x1f7d4,0x1f7d2,0x1e794,0x1efb4,0x1e792,0x1efb2,0x1c714,0x1cf34,0x1c712, // 920\n    \t\t\t0x1df74,0x1cf32,0x1df72,0x18614,0x18e34,0x18612,0x19e74,0x18e32,0x1bef4],        // 929\n    \t\t[ // cluster 3 -----------------------------------------------------------------------\n    \t\t\t0x1f560,0x1fab8,0x1ea40,0x1f530,0x1fa9c,0x1ea20,0x1f518,0x1fa8e,0x1ea10,0x1f50c, //  10\n    \t\t\t0x1ea08,0x1f506,0x1ea04,0x1eb60,0x1f5b8,0x1fade,0x1d640,0x1eb30,0x1f59c,0x1d620, //  20\n    \t\t\t0x1eb18,0x1f58e,0x1d610,0x1eb0c,0x1d608,0x1eb06,0x1d604,0x1d760,0x1ebb8,0x1f5de, //  30\n    \t\t\t0x1ae40,0x1d730,0x1eb9c,0x1ae20,0x1d718,0x1eb8e,0x1ae10,0x1d70c,0x1ae08,0x1d706, //  40\n    \t\t\t0x1ae04,0x1af60,0x1d7b8,0x1ebde,0x15e40,0x1af30,0x1d79c,0x15e20,0x1af18,0x1d78e, //  50\n    \t\t\t0x15e10,0x1af0c,0x15e08,0x1af06,0x15f60,0x1afb8,0x1d7de,0x15f30,0x1af9c,0x15f18, //  60\n    \t\t\t0x1af8e,0x15f0c,0x15fb8,0x1afde,0x15f9c,0x15f8e,0x1e940,0x1f4b0,0x1fa5c,0x1e920, //  70\n    \t\t\t0x1f498,0x1fa4e,0x1e910,0x1f48c,0x1e908,0x1f486,0x1e904,0x1e902,0x1d340,0x1e9b0, //  80\n    \t\t\t0x1f4dc,0x1d320,0x1e998,0x1f4ce,0x1d310,0x1e98c,0x1d308,0x1e986,0x1d304,0x1d302, //  90\n    \t\t\t0x1a740,0x1d3b0,0x1e9dc,0x1a720,0x1d398,0x1e9ce,0x1a710,0x1d38c,0x1a708,0x1d386, // 100\n    \t\t\t0x1a704,0x1a702,0x14f40,0x1a7b0,0x1d3dc,0x14f20,0x1a798,0x1d3ce,0x14f10,0x1a78c, // 110\n    \t\t\t0x14f08,0x1a786,0x14f04,0x14fb0,0x1a7dc,0x14f98,0x1a7ce,0x14f8c,0x14f86,0x14fdc, // 120\n    \t\t\t0x14fce,0x1e8a0,0x1f458,0x1fa2e,0x1e890,0x1f44c,0x1e888,0x1f446,0x1e884,0x1e882, // 130\n    \t\t\t0x1d1a0,0x1e8d8,0x1f46e,0x1d190,0x1e8cc,0x1d188,0x1e8c6,0x1d184,0x1d182,0x1a3a0, // 140\n    \t\t\t0x1d1d8,0x1e8ee,0x1a390,0x1d1cc,0x1a388,0x1d1c6,0x1a384,0x1a382,0x147a0,0x1a3d8, // 150\n    \t\t\t0x1d1ee,0x14790,0x1a3cc,0x14788,0x1a3c6,0x14784,0x14782,0x147d8,0x1a3ee,0x147cc, // 160\n    \t\t\t0x147c6,0x147ee,0x1e850,0x1f42c,0x1e848,0x1f426,0x1e844,0x1e842,0x1d0d0,0x1e86c, // 170\n    \t\t\t0x1d0c8,0x1e866,0x1d0c4,0x1d0c2,0x1a1d0,0x1d0ec,0x1a1c8,0x1d0e6,0x1a1c4,0x1a1c2, // 180\n    \t\t\t0x143d0,0x1a1ec,0x143c8,0x1a1e6,0x143c4,0x143c2,0x143ec,0x143e6,0x1e828,0x1f416, // 190\n    \t\t\t0x1e824,0x1e822,0x1d068,0x1e836,0x1d064,0x1d062,0x1a0e8,0x1d076,0x1a0e4,0x1a0e2, // 200\n    \t\t\t0x141e8,0x1a0f6,0x141e4,0x141e2,0x1e814,0x1e812,0x1d034,0x1d032,0x1a074,0x1a072, // 210\n    \t\t\t0x1e540,0x1f2b0,0x1f95c,0x1e520,0x1f298,0x1f94e,0x1e510,0x1f28c,0x1e508,0x1f286, // 220\n    \t\t\t0x1e504,0x1e502,0x1cb40,0x1e5b0,0x1f2dc,0x1cb20,0x1e598,0x1f2ce,0x1cb10,0x1e58c, // 230\n    \t\t\t0x1cb08,0x1e586,0x1cb04,0x1cb02,0x19740,0x1cbb0,0x1e5dc,0x19720,0x1cb98,0x1e5ce, // 240\n    \t\t\t0x19710,0x1cb8c,0x19708,0x1cb86,0x19704,0x19702,0x12f40,0x197b0,0x1cbdc,0x12f20, // 250\n    \t\t\t0x19798,0x1cbce,0x12f10,0x1978c,0x12f08,0x19786,0x12f04,0x12fb0,0x197dc,0x12f98, // 260\n    \t\t\t0x197ce,0x12f8c,0x12f86,0x12fdc,0x12fce,0x1f6a0,0x1fb58,0x16bf0,0x1f690,0x1fb4c, // 270\n    \t\t\t0x169f8,0x1f688,0x1fb46,0x168fc,0x1f684,0x1f682,0x1e4a0,0x1f258,0x1f92e,0x1eda0, // 280\n    \t\t\t0x1e490,0x1fb6e,0x1ed90,0x1f6cc,0x1f246,0x1ed88,0x1e484,0x1ed84,0x1e482,0x1ed82, // 290\n    \t\t\t0x1c9a0,0x1e4d8,0x1f26e,0x1dba0,0x1c990,0x1e4cc,0x1db90,0x1edcc,0x1e4c6,0x1db88, // 300\n    \t\t\t0x1c984,0x1db84,0x1c982,0x1db82,0x193a0,0x1c9d8,0x1e4ee,0x1b7a0,0x19390,0x1c9cc, // 310\n    \t\t\t0x1b790,0x1dbcc,0x1c9c6,0x1b788,0x19384,0x1b784,0x19382,0x1b782,0x127a0,0x193d8, // 320\n    \t\t\t0x1c9ee,0x16fa0,0x12790,0x193cc,0x16f90,0x1b7cc,0x193c6,0x16f88,0x12784,0x16f84, // 330\n    \t\t\t0x12782,0x127d8,0x193ee,0x16fd8,0x127cc,0x16fcc,0x127c6,0x16fc6,0x127ee,0x1f650, // 340\n    \t\t\t0x1fb2c,0x165f8,0x1f648,0x1fb26,0x164fc,0x1f644,0x1647e,0x1f642,0x1e450,0x1f22c, // 350\n    \t\t\t0x1ecd0,0x1e448,0x1f226,0x1ecc8,0x1f666,0x1ecc4,0x1e442,0x1ecc2,0x1c8d0,0x1e46c, // 360\n    \t\t\t0x1d9d0,0x1c8c8,0x1e466,0x1d9c8,0x1ece6,0x1d9c4,0x1c8c2,0x1d9c2,0x191d0,0x1c8ec, // 370\n    \t\t\t0x1b3d0,0x191c8,0x1c8e6,0x1b3c8,0x1d9e6,0x1b3c4,0x191c2,0x1b3c2,0x123d0,0x191ec, // 380\n    \t\t\t0x167d0,0x123c8,0x191e6,0x167c8,0x1b3e6,0x167c4,0x123c2,0x167c2,0x123ec,0x167ec, // 390\n    \t\t\t0x123e6,0x167e6,0x1f628,0x1fb16,0x162fc,0x1f624,0x1627e,0x1f622,0x1e428,0x1f216, // 400\n    \t\t\t0x1ec68,0x1f636,0x1ec64,0x1e422,0x1ec62,0x1c868,0x1e436,0x1d8e8,0x1c864,0x1d8e4, // 410\n    \t\t\t0x1c862,0x1d8e2,0x190e8,0x1c876,0x1b1e8,0x1d8f6,0x1b1e4,0x190e2,0x1b1e2,0x121e8, // 420\n    \t\t\t0x190f6,0x163e8,0x121e4,0x163e4,0x121e2,0x163e2,0x121f6,0x163f6,0x1f614,0x1617e, // 430\n    \t\t\t0x1f612,0x1e414,0x1ec34,0x1e412,0x1ec32,0x1c834,0x1d874,0x1c832,0x1d872,0x19074, // 440\n    \t\t\t0x1b0f4,0x19072,0x1b0f2,0x120f4,0x161f4,0x120f2,0x161f2,0x1f60a,0x1e40a,0x1ec1a, // 450\n    \t\t\t0x1c81a,0x1d83a,0x1903a,0x1b07a,0x1e2a0,0x1f158,0x1f8ae,0x1e290,0x1f14c,0x1e288, // 460\n    \t\t\t0x1f146,0x1e284,0x1e282,0x1c5a0,0x1e2d8,0x1f16e,0x1c590,0x1e2cc,0x1c588,0x1e2c6, // 470\n    \t\t\t0x1c584,0x1c582,0x18ba0,0x1c5d8,0x1e2ee,0x18b90,0x1c5cc,0x18b88,0x1c5c6,0x18b84, // 480\n    \t\t\t0x18b82,0x117a0,0x18bd8,0x1c5ee,0x11790,0x18bcc,0x11788,0x18bc6,0x11784,0x11782, // 490\n    \t\t\t0x117d8,0x18bee,0x117cc,0x117c6,0x117ee,0x1f350,0x1f9ac,0x135f8,0x1f348,0x1f9a6, // 500\n    \t\t\t0x134fc,0x1f344,0x1347e,0x1f342,0x1e250,0x1f12c,0x1e6d0,0x1e248,0x1f126,0x1e6c8, // 510\n    \t\t\t0x1f366,0x1e6c4,0x1e242,0x1e6c2,0x1c4d0,0x1e26c,0x1cdd0,0x1c4c8,0x1e266,0x1cdc8, // 520\n    \t\t\t0x1e6e6,0x1cdc4,0x1c4c2,0x1cdc2,0x189d0,0x1c4ec,0x19bd0,0x189c8,0x1c4e6,0x19bc8, // 530\n    \t\t\t0x1cde6,0x19bc4,0x189c2,0x19bc2,0x113d0,0x189ec,0x137d0,0x113c8,0x189e6,0x137c8, // 540\n    \t\t\t0x19be6,0x137c4,0x113c2,0x137c2,0x113ec,0x137ec,0x113e6,0x137e6,0x1fba8,0x175f0, // 550\n    \t\t\t0x1bafc,0x1fba4,0x174f8,0x1ba7e,0x1fba2,0x1747c,0x1743e,0x1f328,0x1f996,0x132fc, // 560\n    \t\t\t0x1f768,0x1fbb6,0x176fc,0x1327e,0x1f764,0x1f322,0x1767e,0x1f762,0x1e228,0x1f116, // 570\n    \t\t\t0x1e668,0x1e224,0x1eee8,0x1f776,0x1e222,0x1eee4,0x1e662,0x1eee2,0x1c468,0x1e236, // 580\n    \t\t\t0x1cce8,0x1c464,0x1dde8,0x1cce4,0x1c462,0x1dde4,0x1cce2,0x1dde2,0x188e8,0x1c476, // 590\n    \t\t\t0x199e8,0x188e4,0x1bbe8,0x199e4,0x188e2,0x1bbe4,0x199e2,0x1bbe2,0x111e8,0x188f6, // 600\n    \t\t\t0x133e8,0x111e4,0x177e8,0x133e4,0x111e2,0x177e4,0x133e2,0x177e2,0x111f6,0x133f6, // 610\n    \t\t\t0x1fb94,0x172f8,0x1b97e,0x1fb92,0x1727c,0x1723e,0x1f314,0x1317e,0x1f734,0x1f312, // 620\n    \t\t\t0x1737e,0x1f732,0x1e214,0x1e634,0x1e212,0x1ee74,0x1e632,0x1ee72,0x1c434,0x1cc74, // 630\n    \t\t\t0x1c432,0x1dcf4,0x1cc72,0x1dcf2,0x18874,0x198f4,0x18872,0x1b9f4,0x198f2,0x1b9f2, // 640\n    \t\t\t0x110f4,0x131f4,0x110f2,0x173f4,0x131f2,0x173f2,0x1fb8a,0x1717c,0x1713e,0x1f30a, // 650\n    \t\t\t0x1f71a,0x1e20a,0x1e61a,0x1ee3a,0x1c41a,0x1cc3a,0x1dc7a,0x1883a,0x1987a,0x1b8fa, // 660\n    \t\t\t0x1107a,0x130fa,0x171fa,0x170be,0x1e150,0x1f0ac,0x1e148,0x1f0a6,0x1e144,0x1e142, // 670\n    \t\t\t0x1c2d0,0x1e16c,0x1c2c8,0x1e166,0x1c2c4,0x1c2c2,0x185d0,0x1c2ec,0x185c8,0x1c2e6, // 680\n    \t\t\t0x185c4,0x185c2,0x10bd0,0x185ec,0x10bc8,0x185e6,0x10bc4,0x10bc2,0x10bec,0x10be6, // 690\n    \t\t\t0x1f1a8,0x1f8d6,0x11afc,0x1f1a4,0x11a7e,0x1f1a2,0x1e128,0x1f096,0x1e368,0x1e124, // 700\n    \t\t\t0x1e364,0x1e122,0x1e362,0x1c268,0x1e136,0x1c6e8,0x1c264,0x1c6e4,0x1c262,0x1c6e2, // 710\n    \t\t\t0x184e8,0x1c276,0x18de8,0x184e4,0x18de4,0x184e2,0x18de2,0x109e8,0x184f6,0x11be8, // 720\n    \t\t\t0x109e4,0x11be4,0x109e2,0x11be2,0x109f6,0x11bf6,0x1f9d4,0x13af8,0x19d7e,0x1f9d2, // 730\n    \t\t\t0x13a7c,0x13a3e,0x1f194,0x1197e,0x1f3b4,0x1f192,0x13b7e,0x1f3b2,0x1e114,0x1e334, // 740\n    \t\t\t0x1e112,0x1e774,0x1e332,0x1e772,0x1c234,0x1c674,0x1c232,0x1cef4,0x1c672,0x1cef2, // 750\n    \t\t\t0x18474,0x18cf4,0x18472,0x19df4,0x18cf2,0x19df2,0x108f4,0x119f4,0x108f2,0x13bf4, // 760\n    \t\t\t0x119f2,0x13bf2,0x17af0,0x1bd7c,0x17a78,0x1bd3e,0x17a3c,0x17a1e,0x1f9ca,0x1397c, // 770\n    \t\t\t0x1fbda,0x17b7c,0x1393e,0x17b3e,0x1f18a,0x1f39a,0x1f7ba,0x1e10a,0x1e31a,0x1e73a, // 780\n    \t\t\t0x1ef7a,0x1c21a,0x1c63a,0x1ce7a,0x1defa,0x1843a,0x18c7a,0x19cfa,0x1bdfa,0x1087a, // 790\n    \t\t\t0x118fa,0x139fa,0x17978,0x1bcbe,0x1793c,0x1791e,0x138be,0x179be,0x178bc,0x1789e, // 800\n    \t\t\t0x1785e,0x1e0a8,0x1e0a4,0x1e0a2,0x1c168,0x1e0b6,0x1c164,0x1c162,0x182e8,0x1c176, // 810\n    \t\t\t0x182e4,0x182e2,0x105e8,0x182f6,0x105e4,0x105e2,0x105f6,0x1f0d4,0x10d7e,0x1f0d2, // 820\n    \t\t\t0x1e094,0x1e1b4,0x1e092,0x1e1b2,0x1c134,0x1c374,0x1c132,0x1c372,0x18274,0x186f4, // 830\n    \t\t\t0x18272,0x186f2,0x104f4,0x10df4,0x104f2,0x10df2,0x1f8ea,0x11d7c,0x11d3e,0x1f0ca, // 840\n    \t\t\t0x1f1da,0x1e08a,0x1e19a,0x1e3ba,0x1c11a,0x1c33a,0x1c77a,0x1823a,0x1867a,0x18efa, // 850\n    \t\t\t0x1047a,0x10cfa,0x11dfa,0x13d78,0x19ebe,0x13d3c,0x13d1e,0x11cbe,0x13dbe,0x17d70, // 860\n    \t\t\t0x1bebc,0x17d38,0x1be9e,0x17d1c,0x17d0e,0x13cbc,0x17dbc,0x13c9e,0x17d9e,0x17cb8, // 870\n    \t\t\t0x1be5e,0x17c9c,0x17c8e,0x13c5e,0x17cde,0x17c5c,0x17c4e,0x17c2e,0x1c0b4,0x1c0b2, // 880\n    \t\t\t0x18174,0x18172,0x102f4,0x102f2,0x1e0da,0x1c09a,0x1c1ba,0x1813a,0x1837a,0x1027a, // 890\n    \t\t\t0x106fa,0x10ebe,0x11ebc,0x11e9e,0x13eb8,0x19f5e,0x13e9c,0x13e8e,0x11e5e,0x13ede, // 900\n    \t\t\t0x17eb0,0x1bf5c,0x17e98,0x1bf4e,0x17e8c,0x17e86,0x13e5c,0x17edc,0x13e4e,0x17ece, // 910\n    \t\t\t0x17e58,0x1bf2e,0x17e4c,0x17e46,0x13e2e,0x17e6e,0x17e2c,0x17e26,0x10f5e,0x11f5c, // 920\n    \t\t\t0x11f4e,0x13f58,0x19fae,0x13f4c,0x13f46,0x11f2e,0x13f6e,0x13f2c,0x13f26],        // 929\n    \t\t[ // cluster 6 -----------------------------------------------------------------------\n    \t\t\t0x1abe0,0x1d5f8,0x153c0,0x1a9f0,0x1d4fc,0x151e0,0x1a8f8,0x1d47e,0x150f0,0x1a87c, //  10\n    \t\t\t0x15078,0x1fad0,0x15be0,0x1adf8,0x1fac8,0x159f0,0x1acfc,0x1fac4,0x158f8,0x1ac7e, //  20\n    \t\t\t0x1fac2,0x1587c,0x1f5d0,0x1faec,0x15df8,0x1f5c8,0x1fae6,0x15cfc,0x1f5c4,0x15c7e, //  30\n    \t\t\t0x1f5c2,0x1ebd0,0x1f5ec,0x1ebc8,0x1f5e6,0x1ebc4,0x1ebc2,0x1d7d0,0x1ebec,0x1d7c8, //  40\n    \t\t\t0x1ebe6,0x1d7c4,0x1d7c2,0x1afd0,0x1d7ec,0x1afc8,0x1d7e6,0x1afc4,0x14bc0,0x1a5f0, //  50\n    \t\t\t0x1d2fc,0x149e0,0x1a4f8,0x1d27e,0x148f0,0x1a47c,0x14878,0x1a43e,0x1483c,0x1fa68, //  60\n    \t\t\t0x14df0,0x1a6fc,0x1fa64,0x14cf8,0x1a67e,0x1fa62,0x14c7c,0x14c3e,0x1f4e8,0x1fa76, //  70\n    \t\t\t0x14efc,0x1f4e4,0x14e7e,0x1f4e2,0x1e9e8,0x1f4f6,0x1e9e4,0x1e9e2,0x1d3e8,0x1e9f6, //  80\n    \t\t\t0x1d3e4,0x1d3e2,0x1a7e8,0x1d3f6,0x1a7e4,0x1a7e2,0x145e0,0x1a2f8,0x1d17e,0x144f0, //  90\n    \t\t\t0x1a27c,0x14478,0x1a23e,0x1443c,0x1441e,0x1fa34,0x146f8,0x1a37e,0x1fa32,0x1467c, // 100\n    \t\t\t0x1463e,0x1f474,0x1477e,0x1f472,0x1e8f4,0x1e8f2,0x1d1f4,0x1d1f2,0x1a3f4,0x1a3f2, // 110\n    \t\t\t0x142f0,0x1a17c,0x14278,0x1a13e,0x1423c,0x1421e,0x1fa1a,0x1437c,0x1433e,0x1f43a, // 120\n    \t\t\t0x1e87a,0x1d0fa,0x14178,0x1a0be,0x1413c,0x1411e,0x141be,0x140bc,0x1409e,0x12bc0, // 130\n    \t\t\t0x195f0,0x1cafc,0x129e0,0x194f8,0x1ca7e,0x128f0,0x1947c,0x12878,0x1943e,0x1283c, // 140\n    \t\t\t0x1f968,0x12df0,0x196fc,0x1f964,0x12cf8,0x1967e,0x1f962,0x12c7c,0x12c3e,0x1f2e8, // 150\n    \t\t\t0x1f976,0x12efc,0x1f2e4,0x12e7e,0x1f2e2,0x1e5e8,0x1f2f6,0x1e5e4,0x1e5e2,0x1cbe8, // 160\n    \t\t\t0x1e5f6,0x1cbe4,0x1cbe2,0x197e8,0x1cbf6,0x197e4,0x197e2,0x1b5e0,0x1daf8,0x1ed7e, // 170\n    \t\t\t0x169c0,0x1b4f0,0x1da7c,0x168e0,0x1b478,0x1da3e,0x16870,0x1b43c,0x16838,0x1b41e, // 180\n    \t\t\t0x1681c,0x125e0,0x192f8,0x1c97e,0x16de0,0x124f0,0x1927c,0x16cf0,0x1b67c,0x1923e, // 190\n    \t\t\t0x16c78,0x1243c,0x16c3c,0x1241e,0x16c1e,0x1f934,0x126f8,0x1937e,0x1fb74,0x1f932, // 200\n    \t\t\t0x16ef8,0x1267c,0x1fb72,0x16e7c,0x1263e,0x16e3e,0x1f274,0x1277e,0x1f6f4,0x1f272, // 210\n    \t\t\t0x16f7e,0x1f6f2,0x1e4f4,0x1edf4,0x1e4f2,0x1edf2,0x1c9f4,0x1dbf4,0x1c9f2,0x1dbf2, // 220\n    \t\t\t0x193f4,0x193f2,0x165c0,0x1b2f0,0x1d97c,0x164e0,0x1b278,0x1d93e,0x16470,0x1b23c, // 230\n    \t\t\t0x16438,0x1b21e,0x1641c,0x1640e,0x122f0,0x1917c,0x166f0,0x12278,0x1913e,0x16678, // 240\n    \t\t\t0x1b33e,0x1663c,0x1221e,0x1661e,0x1f91a,0x1237c,0x1fb3a,0x1677c,0x1233e,0x1673e, // 250\n    \t\t\t0x1f23a,0x1f67a,0x1e47a,0x1ecfa,0x1c8fa,0x1d9fa,0x191fa,0x162e0,0x1b178,0x1d8be, // 260\n    \t\t\t0x16270,0x1b13c,0x16238,0x1b11e,0x1621c,0x1620e,0x12178,0x190be,0x16378,0x1213c, // 270\n    \t\t\t0x1633c,0x1211e,0x1631e,0x121be,0x163be,0x16170,0x1b0bc,0x16138,0x1b09e,0x1611c, // 280\n    \t\t\t0x1610e,0x120bc,0x161bc,0x1209e,0x1619e,0x160b8,0x1b05e,0x1609c,0x1608e,0x1205e, // 290\n    \t\t\t0x160de,0x1605c,0x1604e,0x115e0,0x18af8,0x1c57e,0x114f0,0x18a7c,0x11478,0x18a3e, // 300\n    \t\t\t0x1143c,0x1141e,0x1f8b4,0x116f8,0x18b7e,0x1f8b2,0x1167c,0x1163e,0x1f174,0x1177e, // 310\n    \t\t\t0x1f172,0x1e2f4,0x1e2f2,0x1c5f4,0x1c5f2,0x18bf4,0x18bf2,0x135c0,0x19af0,0x1cd7c, // 320\n    \t\t\t0x134e0,0x19a78,0x1cd3e,0x13470,0x19a3c,0x13438,0x19a1e,0x1341c,0x1340e,0x112f0, // 330\n    \t\t\t0x1897c,0x136f0,0x11278,0x1893e,0x13678,0x19b3e,0x1363c,0x1121e,0x1361e,0x1f89a, // 340\n    \t\t\t0x1137c,0x1f9ba,0x1377c,0x1133e,0x1373e,0x1f13a,0x1f37a,0x1e27a,0x1e6fa,0x1c4fa, // 350\n    \t\t\t0x1cdfa,0x189fa,0x1bae0,0x1dd78,0x1eebe,0x174c0,0x1ba70,0x1dd3c,0x17460,0x1ba38, // 360\n    \t\t\t0x1dd1e,0x17430,0x1ba1c,0x17418,0x1ba0e,0x1740c,0x132e0,0x19978,0x1ccbe,0x176e0, // 370\n    \t\t\t0x13270,0x1993c,0x17670,0x1bb3c,0x1991e,0x17638,0x1321c,0x1761c,0x1320e,0x1760e, // 380\n    \t\t\t0x11178,0x188be,0x13378,0x1113c,0x17778,0x1333c,0x1111e,0x1773c,0x1331e,0x1771e, // 390\n    \t\t\t0x111be,0x133be,0x177be,0x172c0,0x1b970,0x1dcbc,0x17260,0x1b938,0x1dc9e,0x17230, // 400\n    \t\t\t0x1b91c,0x17218,0x1b90e,0x1720c,0x17206,0x13170,0x198bc,0x17370,0x13138,0x1989e, // 410\n    \t\t\t0x17338,0x1b99e,0x1731c,0x1310e,0x1730e,0x110bc,0x131bc,0x1109e,0x173bc,0x1319e, // 420\n    \t\t\t0x1739e,0x17160,0x1b8b8,0x1dc5e,0x17130,0x1b89c,0x17118,0x1b88e,0x1710c,0x17106, // 430\n    \t\t\t0x130b8,0x1985e,0x171b8,0x1309c,0x1719c,0x1308e,0x1718e,0x1105e,0x130de,0x171de, // 440\n    \t\t\t0x170b0,0x1b85c,0x17098,0x1b84e,0x1708c,0x17086,0x1305c,0x170dc,0x1304e,0x170ce, // 450\n    \t\t\t0x17058,0x1b82e,0x1704c,0x17046,0x1302e,0x1706e,0x1702c,0x17026,0x10af0,0x1857c, // 460\n    \t\t\t0x10a78,0x1853e,0x10a3c,0x10a1e,0x10b7c,0x10b3e,0x1f0ba,0x1e17a,0x1c2fa,0x185fa, // 470\n    \t\t\t0x11ae0,0x18d78,0x1c6be,0x11a70,0x18d3c,0x11a38,0x18d1e,0x11a1c,0x11a0e,0x10978, // 480\n    \t\t\t0x184be,0x11b78,0x1093c,0x11b3c,0x1091e,0x11b1e,0x109be,0x11bbe,0x13ac0,0x19d70, // 490\n    \t\t\t0x1cebc,0x13a60,0x19d38,0x1ce9e,0x13a30,0x19d1c,0x13a18,0x19d0e,0x13a0c,0x13a06, // 500\n    \t\t\t0x11970,0x18cbc,0x13b70,0x11938,0x18c9e,0x13b38,0x1191c,0x13b1c,0x1190e,0x13b0e, // 510\n    \t\t\t0x108bc,0x119bc,0x1089e,0x13bbc,0x1199e,0x13b9e,0x1bd60,0x1deb8,0x1ef5e,0x17a40, // 520\n    \t\t\t0x1bd30,0x1de9c,0x17a20,0x1bd18,0x1de8e,0x17a10,0x1bd0c,0x17a08,0x1bd06,0x17a04, // 530\n    \t\t\t0x13960,0x19cb8,0x1ce5e,0x17b60,0x13930,0x19c9c,0x17b30,0x1bd9c,0x19c8e,0x17b18, // 540\n    \t\t\t0x1390c,0x17b0c,0x13906,0x17b06,0x118b8,0x18c5e,0x139b8,0x1189c,0x17bb8,0x1399c, // 550\n    \t\t\t0x1188e,0x17b9c,0x1398e,0x17b8e,0x1085e,0x118de,0x139de,0x17bde,0x17940,0x1bcb0, // 560\n    \t\t\t0x1de5c,0x17920,0x1bc98,0x1de4e,0x17910,0x1bc8c,0x17908,0x1bc86,0x17904,0x17902, // 570\n    \t\t\t0x138b0,0x19c5c,0x179b0,0x13898,0x19c4e,0x17998,0x1bcce,0x1798c,0x13886,0x17986, // 580\n    \t\t\t0x1185c,0x138dc,0x1184e,0x179dc,0x138ce,0x179ce,0x178a0,0x1bc58,0x1de2e,0x17890, // 590\n    \t\t\t0x1bc4c,0x17888,0x1bc46,0x17884,0x17882,0x13858,0x19c2e,0x178d8,0x1384c,0x178cc, // 600\n    \t\t\t0x13846,0x178c6,0x1182e,0x1386e,0x178ee,0x17850,0x1bc2c,0x17848,0x1bc26,0x17844, // 610\n    \t\t\t0x17842,0x1382c,0x1786c,0x13826,0x17866,0x17828,0x1bc16,0x17824,0x17822,0x13816, // 620\n    \t\t\t0x17836,0x10578,0x182be,0x1053c,0x1051e,0x105be,0x10d70,0x186bc,0x10d38,0x1869e, // 630\n    \t\t\t0x10d1c,0x10d0e,0x104bc,0x10dbc,0x1049e,0x10d9e,0x11d60,0x18eb8,0x1c75e,0x11d30, // 640\n    \t\t\t0x18e9c,0x11d18,0x18e8e,0x11d0c,0x11d06,0x10cb8,0x1865e,0x11db8,0x10c9c,0x11d9c, // 650\n    \t\t\t0x10c8e,0x11d8e,0x1045e,0x10cde,0x11dde,0x13d40,0x19eb0,0x1cf5c,0x13d20,0x19e98, // 660\n    \t\t\t0x1cf4e,0x13d10,0x19e8c,0x13d08,0x19e86,0x13d04,0x13d02,0x11cb0,0x18e5c,0x13db0, // 670\n    \t\t\t0x11c98,0x18e4e,0x13d98,0x19ece,0x13d8c,0x11c86,0x13d86,0x10c5c,0x11cdc,0x10c4e, // 680\n    \t\t\t0x13ddc,0x11cce,0x13dce,0x1bea0,0x1df58,0x1efae,0x1be90,0x1df4c,0x1be88,0x1df46, // 690\n    \t\t\t0x1be84,0x1be82,0x13ca0,0x19e58,0x1cf2e,0x17da0,0x13c90,0x19e4c,0x17d90,0x1becc, // 700\n    \t\t\t0x19e46,0x17d88,0x13c84,0x17d84,0x13c82,0x17d82,0x11c58,0x18e2e,0x13cd8,0x11c4c, // 710\n    \t\t\t0x17dd8,0x13ccc,0x11c46,0x17dcc,0x13cc6,0x17dc6,0x10c2e,0x11c6e,0x13cee,0x17dee, // 720\n    \t\t\t0x1be50,0x1df2c,0x1be48,0x1df26,0x1be44,0x1be42,0x13c50,0x19e2c,0x17cd0,0x13c48, // 730\n    \t\t\t0x19e26,0x17cc8,0x1be66,0x17cc4,0x13c42,0x17cc2,0x11c2c,0x13c6c,0x11c26,0x17cec, // 740\n    \t\t\t0x13c66,0x17ce6,0x1be28,0x1df16,0x1be24,0x1be22,0x13c28,0x19e16,0x17c68,0x13c24, // 750\n    \t\t\t0x17c64,0x13c22,0x17c62,0x11c16,0x13c36,0x17c76,0x1be14,0x1be12,0x13c14,0x17c34, // 760\n    \t\t\t0x13c12,0x17c32,0x102bc,0x1029e,0x106b8,0x1835e,0x1069c,0x1068e,0x1025e,0x106de, // 770\n    \t\t\t0x10eb0,0x1875c,0x10e98,0x1874e,0x10e8c,0x10e86,0x1065c,0x10edc,0x1064e,0x10ece, // 780\n    \t\t\t0x11ea0,0x18f58,0x1c7ae,0x11e90,0x18f4c,0x11e88,0x18f46,0x11e84,0x11e82,0x10e58, // 790\n    \t\t\t0x1872e,0x11ed8,0x18f6e,0x11ecc,0x10e46,0x11ec6,0x1062e,0x10e6e,0x11eee,0x19f50, // 800\n    \t\t\t0x1cfac,0x19f48,0x1cfa6,0x19f44,0x19f42,0x11e50,0x18f2c,0x13ed0,0x19f6c,0x18f26, // 810\n    \t\t\t0x13ec8,0x11e44,0x13ec4,0x11e42,0x13ec2,0x10e2c,0x11e6c,0x10e26,0x13eec,0x11e66, // 820\n    \t\t\t0x13ee6,0x1dfa8,0x1efd6,0x1dfa4,0x1dfa2,0x19f28,0x1cf96,0x1bf68,0x19f24,0x1bf64, // 830\n    \t\t\t0x19f22,0x1bf62,0x11e28,0x18f16,0x13e68,0x11e24,0x17ee8,0x13e64,0x11e22,0x17ee4, // 840\n    \t\t\t0x13e62,0x17ee2,0x10e16,0x11e36,0x13e76,0x17ef6,0x1df94,0x1df92,0x19f14,0x1bf34, // 850\n    \t\t\t0x19f12,0x1bf32,0x11e14,0x13e34,0x11e12,0x17e74,0x13e32,0x17e72,0x1df8a,0x19f0a, // 860\n    \t\t\t0x1bf1a,0x11e0a,0x13e1a,0x17e3a,0x1035c,0x1034e,0x10758,0x183ae,0x1074c,0x10746, // 870\n    \t\t\t0x1032e,0x1076e,0x10f50,0x187ac,0x10f48,0x187a6,0x10f44,0x10f42,0x1072c,0x10f6c, // 880\n    \t\t\t0x10726,0x10f66,0x18fa8,0x1c7d6,0x18fa4,0x18fa2,0x10f28,0x18796,0x11f68,0x18fb6, // 890\n    \t\t\t0x11f64,0x10f22,0x11f62,0x10716,0x10f36,0x11f76,0x1cfd4,0x1cfd2,0x18f94,0x19fb4, // 900\n    \t\t\t0x18f92,0x19fb2,0x10f14,0x11f34,0x10f12,0x13f74,0x11f32,0x13f72,0x1cfca,0x18f8a, // 910\n    \t\t\t0x19f9a,0x10f0a,0x11f1a,0x13f3a,0x103ac,0x103a6,0x107a8,0x183d6,0x107a4,0x107a2, // 920\n    \t\t\t0x10396,0x107b6,0x187d4,0x187d2,0x10794,0x10fb4,0x10792,0x10fb2,0x1c7ea]         // 929\t\n    \t],\n    \n    \t/**\n    \t * Array of factors of the Reed-Solomon polynomial equations used for error correction; one sub array for each correction level (0-8).\n    \t * @protected\n    \t */\n    \trsfactors: [\n    \t\t[ // ECL 0 (2 factors) -------------------------------------------------------------------------------\n    \t\t\t0x01b,0x395],                                                                                    //   2\n    \t\t[ // ECL 1 (4 factors) -------------------------------------------------------------------------------\n    \t\t\t0x20a,0x238,0x2d3,0x329],                                                                        //   4\n    \t\t[ // ECL 2 (8 factors) -------------------------------------------------------------------------------\n    \t\t\t0x0ed,0x134,0x1b4,0x11c,0x286,0x28d,0x1ac,0x17b],                                                //   8\n    \t\t[ // ECL 3 (16 factors) ------------------------------------------------------------------------------\n    \t\t\t0x112,0x232,0x0e8,0x2f3,0x257,0x20c,0x321,0x084,0x127,0x074,0x1ba,0x1ac,0x127,0x02a,0x0b0,0x041],//  16\n    \t\t[ // ECL 4 (32 factors) ------------------------------------------------------------------------------\n    \t\t\t0x169,0x23f,0x39a,0x20d,0x0b0,0x24a,0x280,0x141,0x218,0x2e6,0x2a5,0x2e6,0x2af,0x11c,0x0c1,0x205, //  16\n    \t\t\t0x111,0x1ee,0x107,0x093,0x251,0x320,0x23b,0x140,0x323,0x085,0x0e7,0x186,0x2ad,0x14a,0x03f,0x19a],//  32\n    \t\t[ // ECL 5 (64 factors) ------------------------------------------------------------------------------\n    \t\t\t0x21b,0x1a6,0x006,0x05d,0x35e,0x303,0x1c5,0x06a,0x262,0x11f,0x06b,0x1f9,0x2dd,0x36d,0x17d,0x264, //  16\n    \t\t\t0x2d3,0x1dc,0x1ce,0x0ac,0x1ae,0x261,0x35a,0x336,0x21f,0x178,0x1ff,0x190,0x2a0,0x2fa,0x11b,0x0b8, //  32\n    \t\t\t0x1b8,0x023,0x207,0x01f,0x1cc,0x252,0x0e1,0x217,0x205,0x160,0x25d,0x09e,0x28b,0x0c9,0x1e8,0x1f6, //  48\n    \t\t\t0x288,0x2dd,0x2cd,0x053,0x194,0x061,0x118,0x303,0x348,0x275,0x004,0x17d,0x34b,0x26f,0x108,0x21f],//  64\n    \t\t[ // ECL 6 (128 factors) -----------------------------------------------------------------------------\n    \t\t\t0x209,0x136,0x360,0x223,0x35a,0x244,0x128,0x17b,0x035,0x30b,0x381,0x1bc,0x190,0x39d,0x2ed,0x19f, //  16\n    \t\t\t0x336,0x05d,0x0d9,0x0d0,0x3a0,0x0f4,0x247,0x26c,0x0f6,0x094,0x1bf,0x277,0x124,0x38c,0x1ea,0x2c0, //  32\n    \t\t\t0x204,0x102,0x1c9,0x38b,0x252,0x2d3,0x2a2,0x124,0x110,0x060,0x2ac,0x1b0,0x2ae,0x25e,0x35c,0x239, //  48\n    \t\t\t0x0c1,0x0db,0x081,0x0ba,0x0ec,0x11f,0x0c0,0x307,0x116,0x0ad,0x028,0x17b,0x2c8,0x1cf,0x286,0x308, //  64\n    \t\t\t0x0ab,0x1eb,0x129,0x2fb,0x09c,0x2dc,0x05f,0x10e,0x1bf,0x05a,0x1fb,0x030,0x0e4,0x335,0x328,0x382, //  80\n    \t\t\t0x310,0x297,0x273,0x17a,0x17e,0x106,0x17c,0x25a,0x2f2,0x150,0x059,0x266,0x057,0x1b0,0x29e,0x268, //  96\n    \t\t\t0x09d,0x176,0x0f2,0x2d6,0x258,0x10d,0x177,0x382,0x34d,0x1c6,0x162,0x082,0x32e,0x24b,0x324,0x022, // 112\n    \t\t\t0x0d3,0x14a,0x21b,0x129,0x33b,0x361,0x025,0x205,0x342,0x13b,0x226,0x056,0x321,0x004,0x06c,0x21b],// 128\n    \t\t[ // ECL 7 (256 factors) -----------------------------------------------------------------------------\n    \t\t\t0x20c,0x37e,0x04b,0x2fe,0x372,0x359,0x04a,0x0cc,0x052,0x24a,0x2c4,0x0fa,0x389,0x312,0x08a,0x2d0, //  16\n    \t\t\t0x35a,0x0c2,0x137,0x391,0x113,0x0be,0x177,0x352,0x1b6,0x2dd,0x0c2,0x118,0x0c9,0x118,0x33c,0x2f5, //  32\n    \t\t\t0x2c6,0x32e,0x397,0x059,0x044,0x239,0x00b,0x0cc,0x31c,0x25d,0x21c,0x391,0x321,0x2bc,0x31f,0x089, //  48\n    \t\t\t0x1b7,0x1a2,0x250,0x29c,0x161,0x35b,0x172,0x2b6,0x145,0x0f0,0x0d8,0x101,0x11c,0x225,0x0d1,0x374, //  64\n    \t\t\t0x13b,0x046,0x149,0x319,0x1ea,0x112,0x36d,0x0a2,0x2ed,0x32c,0x2ac,0x1cd,0x14e,0x178,0x351,0x209, //  80\n    \t\t\t0x133,0x123,0x323,0x2c8,0x013,0x166,0x18f,0x38c,0x067,0x1ff,0x033,0x008,0x205,0x0e1,0x121,0x1d6, //  96\n    \t\t\t0x27d,0x2db,0x042,0x0ff,0x395,0x10d,0x1cf,0x33e,0x2da,0x1b1,0x350,0x249,0x088,0x21a,0x38a,0x05a, // 112\n    \t\t\t0x002,0x122,0x2e7,0x0c7,0x28f,0x387,0x149,0x031,0x322,0x244,0x163,0x24c,0x0bc,0x1ce,0x00a,0x086, // 128\n    \t\t\t0x274,0x140,0x1df,0x082,0x2e3,0x047,0x107,0x13e,0x176,0x259,0x0c0,0x25d,0x08e,0x2a1,0x2af,0x0ea, // 144\n    \t\t\t0x2d2,0x180,0x0b1,0x2f0,0x25f,0x280,0x1c7,0x0c1,0x2b1,0x2c3,0x325,0x281,0x030,0x03c,0x2dc,0x26d, // 160\n    \t\t\t0x37f,0x220,0x105,0x354,0x28f,0x135,0x2b9,0x2f3,0x2f4,0x03c,0x0e7,0x305,0x1b2,0x1a5,0x2d6,0x210, // 176\n    \t\t\t0x1f7,0x076,0x031,0x31b,0x020,0x090,0x1f4,0x0ee,0x344,0x18a,0x118,0x236,0x13f,0x009,0x287,0x226, // 192\n    \t\t\t0x049,0x392,0x156,0x07e,0x020,0x2a9,0x14b,0x318,0x26c,0x03c,0x261,0x1b9,0x0b4,0x317,0x37d,0x2f2, // 208\n    \t\t\t0x25d,0x17f,0x0e4,0x2ed,0x2f8,0x0d5,0x036,0x129,0x086,0x036,0x342,0x12b,0x39a,0x0bf,0x38e,0x214, // 224\n    \t\t\t0x261,0x33d,0x0bd,0x014,0x0a7,0x01d,0x368,0x1c1,0x053,0x192,0x029,0x290,0x1f9,0x243,0x1e1,0x0ad, // 240\n    \t\t\t0x194,0x0fb,0x2b0,0x05f,0x1f1,0x22b,0x282,0x21f,0x133,0x09f,0x39c,0x22e,0x288,0x037,0x1f1,0x00a],// 256\n    \t\t[ // ECL 8 (512 factors) -----------------------------------------------------------------------------\n    \t\t\t0x160,0x04d,0x175,0x1f8,0x023,0x257,0x1ac,0x0cf,0x199,0x23e,0x076,0x1f2,0x11d,0x17c,0x15e,0x1ec, //  16\n    \t\t\t0x0c5,0x109,0x398,0x09b,0x392,0x12b,0x0e5,0x283,0x126,0x367,0x132,0x058,0x057,0x0c1,0x160,0x30d, //  32\n    \t\t\t0x34e,0x04b,0x147,0x208,0x1b3,0x21f,0x0cb,0x29a,0x0f9,0x15a,0x30d,0x26d,0x280,0x10c,0x31a,0x216, //  48\n    \t\t\t0x21b,0x30d,0x198,0x186,0x284,0x066,0x1dc,0x1f3,0x122,0x278,0x221,0x025,0x35a,0x394,0x228,0x029, //  64\n    \t\t\t0x21e,0x121,0x07a,0x110,0x17f,0x320,0x1e5,0x062,0x2f0,0x1d8,0x2f9,0x06b,0x310,0x35c,0x292,0x2e5, //  80\n    \t\t\t0x122,0x0cc,0x2a9,0x197,0x357,0x055,0x063,0x03e,0x1e2,0x0b4,0x014,0x129,0x1c3,0x251,0x391,0x08e, //  96\n    \t\t\t0x328,0x2ac,0x11f,0x218,0x231,0x04c,0x28d,0x383,0x2d9,0x237,0x2e8,0x186,0x201,0x0c0,0x204,0x102, // 112\n    \t\t\t0x0f0,0x206,0x31a,0x18b,0x300,0x350,0x033,0x262,0x180,0x0a8,0x0be,0x33a,0x148,0x254,0x312,0x12f, // 128\n    \t\t\t0x23a,0x17d,0x19f,0x281,0x09c,0x0ed,0x097,0x1ad,0x213,0x0cf,0x2a4,0x2c6,0x059,0x0a8,0x130,0x192, // 144\n    \t\t\t0x028,0x2c4,0x23f,0x0a2,0x360,0x0e5,0x041,0x35d,0x349,0x200,0x0a4,0x1dd,0x0dd,0x05c,0x166,0x311, // 160\n    \t\t\t0x120,0x165,0x352,0x344,0x33b,0x2e0,0x2c3,0x05e,0x008,0x1ee,0x072,0x209,0x002,0x1f3,0x353,0x21f, // 176\n    \t\t\t0x098,0x2d9,0x303,0x05f,0x0f8,0x169,0x242,0x143,0x358,0x31d,0x121,0x033,0x2ac,0x1d2,0x215,0x334, // 192\n    \t\t\t0x29d,0x02d,0x386,0x1c4,0x0a7,0x156,0x0f4,0x0ad,0x023,0x1cf,0x28b,0x033,0x2bb,0x24f,0x1c4,0x242, // 208\n    \t\t\t0x025,0x07c,0x12a,0x14c,0x228,0x02b,0x1ab,0x077,0x296,0x309,0x1db,0x352,0x2fc,0x16c,0x242,0x38f, // 224\n    \t\t\t0x11b,0x2c7,0x1d8,0x1a4,0x0f5,0x120,0x252,0x18a,0x1ff,0x147,0x24d,0x309,0x2bb,0x2b0,0x02b,0x198, // 240\n    \t\t\t0x34a,0x17f,0x2d1,0x209,0x230,0x284,0x2ca,0x22f,0x03e,0x091,0x369,0x297,0x2c9,0x09f,0x2a0,0x2d9, // 256\n    \t\t\t0x270,0x03b,0x0c1,0x1a1,0x09e,0x0d1,0x233,0x234,0x157,0x2b5,0x06d,0x260,0x233,0x16d,0x0b5,0x304, // 272\n    \t\t\t0x2a5,0x136,0x0f8,0x161,0x2c4,0x19a,0x243,0x366,0x269,0x349,0x278,0x35c,0x121,0x218,0x023,0x309, // 288\n    \t\t\t0x26a,0x24a,0x1a8,0x341,0x04d,0x255,0x15a,0x10d,0x2f5,0x278,0x2b7,0x2ef,0x14b,0x0f7,0x0b8,0x02d, // 304\n    \t\t\t0x313,0x2a8,0x012,0x042,0x197,0x171,0x036,0x1ec,0x0e4,0x265,0x33e,0x39a,0x1b5,0x207,0x284,0x389, // 320\n    \t\t\t0x315,0x1a4,0x131,0x1b9,0x0cf,0x12c,0x37c,0x33b,0x08d,0x219,0x17d,0x296,0x201,0x038,0x0fc,0x155, // 336\n    \t\t\t0x0f2,0x31d,0x346,0x345,0x2d0,0x0e0,0x133,0x277,0x03d,0x057,0x230,0x136,0x2f4,0x299,0x18d,0x328, // 352\n    \t\t\t0x353,0x135,0x1d9,0x31b,0x17a,0x01f,0x287,0x393,0x1cb,0x326,0x24e,0x2db,0x1a9,0x0d8,0x224,0x0f9, // 368\n    \t\t\t0x141,0x371,0x2bb,0x217,0x2a1,0x30e,0x0d2,0x32f,0x389,0x12f,0x34b,0x39a,0x119,0x049,0x1d5,0x317, // 384\n    \t\t\t0x294,0x0a2,0x1f2,0x134,0x09b,0x1a6,0x38b,0x331,0x0bb,0x03e,0x010,0x1a9,0x217,0x150,0x11e,0x1b5, // 400\n    \t\t\t0x177,0x111,0x262,0x128,0x0b7,0x39b,0x074,0x29b,0x2ef,0x161,0x03e,0x16e,0x2b3,0x17b,0x2af,0x34a, // 416\n    \t\t\t0x025,0x165,0x2d0,0x2e6,0x14a,0x005,0x027,0x39b,0x137,0x1a8,0x0f2,0x2ed,0x141,0x036,0x29d,0x13c, // 432\n    \t\t\t0x156,0x12b,0x216,0x069,0x29b,0x1e8,0x280,0x2a0,0x240,0x21c,0x13c,0x1e6,0x2d1,0x262,0x02e,0x290, // 448\n    \t\t\t0x1bf,0x0ab,0x268,0x1d0,0x0be,0x213,0x129,0x141,0x2fa,0x2f0,0x215,0x0af,0x086,0x00e,0x17d,0x1b1, // 464\n    \t\t\t0x2cd,0x02d,0x06f,0x014,0x254,0x11c,0x2e0,0x08a,0x286,0x19b,0x36d,0x29d,0x08d,0x397,0x02d,0x30c, // 480\n    \t\t\t0x197,0x0a4,0x14c,0x383,0x0a5,0x2d6,0x258,0x145,0x1f2,0x28f,0x165,0x2f0,0x300,0x0df,0x351,0x287, // 496\n    \t\t\t0x03f,0x136,0x35f,0x0fb,0x16e,0x130,0x11a,0x2e2,0x2a3,0x19a,0x185,0x0f4,0x01f,0x079,0x12f,0x107] // 512\n    \t],\t\n    \n    \t/**\n    \t * This is the class constructor.\n    \t * Creates a PDF417 object\n    \t * @param code (string) code to represent using PDF417\n    \t * @param ecl (int) error correction level (0-8); default -1 = automatic correction level\n    \t * @param aspectratio (float) the width to height of the symbol (excluding quiet zones)\t \n    \t */\n    \tinit: function(code, ecl, aspectratio) {\t\t\n    \t\tcode = unescape(encodeURIComponent(code)); // covert UTF-8 to ISO-8859-1 \n    \t\tecl = ecl || -1;\n    \t\taspectratio = aspectratio || 2;\t\t\n    \t\tthis.barcode_array = {};\n    \t\tif (code === \"\") {\n    \t\t\treturn false;\n    \t\t}\n    \t\t// get the input sequence array\n    \t\tsequence = this.getInputSequences(code);\t\t\n    \t\tcodewords = []; // array of code-words\n    \t\tfor(var i=0;i<sequence.length; i++) {\n    \t\t\tvar cw = this.getCompaction(sequence[i][0], sequence[i][1], true);\n    \t\t\tcodewords = codewords.concat(cw);\n    \t\t}\n    \t\tif (codewords[0] == 900) {\n    \t\t\t// Text Alpha is the default mode, so remove the first code\n    \t\t\tcodewords.shift();\n    \t\t}\n    \t\t// count number of codewords\n    \t\tvar numcw = codewords.length;\n    \t\tif (numcw > 925) {\n    \t\t\t// reached maximum data codeword capacity\n    \t\t\treturn false;\n    \t\t}\t\t\n    \n    \t\t// set error correction level\n    \t\tecl = this.getErrorCorrectionLevel(ecl, numcw);\n    \t\t// number of codewords for error correction\n    \t\tvar errsize = (2 << ecl);\n    \t\t// calculate number of columns (number of codewords per row) and rows\n    \t\tvar nce = (numcw + errsize + 1);\n    \t\tvar cols = Math.round((Math.sqrt(4761 + (68 * aspectratio * this.ROWHEIGHT * nce)) - 69) / 34);\n    \t\t// adjust cols\n    \t\tif (cols < 1) {\n    \t\t\tcols = 1;\n    \t\t} else if (cols > 30) {\n    \t\t\tcols = 30;\n    \t\t}\n    \t\tvar rows = Math.ceil(nce / cols);\n    \t\tvar size = (cols * rows);\n    \t\t// adjust rows\n    \t\tif ((rows < 3) || (rows > 90)) {\n    \t\t\tif (rows < 3) {\n    \t\t\t\trows = 3;\n    \t\t\t} else if (rows > 90) {\n    \t\t\t\trows = 90;\n    \t\t\t}\n    \t\t\tcols = Math.ceil(size / rows);\n    \t\t\tsize = (cols * rows);\n    \t\t}\n    \t\tif (size > 928) {\n    \t\t\t// set dimensions to get maximum capacity\n    \t\t\tif (Math.abs(aspectratio - (17 * 29 / 32)) < Math.abs(aspectratio - (17 * 16 / 58))) {\n    \t\t\t\tcols = 29;\n    \t\t\t\trows = 32;\n    \t\t\t} else {\n    \t\t\t\tcols = 16;\n    \t\t\t\trows = 58;\n    \t\t\t}\n    \t\t\tsize = 928;\n    \t\t}\n    \t\t// calculate padding\n    \t\tvar pad = (size - nce);\n    \t\tif (pad > 0) {\n    \t\t\tif ((size - rows) == nce) {\n    \t\t\t\t--rows;\n    \t\t\t\tsize -= rows;\n    \t\t\t} else {\n    \t\t\t\t// add pading\n    \t\t\t\tcodewords = codewords.concat(this._array_fill(0, pad, 900));\n    \t\t\t}\n    \t\t}\n    \n    \t\t// Symbol Length Descriptor (number of data codewords including Symbol Length Descriptor and pad codewords)\n    \t\tvar sld = size - errsize;\n    \t\t// add symbol length description\n    \t\tcodewords.unshift(sld);\n    \t\t// calculate error correction\n    \t\tvar ecw = this.getErrorCorrection(codewords, ecl);\n    \t\t// add error correction codewords\n    \t\tcodewords = codewords.concat(ecw);\n    \t\t// add horizontal quiet zones to start and stop patterns\n    \t\tvar pstart = this._str_repeat('0', this.QUIETH) + this.start_pattern;\n    \t\tvar pstop = this.stop_pattern + \"\" + this._str_repeat('0', this.QUIETH);\n    \t\tthis.barcode_array['num_rows'] = (rows * this.ROWHEIGHT) + (2 * this.QUIETV);\n    \t\tthis.barcode_array['num_cols'] = ((cols + 2) * 17) + 35 + (2 * this.QUIETH);\n    \t\tthis.barcode_array['bcode'] = [];\n    \n    \t\tvar empty_row;\n    \t\t// build rows for vertical quiet zone\n    \t\tif (this.QUIETV > 0) {\n    \t\t\tempty_row = this._array_fill(0, this.barcode_array['num_cols'], 0);\n    \t\t\tfor (var i = 0; i < this.QUIETV; ++i) {\n    \t\t\t\t// add vertical quiet rows\n    \t\t\t\tthis.barcode_array['bcode'].push(empty_row);\n    \t\t\t}\n    \t\t}\n    \n    \t\tvar L;\n    \t\tvar k = 0; // codeword index\n    \t\tvar cid = 0; // initial cluster\n    \t\t// for each row\n    \t\tfor (var r = 0; r < rows; ++r) {\n    \t\t\t// row start code\n    \t\t\tvar row = pstart;\n    \t\t\tswitch (cid) {\n    \t\t\t\tcase 0: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + this._intval((rows - 1) / 3));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t\tcase 1: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + (ecl * 3) + ((rows - 1) % 3));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t\tcase 2: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + (cols - 1));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t// left row indicator\n    \t\t\trow += this._sprintf('%17b', this.clusters[cid][L]);\n    \t\t\t// for each column\n    \t\t\tfor (var c = 0; c < cols; ++c) {\n    \t\t\t\trow += this._sprintf('%17b', this.clusters[cid][codewords[k]]);\n    \t\t\t\t++k;\n    \t\t\t}\n    \t\t\tswitch (cid) {\n    \t\t\t\tcase 0: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + (cols - 1));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t\tcase 1: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + this._intval((rows - 1) / 3));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t\tcase 2: {\n    \t\t\t\t\tL = ((30 * this._intval(r / 3)) + (ecl * 3) + ((rows - 1) % 3));\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t// right row indicator\n    \t\t\trow += this._sprintf('%17b', this.clusters[cid][L]);\n    \t\t\t// row stop code\n    \t\t\trow += pstop;\n    \t\t\t// convert the string to array\n    \t\t\tvar arow = this._preg_split('//', row, -1, 'PREG_SPLIT_NO_EMPTY');\n    \t\t\t// duplicate row to get the desired height\n    \t\t\tfor (var h = 0; h < this.ROWHEIGHT; ++h) {\n    \t\t\t\tthis.barcode_array['bcode'].push(arow);\n    \t\t\t}\n    \t\t\t++cid;\n    \t\t\tif (cid > 2) {\n    \t\t\t\tcid = 0;\n    \t\t\t}\n    \t\t}\n    \t\tif (this.QUIETV > 0) {\n    \t\t\tfor (var i = 0; i < this.QUIETV; ++i) {\n    \t\t\t\t// add vertical quiet rows\n    \t\t\t\tthis.barcode_array['bcode'].push(empty_row);\n    \t\t\t}\n    \t\t}\n    \t},\n    \n    \tgetInputSequences: function(code) {\n    \t\tvar sequence_array = []; // array to be returned\n    \t\tvar numseq = [];\n    \t\t// get numeric sequences\t\t\n    \t\tnumseq = code.match(/([0-9]{13,44})/g);\n    \t\tif (numseq == null) {\n    \t\t\tnumseq = [];\t\t\t\n    \t\t} else {\n    \t\t\t// add offset to each matched line\n    \t\t\tfor (var n = 0, offset = 0; n < numseq.length; n++) {\n            offset = code.indexOf(numseq[n], offset);\n          \tnumseq[n] = [numseq[n], offset];\n            offset += numseq[n][0].length;\n          }\n    \t\t}\n    \t\tnumseq.push(['', code.length]);\n    \t\tvar offset = 0;\n    \t\tfor(var i=0; i<numseq.length; i++) {\n    \t\t\tvar seq = numseq[i];\t\t\t\n    \t\t\tvar seqlen = seq[0].length;\n    \t\t\tif (seq[1] > 0) {\n    \t\t\t\t// extract text sequence before the number sequence\n    \t\t\t\tvar prevseq = code.substr(offset, (seq[1] - offset));\n    \t\t\t\tvar textseq = [];\n    \t\t\t\t// get text sequences\t\t\t\t\n    \t\t\t\ttextseq = prevseq.match(/([\\x09\\x0a\\x0d\\x20-\\x7e]{5,})/g);\n    \t\t\t\tif (textseq == null) {\n    \t\t\t\t\ttextseq = [];\t\t\t\t\n    \t\t\t\t} else {\n    \t\t\t\t\t// add offset to each matched line\n    \t\t\t\t\tfor (var n=0;n<textseq.length;n++) {\n    \t\t\t\t\t\tvar offset = prevseq.indexOf(textseq[n]);\n    \t\t\t\t\t\ttextseq[n] = [textseq[n], offset];\n    \t\t\t\t\t}\n    \t\t\t\t}\t\t\t\t\n    \t\t\t\ttextseq.push(['', prevseq.length]);\n    \t\t\t\tvar txtoffset = 0;\n    \t\t\t\tfor(var j=0; j<textseq.length; j++) {\n    \t\t\t\t\tvar txtseq = textseq[j];\n    \t\t\t\t\tvar txtseqlen = txtseq[0].length;\n    \t\t\t\t\tif (txtseq[1] > 0) {\n    \t\t\t\t\t\t// extract byte sequence before the text sequence\n    \t\t\t\t\t\tvar prevtxtseq = prevseq.substr(txtoffset, (txtseq[1] - txtoffset));\n    \t\t\t\t\t\tif (prevtxtseq.length > 0) {\n    \t\t\t\t\t\t\t// add BYTE sequence\n    \t\t\t\t\t\t\tif ((prevtxtseq.length == 1) && (sequence_array.length > 0) && (sequence_array[sequence_array.length - 1][0] == 900)) {\n    \t\t\t\t\t\t\t\tsequence_array.push([913, prevtxtseq]);\n    \t\t\t\t\t\t\t} else if ((prevtxtseq.length % 6) == 0) {\n    \t\t\t\t\t\t\t\tsequence_array.push([924, prevtxtseq]);\n    \t\t\t\t\t\t\t} else {\n    \t\t\t\t\t\t\t\tsequence_array.push([901, prevtxtseq]);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\tif (txtseqlen > 0) {\n    \t\t\t\t\t\t// add numeric sequence\n    \t\t\t\t\t\tsequence_array.push([900, txtseq[0]]);\n    \t\t\t\t\t}\n    \t\t\t\t\ttxtoffset = txtseq[1] + txtseqlen;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tif (seqlen > 0) {\n    \t\t\t\t// add numeric sequence\n    \t\t\t\tsequence_array.push([902, seq[0]]);\n    \t\t\t}\n    \t\t\toffset = seq[1] + seqlen;\n    \t\t}\n    \t\treturn sequence_array;\n    \t},\n    \n    \tgetCompaction: function(mode, code, addmode) {\n    \t\taddmode = addmode || true;\n    \t\tvar cw = []; // array of codewords to return\n    \t\tswitch(mode) {\n    \t\t\tcase 900: { // Text Compaction mode latch\n    \t\t\t\tvar submode = 0; // default Alpha sub-mode\n    \t\t\t\tvar txtarr = []; // array of characters and sub-mode switching characters\n    \t\t\t\tvar codelen = code.length;\n    \t\t\t\tfor (var i = 0; i < codelen; ++i) {\n    \t\t\t\t\tvar chval = this._ord(code.charAt(i));\n    \t\t\t\t\tvar k;\n    \t\t\t\t\tif ((k = this._array_search(chval, this.textsubmodes[submode])) !== false) {\n    \t\t\t\t\t\t// we are on the same sub-mode\n    \t\t\t\t\t\ttxtarr.push(k);\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\t// the sub-mode is changed\n    \t\t\t\t\t\tfor (var s = 0; s < 4; ++s) {\n    \t\t\t\t\t\t\t// search new sub-mode\n    \t\t\t\t\t\t\tif ((s != submode) && ((k = this._array_search(chval, this.textsubmodes[s])) !== false)) {\n    \t\t\t\t\t\t\t\t// s is the new submode\n    \t\t\t\t\t\t\t\tif ((((i + 1) == codelen) || (((i + 1) < codelen) && (this._array_search(this._ord(code.charAt(i + 1)), this.textsubmodes[submode]) !== false))) && ((s == 3) || ((s == 0) && (submode == 1)))) {\n    \t\t\t\t\t\t\t\t\t// shift (temporary change only for this char)\n    \t\t\t\t\t\t\t\t\tif (s == 3) {\n    \t\t\t\t\t\t\t\t\t\t// shift to puntuaction\n    \t\t\t\t\t\t\t\t\t\ttxtarr.push(29);\n    \t\t\t\t\t\t\t\t\t} else {\n    \t\t\t\t\t\t\t\t\t\t// shift from lower to alpha\n    \t\t\t\t\t\t\t\t\t\ttxtarr.push(27);\n    \t\t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t} else {\n    \t\t\t\t\t\t\t\t\t// latch\n    \t\t\t\t\t\t\t\t\ttxtarr\t= txtarr.concat(this.textlatch[''+submode+s]);\n    \t\t\t\t\t\t\t\t\t// set new submode\n    \t\t\t\t\t\t\t\t\tsubmode = s;\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t// add characted code to array\n    \t\t\t\t\t\t\t\ttxtarr.push(k);\n    \t\t\t\t\t\t\t\tbreak;\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tvar txtarrlen = txtarr.length;\n    \t\t\t\tif ((txtarrlen % 2) != 0) {\n    \t\t\t\t\t// add padding\n    \t\t\t\t\ttxtarr.push(29);\n    \t\t\t\t\t++txtarrlen;\n    \t\t\t\t}\n    \t\t\t\t// calculate codewords\n    \t\t\t\tfor (var i = 0; i < txtarrlen; i += 2) {\n    \t\t\t\t\tcw.push((30 * parseInt(txtarr[i])) + parseInt(txtarr[(i + 1)]));\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\tcase 901:\n    \t\t\tcase 924: { // Byte Compaction mode latch\n    \t\t\t\tvar rest;\n    \t\t\t\tvar sublen;\n    \t\t\t\tvar codelen;\n    \t\t\t\twhile ((codelen = code.length) > 0) {\t\t\t\t\t\n    \t\t\t\t\tif (codelen > 6) {\n    \t\t\t\t\t\trest = code.substring(6);\n    \t\t\t\t\t\tcode = code.substring(0, 6);\n    \t\t\t\t\t\tsublen = 6;\n    \t\t\t\t\t} else {\t\t\t\t\t\t\n    \t\t\t\t\t\trest = '';\n    \t\t\t\t\t\tsublen = code.length;\n    \t\t\t\t\t}\n    \t\t\t\t\tif (sublen == 6) {\n    \t\t\t\t\t\tvar t = bcmul(''+this._ord(code.charAt(0)), '1099511627776');\n    \t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(1)), '4294967296'));\n    \t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(2)), '16777216'));\n    \t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(3)), '65536'));\n    \t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(4)), '256'));\n    \t\t\t\t\t\tt = bcadd(t, '' + this._ord(code.charAt(5)));\n    \t\t\t\t\t\t// tmp array for the 6 bytes block\n    \t\t\t\t\t\tvar cw6 = [];\n    \t\t\t\t\t\tdo {\n    \t\t\t\t\t\t\tvar d = this._my_bcmod(t, '900');\n    \t\t\t\t\t\t\tt = bcdiv(t, '900');\n    \t\t\t\t\t\t\t// prepend the value to the beginning of the array\n    \t\t\t\t\t\t\tcw6.unshift(d);\n    \t\t\t\t\t\t} while (t != '0');\n    \t\t\t\t\t\t// append the result array at the end\n    \t\t\t\t\t\tcw = cw.concat(cw6);\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tfor (var i = 0; i < sublen; ++i) {\n    \t\t\t\t\t\t\tcw.push(this._ord(code.charAt(i)));\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\tcode = rest;\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\tcase 902: { // Numeric Compaction mode latch\n    \t\t\t\tvar rest;\n    \t\t\t\tvar codelen;\n    \t\t\t\twhile ((codelen = code.length) > 0) {\n    \t\t\t\t\tif (codelen > 44) {\n    \t\t\t\t\t\trest = code.substring(44);\n    \t\t\t\t\t\tcode = code.substring(0, 44);\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\trest = '';\n    \t\t\t\t\t}\n    \t\t\t\t\tvar t = '1' + code;\n    \t\t\t\t\tdo {\n    \t\t\t\t\t\tvar d = this._my_bcmod(t, '900');\n    \t\t\t\t\t\tt = bcdiv(t, '900');\n    \t\t\t\t\t\tcw.unshift(d);\n    \t\t\t\t\t} while (t != '0');\n    \t\t\t\t\tcode = rest;\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\tcase 913: { // Byte Compaction mode shift\n    \t\t\t\tcw.push(this._ord(code));\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n    \t\tif (addmode) {\n    \t\t\t// add the compaction mode codeword at the beginning\n    \t\t\tcw.unshift(mode);\n    \t\t}\n    \t\treturn cw;\n    \t},\n    \n    \tgetErrorCorrectionLevel: function(ecl, numcw) {\n    \t\t// get maximum correction level\n    \t\tvar maxecl = 8; // starting error level\n    \t\tvar maxerrsize = (928 - numcw); // available codewords for error\n    \t\twhile (maxecl > 0) {\n    \t\t\tvar errsize = (2 << ecl);\n    \t\t\tif (maxerrsize >= errsize) {\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\t--maxecl;\n    \t\t}\n    \t\t// check for automatic levels\n    \t\tif ((ecl < 0) || (ecl > 8)) {\n    \t\t\tif (numcw < 41) {\n    \t\t\t\tecl = 2;\n    \t\t\t} else if (numcw < 161) {\n    \t\t\t\tecl = 3;\n    \t\t\t} else if (numcw < 321) {\n    \t\t\t\tecl = 4;\n    \t\t\t} else if (numcw < 864) {\n    \t\t\t\tecl = 5;\n    \t\t\t} else {\n    \t\t\t\tecl = maxecl;\n    \t\t\t}\n    \t\t}\n    \t\tif (ecl > maxecl) {\n    \t\t\tecl = maxecl;\n    \t\t}\n    \t\treturn ecl;\n    \t},\n    \n    \tgetErrorCorrection: function(cw, ecl) {\n    \t\t// get error correction coefficients\n    \t\tvar ecc = this.rsfactors[ecl];\n    \t\t// number of error correction factors\n    \t\tvar eclsize = (2 << ecl);\n    \t\t// maximum index for rsfactors[ecl]\n    \t\tvar eclmaxid = (eclsize - 1);\n    \t\t// initialize array of error correction codewords\n    \t\tvar ecw = this._array_fill(0, eclsize, 0);\n    \t\t// for each data codeword\n    \t\tfor (var k=0; k<cw.length;k++) {\n    \t\t\tvar t1 = (cw[k] + ecw[eclmaxid]) % 929;\n    \t\t\tfor (var j = eclmaxid; j > 0; --j) {\n    \t\t\t\tvar t2 = (t1 * ecc[j]) % 929;\n    \t\t\t\tvar t3 = 929 - t2;\n    \t\t\t\tecw[j] = (ecw[(j - 1)] + t3) % 929;\n    \t\t\t}\n    \t\t\tt2 = (t1 * ecc[0]) % 929;\n    \t\t\tt3 = 929 - t2;\n    \t\t\tecw[0] = t3 % 929;\n    \t\t}\n    \t\tfor (var j=0;j<ecw.length;j++) {\n    \t\t\tif (ecw[j] != 0) {\n    \t\t\t\tecw[j] = 929 - ecw[j];\n    \t\t\t}\n    \t\t}\t\t\t\t\n    \t\tecw = ecw.reverse();\n    \t\treturn ecw;\n    \t},\n    \n    \tgetBarcodeArray: function() {\n    \t\treturn this.barcode_array;\n    \t},\n    \n        /**\n         *\n         * Functions from phpjs.org\n         *\n         */\n    \t_array_fill: function(start_index, num, mixed_val) {\t\t\n    \t\tvar key, tmp_arr = {};\t\n    \n    \t\tif (start_index == 0) {\n    \t\t\tvar tmpArray = [];\n    \t\t\tfor (var i=0;i<num;i++) {\n    \t\t\t\ttmpArray.push(mixed_val);\n    \t\t\t}\n    \t\t\treturn tmpArray;\n    \t\t}\n    \n    \t  \tif (!isNaN(start_index) && !isNaN(num)) {\n    \t\t    for (key = 0; key < num; key++) {\n    \t\t      tmp_arr[(key + start_index)] = mixed_val;\n    \t\t    }\n    \t  \t}\n    \n    \t  \treturn tmp_arr;\n    \t},\t\n    \n    \t_str_repeat:function(input, multiplier) {\n    \t\t// http://kevin.vanzonneveld.net\n    \t\t// +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t\t// +   improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n    \t\t// +   improved by: Ian Carter (http://euona.com/)\n    \t\t// *     example 1: str_repeat('-=', 10);\n    \t\t// *     returns 1: '-=-=-=-=-=-=-=-=-=-='\n    \t\tvar y = '';\n    \t\twhile (true) {\n    \t\t\tif (multiplier & 1) {\n    \t\t\t  y += input;\n    \t\t\t}\n    \t\t\tmultiplier >>= 1;\n    \t\t\tif (multiplier) {\n    \t\t\t\tinput += input;\n    \t\t\t} else {\n    \t\t\t  \tbreak;\n    \t\t\t}\n    \t\t}\n    \t\treturn y;\n    \t},\n    \n    \t_intval:function(mixed_var, base) {\n    \t\t// http://kevin.vanzonneveld.net\n    \t\t// +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t\t// +   improved by: stensi\n    \t\t// +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t\t// +   input by: Matteo\n    \t\t// +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n    \t\t// +   bugfixed by: Rafał Kukawski (http://kukawski.pl)\n    \t\t// *     example 1: intval('Kevin van Zonneveld');\n    \t\t// *     returns 1: 0\n    \t\t// *     example 2: intval(4.2);\n    \t\t// *     returns 2: 4\n    \t\t// *     example 3: intval(42, 8);\n    \t\t// *     returns 3: 42\n    \t\t// *     example 4: intval('09');\n    \t\t// *     returns 4: 9\n    \t\t// *     example 5: intval('1e', 16);\n    \t\t// *     returns 5: 30\n    \t\tvar tmp;\n    \n    \t\tvar type = typeof(mixed_var);\n    \n    \t\tif (type === 'boolean') {\n    \t\t\treturn +mixed_var;\n    \t\t} else if (type === 'string') {\n    \t\t\ttmp = parseInt(mixed_var, base || 10);\n    \t\t\treturn (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp;\n    \t\t} else if (type === 'number' && isFinite(mixed_var)) {\n    \t\t\treturn mixed_var | 0;\n    \t\t} else {\n    \t\t\treturn 0;\n    \t\t}\n    \t},\n    \n    \t_sprintf: function() {\n    \t  // http://kevin.vanzonneveld.net\n    \t  // +   original by: Ash Searle (http://hexmen.com/blog/)\n    \t  // + namespaced by: Michael White (http://getsprink.com)\n    \t  // +    tweaked by: Jack\n    \t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t  // +      input by: Paulo Freitas\n    \t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t  // +      input by: Brett Zamir (http://brett-zamir.me)\n    \t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t  // +   improved by: Dj\n    \t  // +   improved by: Allidylls\n    \t  // *     example 1: sprintf(\"%01.2f\", 123.1);\n    \t  // *     returns 1: 123.10\n    \t  // *     example 2: sprintf(\"[%10s]\", 'monkey');\n    \t  // *     returns 2: '[    monkey]'\n    \t  // *     example 3: sprintf(\"[%'#10s]\", 'monkey');\n    \t  // *     returns 3: '[####monkey]'\n    \t  // *     example 4: sprintf(\"%d\", 123456789012345);\n    \t  // *     returns 4: '123456789012345'\n    \t  var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g;\n    \t  var a = arguments,\n    \t    i = 0,\n    \t    format = a[i++];\n    \n    \t  // pad()\n    \t  var pad = function (str, len, chr, leftJustify) {\n    \t    if (!chr) {\n    \t      chr = ' ';\n    \t    }\n    \t    var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);\n    \t    return leftJustify ? str + padding : padding + str;\n    \t  };\n    \n    \t  // justify()\n    \t  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    \t    var diff = minWidth - value.length;\n    \t    if (diff > 0) {\n    \t      if (leftJustify || !zeroPad) {\n    \t        value = pad(value, minWidth, customPadChar, leftJustify);\n    \t      } else {\n    \t        value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n    \t      }\n    \t    }\n    \t    return value;\n    \t  };\n    \n    \t  // formatBaseX()\n    \t  var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    \t    // Note: casts negative numbers to positive ones\n    \t    var number = value >>> 0;\n    \t    prefix = prefix && number && {\n    \t      '2': '0b',\n    \t      '8': '0',\n    \t      '16': '0x'\n    \t    }[base] || '';\n    \t    value = prefix + pad(number.toString(base), precision || 0, '0', false);\n    \t    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n    \t  };\n    \n    \t  // formatString()\n    \t  var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    \t    if (precision != null) {\n    \t      value = value.slice(0, precision);\n    \t    }\n    \t    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);\n    \t  };\n    \n    \t  // doFormat()\n    \t  var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n    \t    var number;\n    \t    var prefix;\n    \t    var method;\n    \t    var textTransform;\n    \t    var value;\n    \n    \t    if (substring == '%%') {\n    \t      return '%';\n    \t    }\n    \n    \t    // parse flags\n    \t    var leftJustify = false,\n    \t      positivePrefix = '',\n    \t      zeroPad = false,\n    \t      prefixBaseX = false,\n    \t      customPadChar = ' ';\n    \t    var flagsl = flags.length;\n    \t    for (var j = 0; flags && j < flagsl; j++) {\n    \t      switch (flags.charAt(j)) {\n    \t      case ' ':\n    \t        positivePrefix = ' ';\n    \t        break;\n    \t      case '+':\n    \t        positivePrefix = '+';\n    \t        break;\n    \t      case '-':\n    \t        leftJustify = true;\n    \t        break;\n    \t      case \"'\":\n    \t        customPadChar = flags.charAt(j + 1);\n    \t        break;\n    \t      case '0':\n    \t        zeroPad = true;\n    \t        break;\n    \t      case '#':\n    \t        prefixBaseX = true;\n    \t        break;\n    \t      }\n    \t    }\n    \n    \t    // parameters may be null, undefined, empty-string or real valued\n    \t    // we want to ignore null, undefined and empty-string values\n    \t    if (!minWidth) {\n    \t      minWidth = 0;\n    \t    } else if (minWidth == '*') {\n    \t      minWidth = +a[i++];\n    \t    } else if (minWidth.charAt(0) == '*') {\n    \t      minWidth = +a[minWidth.slice(1, -1)];\n    \t    } else {\n    \t      minWidth = +minWidth;\n    \t    }\n    \n    \t    // Note: undocumented perl feature:\n    \t    if (minWidth < 0) {\n    \t      minWidth = -minWidth;\n    \t      leftJustify = true;\n    \t    }\n    \n    \t    if (!isFinite(minWidth)) {\n    \t      throw new Error('sprintf: (minimum-)width must be finite');\n    \t    }\n    \n    \t    if (!precision) {\n    \t      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : undefined;\n    \t    } else if (precision == '*') {\n    \t      precision = +a[i++];\n    \t    } else if (precision.charAt(0) == '*') {\n    \t      precision = +a[precision.slice(1, -1)];\n    \t    } else {\n    \t      precision = +precision;\n    \t    }\n    \n    \t    // grab value using valueIndex if required?\n    \t    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n    \n    \t    switch (type) {\n    \t    case 's':\n    \t      return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n    \t    case 'c':\n    \t      return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n    \t    case 'b':\n    \t      return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    \t    case 'o':\n    \t      return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    \t    case 'x':\n    \t      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    \t    case 'X':\n    \t      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();\n    \t    case 'u':\n    \t      return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    \t    case 'i':\n    \t    case 'd':\n    \t      number = +value || 0;\n    \t      number = Math.round(number - number % 1); // Plain Math.round doesn't just truncate\n    \t      prefix = number < 0 ? '-' : positivePrefix;\n    \t      value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n    \t      return justify(value, prefix, leftJustify, minWidth, zeroPad);\n    \t    case 'e':\n    \t    case 'E':\n    \t    case 'f': // Should handle locales (as per setlocale)\n    \t    case 'F':\n    \t    case 'g':\n    \t    case 'G':\n    \t      number = +value;\n    \t      prefix = number < 0 ? '-' : positivePrefix;\n    \t      method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n    \t      textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n    \t      value = prefix + Math.abs(number)[method](precision);\n    \t      return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n    \t    default:\n    \t      return substring;\n    \t    }\n    \t  };\n    \n    \t  return format.replace(regex, doFormat);\n    \t},\n    \n    \t_preg_split: function(pattern, subject, limit, flags) {\n    \t    // http://kevin.vanzonneveld.net\n    \t    // + original by: Marco Marchiò\n    \t    // * example 1: preg_split(/[\\s,]+/, 'hypertext language, programming');\n    \t    // * returns 1: ['hypertext', 'language', 'programming']\n    \t    // * example 2: preg_split('//', 'string', -1, 'PREG_SPLIT_NO_EMPTY');\n    \t    // * returns 2: ['s', 't', 'r', 'i', 'n', 'g']\n    \t    // * example 3: var str = 'hypertext language programming';\n    \t    // * example 3: preg_split('/ /', str, -1, 'PREG_SPLIT_OFFSET_CAPTURE');\n    \t    // * returns 3: [['hypertext', 0], ['language', 10], ['programming', 19]]\n    \t    // * example 4: preg_split('/( )/', '1 2 3 4 5 6 7 8', 4, 'PREG_SPLIT_DELIM_CAPTURE');\n    \t    // * returns 4: ['1', ' ', '2', ' ', '3', ' ', '4 5 6 7 8']\n    \t    // * example 5: preg_split('/( )/', '1 2 3 4 5 6 7 8', 4, (2 | 4));\n    \t    // * returns 5: [['1', 0], [' ', 1], ['2', 2], [' ', 3], ['3', 4], [' ', 5], ['4 5 6 7 8', 6]]\n    \n    \t    limit = limit || 0; flags = flags || ''; // Limit and flags are optional\n    \n    \t    var result, ret=[], index=0, i = 0,\n    \t        noEmpty = false, delim = false, offset = false,\n    \t        OPTS = {}, optTemp = 0,\n    \t        regexpBody = /^\\/(.*)\\/\\w*$/.exec(pattern.toString())[1],\n    \t        regexpFlags = /^\\/.*\\/(\\w*)$/.exec(pattern.toString())[1];\n    \t        // Non-global regexp causes an infinite loop when executing the while,\n    \t        // so if it's not global, copy the regexp and add the \"g\" modifier.\n    \t        pattern = pattern.global && typeof pattern !== 'string' ? pattern :\n    \t            new RegExp(regexpBody, regexpFlags+(regexpFlags.indexOf('g') !==-1 ? '' :'g'));\n    \n    \t    OPTS = {\n    \t        'PREG_SPLIT_NO_EMPTY': 1,\n    \t        'PREG_SPLIT_DELIM_CAPTURE': 2,\n    \t        'PREG_SPLIT_OFFSET_CAPTURE': 4\n    \t    };\n    \t    if (typeof flags !== 'number') { // Allow for a single string or an array of string flags\n    \t        flags = [].concat(flags);\n    \t        for (i=0; i < flags.length; i++) {\n    \t            // Resolve string input to bitwise e.g. 'PREG_SPLIT_OFFSET_CAPTURE' becomes 4\n    \t            if (OPTS[flags[i]]) {\n    \t                optTemp = optTemp | OPTS[flags[i]];\n    \t            }\n    \t        }\n    \t        flags = optTemp;\n    \t    }\n    \t    noEmpty = flags & OPTS.PREG_SPLIT_NO_EMPTY;\n    \t    delim = flags & OPTS.PREG_SPLIT_DELIM_CAPTURE;\n    \t    offset = flags & OPTS.PREG_SPLIT_OFFSET_CAPTURE;\n    \n    \t    var _filter = function(str, strindex) {\n    \t        // If the match is empty and the PREG_SPLIT_NO_EMPTY flag is set don't add it\n    \t        if (noEmpty && !str.length) {return;}\n    \t        // If the PREG_SPLIT_OFFSET_CAPTURE flag is set\n    \t        // transform the match into an array and add the index at position 1\n    \t        if (offset) {str = [str, strindex];}\n    \t        ret.push(str);\n    \t    };\n    \t    // Special case for empty regexp\n    \t    if (!regexpBody){\n    \t        result=subject.split('');\n    \t        for (i=0; i < result.length; i++) {\n    \t            _filter(result[i], i);\n    \t        }\n    \t        return ret;\n    \t    }\n    \t    // Exec the pattern and get the result\n    \t    while (result = pattern.exec(subject)) {\n    \t        // Stop if the limit is 1\n    \t        if (limit === 1) {break;}\n    \t        // Take the correct portion of the string and filter the match\n    \t        _filter(subject.slice(index, result.index), index);\n    \t        index = result.index+result[0].length;\n    \t        // If the PREG_SPLIT_DELIM_CAPTURE flag is set, every capture match must be included in the results array\n    \t        if (delim) {\n    \t            // Convert the regexp result into a normal array\n    \t            var resarr = Array.prototype.slice.call(result);\n    \t            for (i = 1; i < resarr.length; i++) {\n    \t                if (result[i] !== undefined) {\n    \t                    _filter(result[i], result.index+result[0].indexOf(result[i]));\n    \t                }\n    \t            }\n    \t        }\n    \t        limit--;\n    \t    }\n    \t    // Filter last match\n    \t    _filter(subject.slice(index, subject.length), index);\n    \t    return ret;\n    \t},\n    \n    \n    \t_ord: function(string) {\t  \n    \t  return string.charCodeAt(0);\n    \t},\n    \n    \t_array_search: function(needle, haystack, argStrict) {\n    \t  // http://kevin.vanzonneveld.net\n    \t  // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t  // +      input by: Brett Zamir (http://brett-zamir.me)\n    \t  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    \t  // *     example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'});\n    \t  // *     returns 1: 'surname'\n    \t  // *     example 2: ini_set('phpjs.return_phpjs_arrays', 'on');\n    \t  // *     example 2: var ordered_arr = array({3:'value'}, {2:'value'}, {'a':'value'}, {'b':'value'});\n    \t  // *     example 2: var key = array_search(/val/g, ordered_arr); // or var key = ordered_arr.search(/val/g);\n    \t  // *     returns 2: '3'\n    \n    \t  var strict = !!argStrict,\n    \t    key = '';\n    \n    \t  if (haystack && typeof haystack === 'object' && haystack.change_key_case) { // Duck-type check for our own array()-created PHPJS_Array\n    \t    return haystack.search(needle, argStrict);\n    \t  }\n    \t  if (typeof needle === 'object' && needle.exec) { // Duck-type for RegExp\n    \t    if (!strict) { // Let's consider case sensitive searches as strict\n    \t      var flags = 'i' + (needle.global ? 'g' : '') +\n    \t            (needle.multiline ? 'm' : '') +\n    \t            (needle.sticky ? 'y' : ''); // sticky is FF only\n    \t      needle = new RegExp(needle.source, flags);\n    \t    }\n    \t    for (key in haystack) {\n    \t      if (needle.test(haystack[key])) {\n    \t        return key;\n    \t      }\n    \t    }\n    \t    return false;\n    \t  }\n    \n    \t  for (key in haystack) {\n    \t    if ((strict && haystack[key] === needle) || (!strict && haystack[key] == needle)) {\n    \t      return key;\n    \t    }\n    \t  }\n    \n      \t  return false;\n    \t},\n    \n    \t_my_bcmod: function(x, y) {\n    \t    // how many numbers to take at once? carefull not to exceed (int)\n    \t    var take = 5;    \n    \t    var mod = '';\n    \t    do {\n    \t        var a = parseInt(mod + '' + x.substring(0, take));\n    \t        x = x.substring(take);\n    \t        mod = a % y;   \n    \t    }\n    \t    while ( x.length );\n    \n    \t    return parseInt(mod); \n    \t}\n    \n    };\n    let BarcodePayment;\n    let sequence;\n    let codewords;\n    /**\n     * BarcodeGenerator - 2D Barcode generator for Croatian payment(LGPLv3)\n     * version: 0.502\n     */\n    BarcodePayment = new function() {\n    \tvar _me = this;\n    \t\n    \t// Constants\n    \tvar _allowedSingleByteCharacters = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \" \", \",\", \".\", \":\", \"-\", \"+\", \"?\", \"'\", \"/\", \"(\", \")\" ];\n    \tvar _allowedTwoByteCharacters = [ \"Š\", \"Đ\", \"Č\", \"Ć\", \"Ž\", \"š\", \"đ\", \"č\", \"ć\", \"ž\" ];\n    \tvar _allowedCharacters = jQuery.merge(jQuery.merge([], _allowedSingleByteCharacters), _allowedTwoByteCharacters);\n    \t\n    \tvar _priceFieldLength = 15;\n    \tvar _pricePattern = \"^[0-9]+,[0-9]{2}$\";\n    \t\n    \tvar _delimiter = String.fromCharCode(0x0A);\n    \tvar _header = \"HRVHUB30\";\n    \tvar _currency = \"HRK\"\n    \tvar _paymentModelPrefix = \"HR\";\n    \t\n    \t// Private variables\n    \tvar _settings;\n    \t\n    \tthis.Defaults = {\n    \t\tValidateIBAN: false, // TODO: Implement IBAN validation\n    \t\tValidateModelPozivNaBroj: false // TODO: Implement callout number validation\n    \t}\n    \t\n    \t// Public functions\n    \tthis.GetLength = function(str) {\n    \t\tvar len = 0;\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(str)) {\n    \t\t\tfor (var i = 0; i < str.length; ++i) {\n    \t\t\t\tvar c = str[i];\n    \t\t\t\t\n    \t\t\t\tif (jQuery.inArray(c, _allowedTwoByteCharacters) > -1) {\n    \t\t\t\t\tlen += 2;\n    \t\t\t\t} else if (jQuery.inArray(c, _allowedSingleByteCharacters) > -1) {\n    \t\t\t\t\tlen += 1;\n    \t\t\t\t} else {\n    \t\t\t\t\treturn -1;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\treturn len;\n    \t}\n    \t\n    \tthis.IsIBANValid = function(iban) {\n    \t\t// TODO: Implement IBAN validation\n    \t\treturn true;\n    \t}\n    \t\n    \tthis.IsPaymentModelValid = function(paymentModel) {\n    \t\tvar isValid = false;\n    \t\t\n    \t\t$.each(BarcodePayment.PaymentModels, function() { \n    \t\t\tif (this.model == paymentModel) {\n    \t\t\t\tisValid = true;\n    \t\t\t\treturn false; // Break out of each\n    \t\t\t}\n    \t\t});\n    \t\t\n    \t\treturn isValid;\n    \t}\n    \t\n    \tthis.IsCalloutNumberValid = function(calloutNumber, paymentModel) {\n    \t\tvar isValid = true;\n    \t\t\n    \t\tif (isValid && _settings.ValidateModelPozivNaBroj) {\n    \t\t\t// TODO: Implement callout number validation by model\n    \t\t}\n    \t\t\n    \t\treturn isValid;\n    \t}\n    \t\n    \tthis.IsIntentCodeValid = function(intentCode) {\n    \t\tvar isValid = false;\n    \t\t\n    \t\t$.each(BarcodePayment.IntentCodes, function() { \n    \t\t\tif (this.code == intentCode) {\n    \t\t\t\tisValid = true;\n    \t\t\t\treturn false; // Break out of each\n    \t\t\t}\n    \t\t});\n    \t\t\n    \t\treturn isValid;\n    \t}\n    \t\n    \tthis.ValidatePaymentParams = function(paymentParams) {\n    \t\tif (!(paymentParams instanceof(BarcodePayment.PaymentParams))) {\n    \t\t\treturn null;\n    \t\t}\n    \t\t\n    \t\tvar result = BarcodePayment.ValidationResult.OK;\n    \t\tvar fieldLength = -1;\n    \n    \t\t// Price\n    \t\tfieldLength = _me.GetLength(paymentParams.Iznos);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.Price) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PriceMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.Iznos) && (fieldLength == -1 || paymentParams.Iznos.match(_pricePattern) == null)) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PricePatternInvalid;\n    \t\t}\n    \t\t\n    \t\t// Payer name\n    \t\tfieldLength = _me.GetLength(paymentParams.ImePlatitelja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.PayerName) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerNameMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.ImePlatitelja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerNameInvalid;\n    \t\t}\n    \t\t\n    \t\t// Payer address\n    \t\tfieldLength = _me.GetLength(paymentParams.AdresaPlatitelja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.PayerAddress) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerAddressMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.AdresaPlatitelja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerAddressInvalid;\n    \t\t}\n    \t\t\n    \t\t// Payer HQ\n    \t\tfieldLength = _me.GetLength(paymentParams.SjedistePlatitelja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.PayerHQ) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerHQMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.SjedistePlatitelja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PayerHQInvalid;\n    \t\t}\n    \t\t\n    \t\t// Receiver name\n    \t\tfieldLength = _me.GetLength(paymentParams.Primatelj);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverName) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverNameMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.Primatelj) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverNameInvalid;\n    \t\t}\n    \t\t\n    \t\t// Receiver address\n    \t\tfieldLength = _me.GetLength(paymentParams.AdresaPrimatelja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverAddress) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverAddressMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.AdresaPrimatelja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverAddressInvalid;\n    \t\t}\n    \t\t\n    \t\t// Receiver HQ\n    \t\tfieldLength = _me.GetLength(paymentParams.SjedistePrimatelja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverHQ) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverHQMaxLengthExceeded;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.SjedistePrimatelja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.ReceiverHQInvalid;\n    \t\t}\n    \t\t\n    \t\t// IBAN\n    \t\tfieldLength = _me.GetLength(paymentParams.IBAN);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.IBAN) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IBANMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.IBAN) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IBANInvalid;\n    \t\t}\n    \t\t\n    \t\tif (_settings.ValidateIBAN && !StringNotDefinedOrEmpty(paymentParams.IBAN) && !_me.IsIBANValid(paymentParams.IBAN)) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IBANInvalid;\n    \t\t}\n    \t\t\n    \t\t// Payment model\n    \t\tfieldLength = _me.GetLength(paymentParams.ModelPlacanja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.PaymentModel) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.ModelPlacanja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelInvalid;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.ModelPlacanja) && !_me.IsPaymentModelValid(paymentParams.ModelPlacanja)) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelInvalid;\n    \t\t}\n    \t\t\n    \t\t// Callout number\n    \t\tfieldLength = _me.GetLength(paymentParams.PozivNaBroj);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.CalloutNumber) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.PozivNaBroj) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberInvalid;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.PozivNaBroj) && !_me.IsCalloutNumberValid(paymentParams.PozivNaBroj, paymentParams.ModelPlacanja)) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberInvalid;\n    \t\t}\n    \t\t\n    \t\t// Intent code\n    \t\tfieldLength = _me.GetLength(paymentParams.SifraNamjene);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.IntentCode) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.SifraNamjene) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeInvalid;\n    \t\t}\n    \t\t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.SifraNamjene) && !_me.IsIntentCodeValid(paymentParams.SifraNamjene)) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeInvalid;\n    \t\t}\n    \t\t\n    \t\t// Description\n    \t\tfieldLength = _me.GetLength(paymentParams.OpisPlacanja);\n    \t\tif (fieldLength > BarcodePayment.MaxLengths.Description) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.DescriptionMaxLengthExceeded;\n    \t\t}\n    \t\n    \t\tif (!StringNotDefinedOrEmpty(paymentParams.OpisPlacanja) && fieldLength == -1) {\n    \t\t\tresult |= BarcodePayment.ValidationResult.DescriptionInvalid;\n    \t\t}\n    \t\t\n    \t\treturn result;\n    \t}\n    \t\n    \tthis.GetEncodedText = function(paymentParams) {\n    \t\tif (!(paymentParams instanceof(BarcodePayment.PaymentParams))) {\n    \t\t\treturn BarcodePayment.ResultCode.InvalidObject;\n    \t\t}\n    \t\t\n    \t\tif (BarcodePayment.ValidatePaymentParams(paymentParams) != BarcodePayment.ValidationResult.OK) {\n    \t\t\treturn BarcodePayment.ResultCode.InvalidContent;\n    \t\t}\n    \n    \t\treturn ConcatenateStrings(\n    \t\t\t_header, _delimiter,\n    \t\t\t_currency, _delimiter,\n    \t\t\tEncodePrice(paymentParams.Iznos), _delimiter,\n    \t\t\tpaymentParams.ImePlatitelja, _delimiter,\n    \t\t\tpaymentParams.AdresaPlatitelja, _delimiter,\n    \t\t\tpaymentParams.SjedistePlatitelja, _delimiter,\n    \t\t\tpaymentParams.Primatelj, _delimiter,\n    \t\t\tpaymentParams.AdresaPrimatelja, _delimiter,\n    \t\t\tpaymentParams.SjedistePrimatelja, _delimiter,\n    \t\t\tpaymentParams.IBAN, _delimiter,\n    \t\t\t_paymentModelPrefix, paymentParams.ModelPlacanja, _delimiter,\n    \t\t\tpaymentParams.PozivNaBroj, _delimiter,\n    \t\t\tpaymentParams.SifraNamjene, _delimiter,\n    \t\t\tpaymentParams.OpisPlacanja, _delimiter\n    \t\t);\n    \t}\n    \t\n    \t// Private functions\n    \tvar PadLeft = function(str, len, pad) {\n    \t\twhile (str.length < len) {\n    \t\t\tstr = pad + str;\n    \t\t}\n    \n    \t\treturn str;\n    \t}\n    \t\n    \tvar StringNotDefinedOrEmpty = function(str) {\n    \t\treturn str == undefined || str == null || str.length == 0;\n    \t}\n    \t\n    \tvar EncodePrice = function(price) {\n    \t\tvar fullLength = 15;\n    \t\treturn PadLeft(price.replace(',', ''), fullLength, '0');\n    \t}\n    \t\n    \tvar ConcatenateStrings = function() {\n    \t\tvar res = '';\n    \t\t\n    \t\tfor (var i = 0; i < arguments.length; ++i) {\n    \t\t\tif (typeof(arguments[i]) != 'undefined') {\n    \t\t\t\tres += arguments[i];\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t\treturn res;\n    \t}\n    \t\n    \t// Enumerations and helper classes\n    \t// Source: PBZ net banking website\n    \tthis.IntentCodes = [\n    \t\t{ code: \"ADMG\", title: \"Administracija\" },\n    \t\t{ code: \"GVEA\", title: \"Austrijski državni zaposlenici, Kategorija A\" },\n    \t\t{ code: \"GVEB\", title: \"Austrijski državni zaposlenici, Kategorija B\" },\n    \t\t{ code: \"GVEC\", title: \"Austrijski državni zaposlenici, Kategorija C\" },\n    \t\t{ code: \"GVED\", title: \"Austrijski državni zaposlenici, Kategorija D\" },\n    \t\t{ code: \"BUSB\", title: \"Autobusni\" },\n    \t\t{ code: \"CPYR\", title: \"Autorsko pravo\" },\n    \t\t{ code: \"HSPC\", title: \"Bolnička njega\" },\n    \t\t{ code: \"RDTX\", title: \"Cestarina\" },\n    \t\t{ code: \"DEPT\", title: \"Depozit\" },\n    \t\t{ code: \"DERI\", title: \"Derivati (izvedenice)\" },\n    \t\t{ code: \"FREX\", title: \"Devizno tržište\" },\n    \t\t{ code: \"CGDD\", title: \"Direktno terećenje nastalo kao rezultat kartične transakcije\" },\n    \t\t{ code: \"DIVD\", title: \"Dividenda\" },\n    \t\t{ code: \"BECH\", title: \"Dječji doplatak\" },\n    \t\t{ code: \"CHAR\", title: \"Dobrotvorno plaćanje\" },\n    \t\t{ code: \"ETUP\", title: \"Doplata e-novca\" },\n    \t\t{ code: \"MTUP\", title: \"Doplata mobilnog uređaja (bon)\" },\n    \t\t{ code: \"GOVI\", title: \"Državno osiguranje\" },\n    \t\t{ code: \"ENRG\", title: \"Energenti\" },\n    \t\t{ code: \"CDCD\", title: \"Gotovinska isplata\" },\n    \t\t{ code: \"CSDB\", title: \"Gotovinska isplata\" },\n    \t\t{ code: \"TCSC\", title: \"Gradske naknade\" },\n    \t\t{ code: \"CDCS\", title: \"Isplata gotovine s naknadom\" },\n    \t\t{ code: \"FAND\", title: \"Isplata naknade za elementarne nepogode\" },\n    \t\t{ code: \"CSLP\", title: \"Isplata socijalnih zajmova društava  banci\" },\n    \t\t{ code: \"RHBS\", title: \"Isplata za vrijeme profesionalne rehabilitacije\" },\n    \t\t{ code: \"GWLT\", title: \"Isplata žrtvama rata i invalidima\" },\n    \t\t{ code: \"ADCS\", title: \"Isplate za donacije, sponzorstva, savjetodavne, intelektualne i druge usluge\" },\n    \t\t{ code: \"PADD\", title: \"Izravno terećenje\" },\n    \t\t{ code: \"INTE\", title: \"Kamata\" },\n    \t\t{ code: \"CDDP\", title: \"Kartično plaćanje s odgodom\" },\n    \t\t{ code: \"CDCB\", title: \"Kartično plaćanje uz gotovinski povrat (Cashback)\" },\n    \t\t{ code: \"BOCE\", title: \"Knjiženje konverzije u Back Office-u\" },\n    \t\t{ code: \"POPE\", title: \"Knjiženje mjesta kupnje\" },\n    \t\t{ code: \"RCKE\", title: \"Knjiženje ponovne prezentacije čeka\" },\n    \t\t{ code: \"AREN\", title: \"Knjiženje računa potraživanja\" },\n    \t\t{ code: \"COMC\", title: \"Komercijalno plaćanje\" },\n    \t\t{ code: \"UBIL\", title: \"Komunalne usluge\" },\n    \t\t{ code: \"COMT\", title: \"Konsolidirano plaćanje treće strane za račun potrošača.\" },\n    \t\t{ code: \"SEPI\", title: \"Kupnja vrijednosnica (interna)\" },\n    \t\t{ code: \"GDDS\", title: \"Kupovina-prodaja roba\" },\n    \t\t{ code: \"GSCB\", title: \"Kupovina-prodaja roba i usluga uz gotovinski povrat\" },\n    \t\t{ code: \"GDSV\", title: \"Kupovina/prodaja roba i usluga\" },\n    \t\t{ code: \"SCVE\", title: \"Kupovina/prodaja usluga\" },\n    \t\t{ code: \"HLTC\", title: \"Kućna njega bolesnika\" },\n    \t\t{ code: \"CBLK\", title: \"Masovni kliring kartica\" },\n    \t\t{ code: \"MDCS\", title: \"Medicinske usluge\" },\n    \t\t{ code: \"NWCM\", title: \"Mrežna komunikacija\" },\n    \t\t{ code: \"RENT\", title: \"Najam\" },\n    \t\t{ code: \"ALLW\", title: \"Naknada\" },\n    \t\t{ code: \"SSBE\", title: \"Naknada socijalnog osiguranja\" },\n    \t\t{ code: \"LICF\", title: \"Naknada za licencu\" },\n    \t\t{ code: \"GFRP\", title: \"Naknada za nezaposlene u toku stečaja\" },\n    \t\t{ code: \"BENE\", title: \"Naknada za nezaposlenost/invaliditet\" },\n    \t\t{ code: \"CFEE\", title: \"Naknada za poništenje\" },\n    \t\t{ code: \"AEMP\", title: \"Naknada za zapošljavanje\" },\n    \t\t{ code: \"COLL\", title: \"Naplata\" },\n    \t\t{ code: \"FCOL\", title: \"Naplata naknade po kartičnoj transakciji\" },\n    \t\t{ code: \"DBTC\", title: \"Naplata putem terećenja\" },\n    \t\t{ code: \"NOWS\", title: \"Nenavedeno\" },\n    \t\t{ code: \"IDCP\", title: \"Neopozivo plaćanje sa računa debitne kartice\" },\n    \t\t{ code: \"ICCP\", title: \"Neopozivo plaćanje sa računa kreditne kartice\" },\n    \t\t{ code: \"BONU\", title: \"Novčana nagrada (bonus).\" },\n    \t\t{ code: \"PAYR\", title: \"Obračun plaća\" },\n    \t\t{ code: \"BLDM\", title: \"Održavanje zgrada\" },\n    \t\t{ code: \"HEDG\", title: \"Omeđivanje rizika (Hedging)\" },\n    \t\t{ code: \"CDOC\", title: \"Originalno odobrenje\" },\n    \t\t{ code: \"PPTI\", title: \"Osiguranje imovine\" },\n    \t\t{ code: \"LBRI\", title: \"Osiguranje iz rada\" },\n    \t\t{ code: \"OTHR\", title: \"Ostalo\" },\n    \t\t{ code: \"CLPR\", title: \"Otplata glavnice kredita za automobil\" },\n    \t\t{ code: \"HLRP\", title: \"Otplata stambenog kredita\" },\n    \t\t{ code: \"LOAR\", title: \"Otplata zajma\" },\n    \t\t{ code: \"ALMY\", title: \"Plaćanje alimentacije\" },\n    \t\t{ code: \"RCPT\", title: \"Plaćanje blagajničke potvrde. (ReceiptPayment)\" },\n    \t\t{ code: \"PRCP\", title: \"Plaćanje cijene\" },\n    \t\t{ code: \"SUPP\", title: \"Plaćanje dobavljača\" },\n    \t\t{ code: \"CFDI\", title: \"Plaćanje dospjele glavnice\" },\n    \t\t{ code: \"GOVT\", title: \"Plaćanje države\" },\n    \t\t{ code: \"PENS\", title: \"Plaćanje mirovine\" },\n    \t\t{ code: \"DCRD\", title: \"Plaćanje na račun debitne kartice.\" },\n    \t\t{ code: \"CCRD\", title: \"Plaćanje na račun kreditne kartice\" },\n    \t\t{ code: \"SALA\", title: \"Plaćanje plaće\" },\n    \t\t{ code: \"REBT\", title: \"Plaćanje popusta/rabata\" },\n    \t\t{ code: \"TAXS\", title: \"Plaćanje poreza\" },\n    \t\t{ code: \"VATX\", title: \"Plaćanje poreza na dodatnu vrijednost\" },\n    \t\t{ code: \"RINP\", title: \"Plaćanje rata koje se ponavljaju\" },\n    \t\t{ code: \"IHRP\", title: \"Plaćanje rate pri kupnji na otplatu\" },\n    \t\t{ code: \"IVPT\", title: \"Plaćanje računa\" },\n    \t\t{ code: \"CDBL\", title: \"Plaćanje računa za kreditnu karticu\" },\n    \t\t{ code: \"TREA\", title: \"Plaćanje riznice\" },\n    \t\t{ code: \"CMDT\", title: \"Plaćanje roba\" },\n    \t\t{ code: \"INTC\", title: \"Plaćanje unutar društva\" },\n    \t\t{ code: \"INVS\", title: \"Plaćanje za fondove i vrijednosnice\" },\n    \t\t{ code: \"PRME\", title: \"Plemeniti metali\" },\n    \t\t{ code: \"AGRT\", title: \"Poljoprivredni transfer\" },\n    \t\t{ code: \"INTX\", title: \"Porez na dohodak\" },\n    \t\t{ code: \"PTXP\", title: \"Porez na imovinu\" },\n    \t\t{ code: \"NITX\", title: \"Porez na neto dohodak\" },\n    \t\t{ code: \"ESTX\", title: \"Porez na ostavštinu\" },\n    \t\t{ code: \"GSTX\", title: \"Porez na robu i usluge\" },\n    \t\t{ code: \"HSTX\", title: \"Porez na stambeni prostor\" },\n    \t\t{ code: \"FWLV\", title: \"Porez na strane radnike\" },\n    \t\t{ code: \"WHLD\", title: \"Porez po odbitku\" },\n    \t\t{ code: \"BEXP\", title: \"Poslovni troškovi\" },\n    \t\t{ code: \"REFU\", title: \"Povrat\" },\n    \t\t{ code: \"TAXR\", title: \"Povrat poreza\" },\n    \t\t{ code: \"RIMB\", title: \"Povrat prethodne pogrešne transakcije\" },\n    \t\t{ code: \"OFEE\", title: \"Početna naknada (Opening Fee)\" },\n    \t\t{ code: \"ADVA\", title: \"Predujam\" },\n    \t\t{ code: \"INSU\", title: \"Premija osiguranja\" },\n    \t\t{ code: \"INPC\", title: \"Premija osiguranja za vozilo\" },\n    \t\t{ code: \"TRPT\", title: \"Prepaid cestarina (ENC)\" },\n    \t\t{ code: \"SUBS\", title: \"Pretplata\" },\n    \t\t{ code: \"CASH\", title: \"Prijenos gotovine\" },\n    \t\t{ code: \"PENO\", title: \"Prisilna naplata\" },\n    \t\t{ code: \"COMM\", title: \"Provizija\" },\n    \t\t{ code: \"INSM\", title: \"Rata\" },\n    \t\t{ code: \"ELEC\", title: \"Račun za električnu energiju\" },\n    \t\t{ code: \"CBTV\", title: \"Račun za kabelsku TV\" },\n    \t\t{ code: \"OTLC\", title: \"Račun za ostale telekom usluge\" },\n    \t\t{ code: \"GASB\", title: \"Račun za plin\" },\n    \t\t{ code: \"WTER\", title: \"Račun za vodu\" },\n    \t\t{ code: \"ANNI\", title: \"Renta\" },\n    \t\t{ code: \"BBSC\", title: \"Rodiljna naknada\" },\n    \t\t{ code: \"NETT\", title: \"Saldiranje (netiranje)\" },\n    \t\t{ code: \"CAFI\", title: \"Skrbničke naknade (interne)\" },\n    \t\t{ code: \"STDY\", title: \"Studiranje\" },\n    \t\t{ code: \"ROYA\", title: \"Tantijeme\" },\n    \t\t{ code: \"PHON\", title: \"Telefonski račun\" },\n    \t\t{ code: \"FERB\", title: \"Trajektni\" },\n    \t\t{ code: \"DMEQ\", title: \"Trajna medicinska pomagala\" },\n    \t\t{ code: \"WEBI\", title: \"Transakcija inicirana internetom\" },\n    \t\t{ code: \"TELI\", title: \"Transakcija inicirana telefonom\" },\n    \t\t{ code: \"HREC\", title: \"Transakcija se odnosi na doprinos poslodavca za troškove stanovanja\" },\n    \t\t{ code: \"CBFR\", title: \"Transakcija se odnosi na kapitalnu štednju za mirovinu\" },\n    \t\t{ code: \"CBFF\", title: \"Transakcija se odnosi na kapitalnu štednju, općenito\" },\n    \t\t{ code: \"TRAD\", title: \"Trgovinske usluge\" },\n    \t\t{ code: \"COST\", title: \"Troškovi\" },\n    \t\t{ code: \"CPKC\", title: \"Troškovi parkiranja\" },\n    \t\t{ code: \"TBIL\", title: \"Troškovi telekomunikacija\" },\n    \t\t{ code: \"NWCH\", title: \"Troškovi za mrežu\" },\n    \t\t{ code: \"EDUC\", title: \"Troškovi školovanja\" },\n    \t\t{ code: \"LIMA\", title: \"Upravljanje likvidnošću\" },\n    \t\t{ code: \"ACCT\", title: \"Upravljanje računom\" },\n    \t\t{ code: \"ANTS\", title: \"Usluge anestezije\" },\n    \t\t{ code: \"VIEW\", title: \"Usluge oftalmološke skrbi\" },\n    \t\t{ code: \"LTCF\", title: \"Ustanova dugoročne zdravstvene skrbi\" },\n    \t\t{ code: \"ICRF\", title: \"Ustanova socijalne skrbi\" },\n    \t\t{ code: \"CVCF\", title: \"Ustanova za usluge skrbi za rekonvalescente\" },\n    \t\t{ code: \"PTSP\", title: \"Uvjeti plaćanja\" },\n    \t\t{ code: \"MSVC\", title: \"Višestruke vrste usluga\" },\n    \t\t{ code: \"SECU\", title: \"Vrijednosni papiri\" },\n    \t\t{ code: \"LOAN\", title: \"Zajam\" },\n    \t\t{ code: \"FCPM\", title: \"Zakašnjele naknade\" },\n    \t\t{ code: \"TRFD\", title: \"Zaklada\" },\n    \t\t{ code: \"CDQC\", title: \"Zamjenska gotovina\" },\n    \t\t{ code: \"HLTI\", title: \"Zdravstveno osiguranje\" },\n    \t\t{ code: \"AIRB\", title: \"Zračni\" },\n    \t\t{ code: \"DNTS\", title: \"Zubarske usluge\" },\n    \t\t{ code: \"SAVG\", title: \"Štednja\" },\n    \t\t{ code: \"RLWY\", title: \"Željeznički\" },\n    \t\t{ code: \"LIFI\", title: \"Životno osiguranje\" }\n    \t]\n    \n    \t// TODO: Add validation rules for every payment model\n    \t// Source: FINA website - http://www.fina.hr/fgs.axd?id=16090&usg=AFQjCNF8XEhnL9POBo5CccBjCWW9gzBJJg&sig2=b5VcZvu4wgv185jhJR-U_w&cad=rja\n    \tthis.PaymentModels = [\n    \t\t{ model: \"00\" },\n    \t\t{ model: \"01\" },\n    \t\t{ model: \"02\" },\n    \t\t{ model: \"03\" },\n    \t\t{ model: \"04\" },\n    \t\t{ model: \"05\" },\n    \t\t{ model: \"06\" },\n    \t\t{ model: \"07\" },\n    \t\t{ model: \"08\" },\n    \t\t{ model: \"09\" },\n    \t\t{ model: \"10\" },\n    \t\t{ model: \"11\" },\n    \t\t{ model: \"12\" },\n    \t\t{ model: \"13\" },\n    \t\t{ model: \"14\" },\n    \t\t{ model: \"15\" },\n    \t\t{ model: \"16\" },\n    \t\t{ model: \"17\" },\n    \t\t{ model: \"18\" },\n    \t\t{ model: \"23\" },\n    \t\t{ model: \"24\" },\n    \t\t{ model: \"26\" },\n    \t\t{ model: \"27\" },\n    \t\t{ model: \"28\" },\n    \t\t{ model: \"29\" },\n    \t\t{ model: \"30\" },\n    \t\t{ model: \"31\" },\n    \t\t{ model: \"33\" },\n    \t\t{ model: \"34\" },\n    \t\t{ model: \"40\" },\n    \t\t{ model: \"41\" },\n    \t\t{ model: \"42\" },\n    \t\t{ model: \"43\" },\n    \t\t{ model: \"55\" },\n    \t\t{ model: \"62\" },\n    \t\t{ model: \"63\" },\n    \t\t{ model: \"64\" },\n    \t\t{ model: \"65\" },\n    \t\t{ model: \"67\" },\n    \t\t{ model: \"68\" },\n    \t\t{ model: \"69\" },\n    \t\t{ model: \"99\" },\n    \t\t{ model: \"25\" },\n    \t\t{ model: \"83\" },\n    \t\t{ model: \"84\" },\n    \t\t{ model: \"50\" }\n    \t]\n    \t\n    \tthis.AllowedSingleByteCharacters = jQuery.merge([], _allowedSingleByteCharacters);\n    \tthis.AllowedTwoByteCharacters = jQuery.merge([], _allowedTwoByteCharacters);\n    \tthis.AllowedCharacters = jQuery.merge([], _allowedCharacters);\n    \tthis.PricePattern = _pricePattern.substr(0);\n    \t\n    \tthis.MaxLengths = {\n    \t\tPrice: 16,\n    \t\tPayerName: 30,\n    \t\tPayerAddress: 27,\n    \t\tPayerHQ: 27,\n    \t\tReceiverName: 25,\n    \t\tReceiverAddress: 25,\n    \t\tReceiverHQ: 27,\n    \t\tIBAN: 21,\n    \t\tPaymentModel: 2,\n    \t\tCalloutNumber: 22,\n    \t\tIntentCode: 4,\n    \t\tDescription: 35\n    \t}\n    \t\n    \tthis.ResultCode = {\n    \t\tOK: 0,\n    \t\tInvalidObject: 1,\n    \t\tInvalidContent: 2\n    \t}\n    \t\n    \tthis.ValidationResult = {\n    \t\tOK: 0,\n    \t\t\n    \t\tPricePatternInvalid: 1,\n    \t\tPriceMaxLengthExceeded: 2,\n    \t\t\n    \t\tPayerNameInvalid: 4,\n    \t\tPayerNameMaxLengthExceeded: 8,\n    \t\t\n    \t\tPayerAddressInvalid: 16,\n    \t\tPayerAddressMaxLengthExceeded: 32,\n    \t\t\n    \t\tPayerHQInvalid: 64,\n    \t\tPayerHQMaxLengthExceeded: 128,\n    \t\t\n    \t\tReceiverNameInvalid: 256,\n    \t\tReceiverNameMaxLengthExceeded: 512,\n    \t\t\n    \t\tReceiverAddressInvalid: 1024,\n    \t\tReceiverAddressMaxLengthExceeded: 2048,\n    \t\t\n    \t\tReceiverHQInvalid: 4096,\n    \t\tReceiverHQMaxLengthExceeded: 8192,\n    \t\t\n    \t\tIBANInvalid: 16384,\n    \t\tIBANMaxLengthExceeded: 32768,\n    \t\t\n    \t\tPaymentModelInvalid: 65536,\n    \t\tPaymentModelMaxLengthExceeded: 131072,\n    \t\t\n    \t\tCalloutNumberInvalid: 262144,\n    \t\tCalloutNumberMaxLengthExceeded: 524288,\n    \t\t\n    \t\tIntentCodeInvalid: 1048576,\n    \t\tIntentCodeMaxLengthExceeded: 2097152,\n    \t\t\n    \t\tDescriptionInvalid: 4194304,\n    \t\tDescriptionMaxLengthExceeded: 8388608\n    \t}\n    \t\n    \tthis.PaymentParams = function () {\n    \t\tthis.Iznos = \"\";\n    \t\tthis.ImePlatitelja = \"\";\n    \t\tthis.AdresaPlatitelja = \"\";\n    \t\tthis.SjedistePlatitelja = \"\";\n    \t\tthis.Primatelj = \"\";\n    \t\tthis.AdresaPrimatelja = \"\";\n    \t\tthis.SjedistePrimatelja = \"\";\n    \t\tthis.IBAN = \"\";\n    \t\tthis.ModelPlacanja = \"\";\n    \t\tthis.PozivNaBroj = \"\";\n    \t\tthis.SifraNamjene = \"\";\n    \t\tthis.OpisPlacanja = \"\";\n    \t}\n    \t\n    \t// Initialization method\n    \tthis.Init = function(settings) {\n    \t\t_settings = jQuery.extend({}, BarcodePayment.Defaults, settings);\n    \t}\n    }\n\n    function modalStatusClass(s = 'na') {\n        $('.rkg-modal-status').removeClass('error ok');\n        if (s === 1) {\n            $('.rkg-modal-status').addClass('error');\n        } else if (s === 0) {\n            $('.rkg-modal-status').addClass('ok');\n        }\n    }\n\n    const loginStatus = {action: 'is_user_logged_in'};\n    $('.rkg-meni-open').click(() => {\n        $('body').addClass('modal-open');\n        $('.rkg-meni-background').fadeIn(200, () => {\n            $('.rkg-meni').fadeIn({queue: false, duration: 200})\n                .animate({bottom: '0', top: '0'}, 200);\n        });\n        $('#rkg-top-meni').fadeOut('fast');\n        $('#rkg-header-meni').fadeOut('fast');\n    });\n\n    $('.rkg-meni-close, #nav-main a').click(() => {\n        $('body').removeClass('modal-open');\n        $('.rkg-meni').fadeOut({queue: false, duration: 200})\n            .animate({bottom: '50%', top: '-50%'}, 200, () => {\n                $('.rkg-meni-background').fadeOut(200);\n            });\n        $('#rkg-top-meni').fadeIn('fast');\n        $('#rkg-header-meni').fadeIn('fast');\n    });\n\n    /* global rkgTheme loginStatus Croppie rkgScript PDF417 BarcodePayment modalStatusClass */\n    let modalShow     = false;\n    let signup        = null;\n    \n    const modalOpen = (modal, callback) => {\n        modalStatusClass();\n        $('.rkg-modal-status').text('');\n        $('body').addClass('modal-open');\n    \n        if (modalShow) {\n            $('.rkg-modal form, .modal-div').fadeOut('fast').promise().done(() => {\n                $(modal).fadeIn(400);\n            });\n        } else {\n            $('.rkg-modal form, .modal-div').hide();\n            $(modal).show();\n        }\n    \n        modalShow = true;\n        if ($(window).width() <= 1080) {\n            $('.rkg-modal')\n                .fadeIn({queue: false, duration: 'fast'}).promise().done(callback);\n            return;\n        }\n        $('.rkg-modal-background').fadeIn('fast').promise().done(() => {\n            $('.rkg-modal')\n                .fadeIn({queue: false, duration: 'fast'})\n                .animate({top: '50%'})\n                .promise()\n                .done(callback);\n        });\n    };\n    \n    $('.ShowPayModal').click((e) => {\n        e.preventDefault();\n        const textToEncode = $(e.currentTarget).data('barcode_text');\n        console.log(textToEncode);\n    \n        PDF417.init(textToEncode);\n    \n        const barcode = PDF417.getBarcodeArray();\n    \n        // block sizes (width and height) in pixels\n        const bw = 2;\n        const bh = 1;\n    \n        // create canvas element based on number of columns and rows in barcode\n        const container = document.getElementById('payment-barcode');\n        if (container.firstChild) {\n            container.removeChild(container.firstChild);\n        }\n    \n        const canvas = document.createElement('canvas');\n        canvas.width = bw * barcode.num_cols;\n        canvas.height = bh * barcode.num_rows;\n        container.appendChild(canvas);\n    \n        const ctx = canvas.getContext('2d');\n    \n        // graph barcode elements\n        let y = 0;\n        // for each row\n        for (let r = 0; r < barcode.num_rows; ++r) {\n            let x = 0;\n            // for each column\n            for (let c = 0; c < barcode.num_cols; ++c) {\n                if (barcode.bcode[r][c] === '1') {\n                    ctx.fillRect(x, y, bw, bh);\n                }\n                x += bw;\n            }\n            y += bh;\n        }\n    \n        const title = $(e.currentTarget).data('title');\n        const primatelj = $(e.currentTarget).data('primatelj');\n        const iban = $(e.currentTarget).data('iban');\n        const modelPlacanja = $(e.currentTarget).data('model_placanja');\n        const pozivNaBroj = $(e.currentTarget).data('poziv_na_broj');\n        const opisPlacanja = $(e.currentTarget).data('opis_placanja');\n        const iznos = $(e.currentTarget).data('iznos');\n        $('#payment-title').html(title);\n        $('#payment-primatelj').html(primatelj);\n        $('#payment-iban').html(iban);\n        $('#payment-model_placanja').html(modelPlacanja);\n        $('#payment-poziv_na_broj').html(pozivNaBroj);\n        $('#payment-opis_placanja').html(opisPlacanja);\n        $('#payment-iznos').html(iznos);\n    \n        // $('.rkg-profile-meni').hide()\n        // .promise()\n        // .done(() => {\n        // modalOpen('#payment-modal');\n        // });\n    });\n    \n    $('.rkg-modal-close, rkg-info-close').click((e) => {\n        modalShow = false;\n        e.preventDefault();\n        modalStatusClass();\n        $('.rkg-modal-status').text('');\n        $('body').removeClass('modal-open');\n        signup = null;\n        if ($(window).width() <= 1080) {\n            $('.rkg-modal')\n                .fadeOut({queue: false, duration: 'fast'})\n                .promise()\n                .done(() => {\n                    $('.rkg-modal form, .modal-div').hide();\n                });\n            return;\n        }\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .animate({top: '37.5%'})\n            .promise()\n            .done(() => {\n                $('.rkg-modal form, .modal-div').hide();\n                $('.rkg-modal-background').fadeOut('fast');\n            });\n    });\n    \n    $('.course-signup-ok-close').click((e) => {\n        modalShow = false;\n        e.preventDefault();\n        modalStatusClass();\n        $('.rkg-modal-status').text('');\n        $('body').removeClass('modal-open');\n        signup = null;\n        if ($(window).width() <= 1080) {\n            $('.rkg-modal')\n                .fadeOut({queue: false, duration: 'fast'})\n                .promise()\n                .done(() => {\n                    $('.rkg-modal form, .modal-div')\n                        .hide()\n                        .promise()\n                        .done(() => {\n                            window.location.reload();\n                        });\n                });\n            return;\n        }\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .animate({top: '37.5%'})\n            .promise()\n            .done(() => {\n                $('.rkg-modal form, .modal-div').hide();\n                $('.rkg-modal-background')\n                    .fadeOut('fast')\n                    .hide()\n                    .promise()\n                    .done(() => {\n                        window.location.reload();\n                    });\n            });\n    });\n    \n    if ($('#no-required-user').length !== 0) {\n        modalOpen('#registration');\n    }\n    \n    $('.rkg-login-button, .rkg-login-show').click(() => {\n        modalOpen('#login');\n    });\n    \n    $('.rkg-registration-show').click(() => {\n        modalOpen('#registration');\n    });\n    \n    $('.rkg-lost-password-show').click(() => {\n        modalOpen('#lost-password');\n    });\n    \n    $('#rkg-members-button').click(() => {\n        if ($('#rkg-members-table-container').is(':empty')) {\n            $.ajax({\n                type: 'POST',\n                url: rkgTheme.ajaxurl,\n                data: {\n                    action: 'getMembersList',\n                },\n                success(data) {\n                    $('#rkg-members-table-container').html(data);\n                },\n            });\n        }\n    \n        if (($(window).width() <= 1080) && (window.devicePixelRatio > 1.5)) {\n            $('.rkg-profile-meni').css('left', '-90vw')\n                .promise()\n                .done(() => {\n                    modalOpen('#rkg-moddal-members');\n                });\n            return;\n        }\n        $('.rkg-profile-meni').animate({\n            height: 'toggle',\n            opacity: 'toggle',\n        }, 'fast')\n            .promise()\n            .done(() => {\n                modalOpen('#rkg-moddal-members');\n            });\n    });\n    \n    $('.course-signup').on('click', (e) => {\n        e.preventDefault();\n        signup = 'course';\n        const signupId = $(e.currentTarget).data('course');\n        const signupName = $(e.currentTarget).data('name');\n        const signupDate = $(e.currentTarget).data('date');\n        const link = $(e.currentTarget).data('link');\n        $('input[name=\"signup-course\"]').val(signupId);\n        $('.course-signup-name').text(signupName);\n        $('.course-signup-date').text(signupDate);\n        $('#course-signup-modal-link').attr('href', link);\n        jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n            if (response === 'yes') {\n                const dob = $('#dob').val();\n                const oib = $('#oib').val();\n                const tel = $('#tel').val();\n                if ((dob.length === 0) || (oib.length === 0) || (tel.length === 0)) {\n                    modalOpen('#additional-details-form');\n                } else {\n                    $('#additional-details-form').submit();\n                }\n            } else {\n                modalOpen('#registration');\n            }\n        });\n    });\n    \n    $('form#login').on('submit', (e) => {\n        modalStatusClass();\n        $('.rkg-modal-status').text('Prijava u tijeku...');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'ajaxlogin',\n                username: $('form#login #username').val(),\n                password: $('form#login #password').val(),\n                security: $('form#login #security').val(),\n            },\n            success(data) {\n                modalStatusClass(data.status);\n                $('.rkg-modal-status').text(data.message);\n                if (data.status === 0) {\n                    if (signup === 'course') {\n                        modalOpen('#additional-details-form');\n                        signup = null;\n                    } else {\n                        window.location.reload();\n                    }\n                }\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n        e.preventDefault();\n    });\n    \n    $('form#registration').on('submit', (e) => {\n        modalStatusClass();\n        $('.rkg-modal-status').text('Registracija u tijeku...');\n        const regNonce     = $('#vb_new_user_nonce').val();\n        const regPass      = $('#vb_pass').val();\n        const regMail      = $('#vb_email').val();\n        const regFirstname = $('#vb_name').val();\n        const regLastname  = $('#vb_surname').val();\n        const data         = {\n            action: 'register_user',\n            nonce: regNonce,\n            pass: regPass,\n            mail: regMail,\n            firstname: regFirstname,\n            lastname: regLastname,\n        };\n    \n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data,\n            success(data) {\n                modalStatusClass(data.status);\n                $('.rkg-modal-status').text(data.message);\n                if (data.status === 0) {\n                    if (signup === 'course') {\n                        modalOpen('#additional-details-form');\n                        signup = null;\n                    } else {\n                        window.location.reload();\n                    }\n                }\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    \n        e.preventDefault();\n    });\n    \n    $('form#additional-details-form').on('submit', (e) => {\n        modalStatusClass();\n        $('.rkg-modal-status').text(rkgTheme.loadingmessage);\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_user_additional_details',\n                pob: $('form#additional-details-form #pob').val(),\n                dob: $('form#additional-details-form #dob').val(),\n                oib: $('form#additional-details-form #oib').val(),\n                tel: $('form#additional-details-form #tel').val(),\n                course: $('form#additional-details-form #signup-course').val(),\n            },\n            success: (data) => {\n                modalStatusClass(data.status);\n                $('form#additional-details-form p.status').text(data.message);\n                modalOpen('#course-signup-ok');\n            },\n        });\n        e.preventDefault();\n    });\n    \n    $('.rkg-course-signup-close').click(() => {\n        $('.rkg-course-signup').fadeOut({queue: false, duration: 'fast'})\n            .animate({top: '25%'}, () => {\n                $('.rkg-modal-background').fadeOut(\n                    'fast',\n                    () => window.location.reload(),\n                );\n            });\n    \n        if ($(window).width() <= 1080) {\n            $('.rkg-modal')\n                .fadeOut({queue: false, duration: 'fast'})\n                .promise()\n                .done(() => {\n                    window.location.reload();\n                });\n            return;\n        }\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .animate({top: '37.5%'})\n            .promise()\n            .done(() => {\n                window.location.reload();\n            });\n    });\n    \n    $('.course-signout').on('click', (e) => {\n        e.preventDefault();\n        const signupId = $(e.currentTarget).data('course');\n        const signoutName = $(e.currentTarget).data('name');\n        $('input[name=\"signout-course\"]').val(signupId);\n        $('.course-signout-name').text(signoutName);\n        modalOpen('#course-signout-form');\n    });\n    \n    $('#course-signup-ok-pay, #course-signup-show-pay').click((e) => {\n        modalOpen('#course-signup-pay');\n        e.preventDefault();\n    });\n    \n    $('#helth-survey-link').click((e) => {\n        modalOpen('#helth-survey');\n        e.preventDefault();\n    });\n    \n    $('#responsibility-survey-link').click((e) => {\n        modalOpen('#responsibility-survey');\n        e.preventDefault();\n    });\n    \n    const resize = new Croppie(document.getElementById('brevet-crop'), {\n        viewport: {width: 257, height: 300},\n        boundary: {width: 320, height: 363},\n        showZoomer: true,\n        enableOrientation: true,\n        url: 'http://lorempixel.com/500/400/',\n    });\n    \n    $('.croppie-rotate').on('click', (e) => {\n        resize.rotate(parseInt($(e.currentTarget).data('deg'), 10));\n    });\n    \n    function readURL(input) {\n        if (input.files && input.files[0]) {\n            const reader = new FileReader();\n            reader.onload = function (e) {\n                // $('.croppie-container').html('');\n                // $('#brevet-crop')[0].croppie('destroy');\n                modalOpen('#rkg-moddal-brevet', () => {\n                    console.log(e);\n                    resize.bind({\n                        url: e.target.result,\n                    });\n                    $('.brevet-upload-button').on('click', () => {\n                        resize.result('base64').then((dataImg) => {\n                            // const data = [{image: dataImg}, {name: 'myimgage.jpg'}];\n                            const formData = new FormData();\n                            formData.append('action', 'brevet_upload');\n                            formData.append('image', dataImg);\n                            jQuery.ajax({\n                                url: rkgScript.ajaxUrl,\n                                type: 'POST',\n                                contentType: false,\n                                processData: false,\n                                data: formData,\n                                success(response) {\n                                    console.log(response);\n                                    $('.course-brevet-image').html(`<img src=\"${response}\" />`);\n                                    modalStatusClass();\n                                    $('.rkg-modal-status').text('');\n                                    $('body').removeClass('modal-open');\n                                    signup = null;\n                                    if ($(window).width() <= 1080) {\n                                        $('.rkg-modal')\n                                            .fadeOut({queue: false, duration: 'fast'})\n                                            .promise()\n                                            .done(() => {\n                                                window.location.reload();\n                                            });\n                                        return;\n                                    }\n                                    $('.rkg-modal')\n                                        .fadeOut({queue: false, duration: 'fast'})\n                                        .animate({top: '37.5%'})\n                                        .promise()\n                                        .done(() => {\n                                            window.location.reload();\n                                        });\n                                },\n                            });\n                            $('#result').attr('src', dataImg);\n                        });\n                    });\n                });\n            };\n            reader.readAsDataURL(input.files[0]);\n        }\n    }\n    \n    $('#brevet').change(function () {\n        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n            alert('The File APIs are not fully supported in this browser.');\n            return;\n        }\n        readURL(this);\n    });\n    \n    $('#brevet-link').click((e) => {\n        e.preventDefault();\n        $('#brevet').click();\n    });\n    \n    $('form#helth-survey').on('submit', (e) => {\n        e.preventDefault();\n        const formData  = new FormData($('#helth-survey').get(0));\n        console.log(rkgTheme.ajaxurl);\n        formData.append('action', 'health_survey');\n    \n        jQuery.ajax({\n            url: rkgTheme.ajaxurl,\n            type: 'POST',\n            contentType: false,\n            processData: false,\n            data: formData,\n            success() {\n                window.location.reload();\n            },\n            error(response) {\n                console.log(response);\n            },\n        });\n    });\n    \n    $('form#responsibility-survey').on('submit', (e) => {\n        e.preventDefault();\n        const formData  = new FormData($('#responsibility-survey').get(0));\n        console.log(rkgTheme.ajaxurl);\n        formData.append('action', 'responsibility_survey');\n    \n        jQuery.ajax({\n            url: rkgTheme.ajaxurl,\n            type: 'POST',\n            contentType: false,\n            processData: false,\n            data: formData,\n            success() {\n                window.location.reload();\n            },\n            error(response) {\n                console.log(response);\n            },\n        });\n    });\n    \n    $('.excursion-signup').click((e) => {\n        e.preventDefault();\n        const signupId = $(e.currentTarget).data('post');\n    \n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_user_excursion_signup',\n                post: signupId,\n            },\n            success: () => {\n                modalOpen('#excursion-signup-ok');\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    });\n    \n    $('#excursion-signup-ok-gear, #excursion-signup-gear').click((e) => {\n        e.preventDefault();\n        modalOpen('#gear-form');\n    });\n    \n    $('.excursion-signout').click((e) => {\n        e.preventDefault();\n        signup = 'course';\n        const signupId = $(e.currentTarget).data('post');\n        const signoutName = $(e.currentTarget).data('name');\n        $('input[name=\"signout-excursion\"]').val(signupId);\n        $('.excursion-signout-name').text(signoutName);\n        jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n            if (response === 'yes') {\n                modalOpen('#excursion-signout-form');\n            }\n        });\n    });\n    \n    $('.excursion-signup-waiting').click((e) => {\n        e.preventDefault();\n        const signupId = $(e.currentTarget).data('post');\n    \n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_user_excursion_signup_waiting',\n                post: signupId,\n            },\n            success: () => {\n                modalOpen('#excursion-signup-ok');\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    });\n    \n    $('.excursion-signout-waiting').click((e) => {\n        e.preventDefault();\n        signup = 'course';\n        const signupId = $(e.currentTarget).data('post');\n        const signoutName = $(e.currentTarget).data('name');\n        $('input[name=\"signout-excursion\"]').val(signupId);\n        $('.excursion-signout-name').text(signoutName);\n        jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n            if (response === 'yes') {\n                modalOpen('#excursion-signout-waiting-form');\n            }\n        });\n    });\n    \n    $('form#excursion-signout-form').on('submit', (e) => {\n        $('form#excursion-signout-form p.status').show()\n            .text('Odjava u tijeku...');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_excursion_signout',\n                post: $('form#excursion-signout-form #signout-excursion').val(),\n            },\n            success: (data) => {\n                $('form#excursion-signout-form p.status').text(data.message);\n                window.location.reload();\n            },\n        });\n        e.preventDefault();\n    });\n    \n    $('form#excursion-signout-waiting-form').on('submit', (e) => {\n        $('form#excursion-signout-form p.status').show()\n            .text('Odjava u tijeku...');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_excursion_signout_waiting',\n                post: $('form#excursion-signout-form #signout-excursion').val(),\n            },\n            success: (data) => {\n                $('form#excursion-signout-form-waiting p.status').text(data.message);\n                window.location.reload();\n            },\n        });\n        e.preventDefault();\n    });\n    \n    $('form#gear-form').on('submit', (e) => {\n        e.preventDefault();\n        const formData  = new FormData($('#gear-form').get(0));\n        formData.append('action', 'gear_reserve');\n    \n        jQuery.ajax({\n            url: rkgTheme.ajaxurl,\n            type: 'POST',\n            contentType: false,\n            processData: false,\n            data: formData,\n            success() {\n                window.location.reload();\n            },\n            error(response) {\n                console.log(response);\n            },\n        });\n    });\n    \n    $('#no-gear').click((e) => {\n        e.preventDefault();\n        const gearId = $(e.currentTarget).data('post');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'gear_reserve_no',\n                post: gearId,\n            },\n            success: () => {\n                window.location.reload();\n            },\n        });\n    });\n    \n    $('#excursion-signup-guest').click((e) => {\n        modalOpen('#excursion-guest-form');\n        e.preventDefault();\n    });\n    \n    $('form#excursion-guest-form').on('submit', (e) => {\n        e.preventDefault();\n        const formData  = new FormData($('#excursion-guest-form').get(0));\n        formData.append('action', 'guest_invite');\n    \n        jQuery.ajax({\n            url: rkgTheme.ajaxurl,\n            type: 'POST',\n            contentType: false,\n            processData: false,\n            data: formData,\n            success() {\n                window.location.reload();\n            },\n            error(response) {\n                console.log(response);\n            },\n        });\n    });\n    \n    $('.guest-uninvite').click((e) => {\n        e.preventDefault();\n        const name = $(e.currentTarget).data('name');\n        const email = $(e.currentTarget).data('email');\n        $('#guest-remove-name').html(name);\n        $('#guest-remove-email').val(email);\n        modalOpen('#excursion-guest-remove-form');\n    });\n    \n    $('form#excursion-guest-remove-form').on('submit', (e) => {\n        e.preventDefault();\n        const formData  = new FormData($('#excursion-guest-form').get(0));\n        formData.append('action', 'guest_uninvite');\n    \n        jQuery.ajax({\n            url: rkgTheme.ajaxurl,\n            type: 'POST',\n            contentType: false,\n            processData: false,\n            data: formData,\n            success() {\n                window.location.reload();\n            },\n            error(response) {\n                console.log(response);\n            },\n        });\n    });\n    \n    $('.course-interested').click((e) => {\n        e.preventDefault();\n        const course = $(e.currentTarget).data('course');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'course_interest',\n                course,\n            },\n            success() {\n                modalOpen('#course-interested-form');\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    });\n    \n    $('.course-not-interested').click((e) => {\n        e.preventDefault();\n        const course = $(e.currentTarget).data('course');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'course_not_interest',\n                course,\n            },\n            success() {\n                modalOpen('#course-not-interested-form');\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    });\n    \n    /* global modalOpen */\n    \n    function setCookie(cname, cvalue, exdays) {\n        const d = new Date();\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n        let expires = `expires=${d.toUTCString()}`;\n        if (exdays === 0) {\n            expires = '';\n        }\n        console.log(expires);\n        document.cookie = `${cname}=${cvalue};${expires};path=/`;\n    }\n    \n    function getCookie(cname) {\n        const name = `${cname}=`;\n        const ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return '';\n    }\n    \n    function checkBetaCookie() {\n        const betaMessage = getCookie('betaMessage');\n        if (betaMessage === '') {\n            modalOpen('#beta-message');\n            setCookie('betaMessage', true, 0);\n        }\n    }\n    \n    checkBetaCookie();\n    \n    \n\n    // $(document).mouseup((e) => {\n    // if ($('.rkg-profile-meni').css('display') === 'block'\n    // && !$('.rkg-profile-meni').is(e.target)\n    // && !$('.rkg-profile-meni-switch').is(e.target)\n    // && $('.rkg-profile-meni').has(e.target).length === 0) {\n    // $('.rkg-profile-meni').animate({\n    // height: 'toggle',\n    // opacity: 'toggle',\n    // }, 'fast');\n    // }\n    // });\n\n    $('.rkg-profile-meni-switch').click(() => {\n        if (($(window).width() <= 1080) && (window.devicePixelRatio > 1.5)) {\n            $('.rkg-profile-meni').css('left', '0vw');\n            return;\n        }\n        $('.rkg-profile-meni').animate({\n            height: 'toggle',\n            opacity: 'toggle',\n        }, 'fast');\n    });\n\n    $('.rkg-profile-meni-close').click(() => {\n        if (($(window).width() <= 1080) && (window.devicePixelRatio > 1.5)) {\n            $('.rkg-profile-meni').css('left', '-90vw');\n            return;\n        }\n        $('.rkg-profile-meni').animate({\n            height: 'toggle',\n            opacity: 'toggle',\n        }, 'fast');\n    });\n\n    // $(document).mouseup((e) => {\n    // if (!$('.rkg-profile-meni').is(e.target)\n    // && $('.rkg-profile-meni').has(e.target).length === 0) {\n    // $('.rkg-profile-meni').css('left', '-90vw');\n    // }\n    // });\n\n    const sticky = $('#rkg-top-stick').offset();\n\n    const rkgStick = () => {\n        if (window.pageYOffset > sticky.top) {\n            $('#rkg-top-stick').addClass('sticky');\n            $('.rkg-front-hide').fadeIn('fast');\n        } else {\n            $('#rkg-top-stick').removeClass('sticky');\n            $('.rkg-front-hide').fadeOut(100);\n        }\n    };\n\n    window.onscroll = () => rkgStick();\n\n    $('#rkg-header-arrow-container, #rkg-ancor-1-go').click(() => {\n        document.getElementById('rkg-scroll-ancor')\n            .scrollIntoView({behavior: 'smooth', block: 'start'});\n    });\n    $('#rkg-ancor-2-go').click(() => {\n        document.getElementById('rkg-ancor-2')\n            .scrollIntoView({behavior: 'smooth', block: 'start'});\n    });\n    $('#rkg-ancor-3-go').click(() => {\n        document.getElementById('rkg-ancor-3')\n            .scrollIntoView({behavior: 'smooth', block: 'start'});\n    });\n    $('#rkg-ancor-4-go').click(() => {\n        document.getElementById('rkg-ancor-4')\n            .scrollIntoView({behavior: 'smooth', block: 'start'});\n    });\n\n    $('form#course-signout-form').on('submit', (e) => {\n        modalStatusClass();\n        $('.rkg-modal-status').text('Odjava u tijeku...');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'rkg_course_signout',\n                course: $('form#course-signout-form #signout-course').val(),\n            },\n            success: (data) => {\n                modalStatusClass(0);\n                $('.rkg-modal-status').text(data.message);\n                window.location.reload();\n            },\n        });\n        e.preventDefault();\n    });\n\n    $('form#lost-password').on('submit', (e) => {\n        e.preventDefault();\n        modalStatusClass();\n        $('.rkg-modal-status').text('Slanje u tijeku...');\n        $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'sendPasswordReset',\n                lost_username: $('#lost_username').val(),\n            },\n            success: (data) => {\n                modalStatusClass(data.status);\n                $('.rkg-modal-status').text(data.message);\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n    });\n\n    $('.courses-terms-control').click((e) => {\n        const cat = $(e.currentTarget).data('cat');\n        const state = $(e.currentTarget).data('state');\n        if (state === 'off') {\n            $('.courses-terms-up').hide();\n            $('.courses-terms-down').show();\n            $(`.courses-terms-down-${cat}`).hide();\n            $(`.courses-terms-up-${cat}`).show();\n            $('.courses-terms').hide();\n            $(`.courses-terms-${cat}`).css('display', 'block');\n            $('.courses-terms-control').data('state', 'off');\n            $(e.currentTarget).data('state', 'on');\n        } else {\n            $('.courses-terms-up').hide();\n            $('.courses-terms-down').show();\n            $('.courses-terms').hide();\n            $(e.currentTarget).data('state', 'off');\n        }\n    });\n\n    $('.rkg-excursion-signout-close').click(() => {\n        $('.rkg-excursion-signout').fadeOut({queue: false, duration: 'fast'})\n            .animate({top: '25%'}, () => {\n                $('.rkg-modal-background').fadeOut(\n                    'fast',\n                    () => window.location.reload(),\n                );\n            });\n    });\n\n    $('.rkg-moddal-gallery-slick').slick({\n        infinite: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        prevArrow: $('.rkg-moddal-gallery-chevron-left'),\n        nextArrow: $('.rkg-moddal-gallery-chevron-right'),\n    });\n\n    $('.gallery-item').click((e) => {\n        const gallery = $(e.currentTarget).parent();\n        $('.rkg-meni-background').fadeIn('fast').promise().done(() => {\n            $('.rkg-moddal-gallery')\n                .fadeIn({queue: false, duration: 'fast'});\n            gallery.children('img').each((index, img) => {\n                const src = $(img).attr('src');\n                $('.rkg-moddal-gallery-slick').slick(\n                    'slickAdd',\n                    '<div class=\"rkg-moddal-gallery-slide\">'\n                    + `<img src='${src}'>`\n                    + '</div>',\n                );\n            });\n        });\n    });\n\n    $('.rkg-moddal-gallery-close').click(() => {\n        $('.rkg-moddal-gallery').fadeOut('fast').promise().done(() => {\n            $('.rkg-moddal-gallery-slick').slick('slickRemove', null, null, true);\n            $('.rkg-meni-background')\n                .fadeOut('fast');\n        });\n    });\n\n    if ($('#rkg-users-input').length) {\n        $('#rkg-users-input').on('keyup', function () {\n            const value = $(this).val().toLowerCase();\n            $('#rkg-users tr, #rkg-users-mob tbody').filter(function () {\n                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);\n            });\n        });\n    }\n\n    $('.rkg-user').click((e) => {\n        const target = $(e.currentTarget).find('.rkg-user-details');\n        $('.rkg-user-details').not(target).hide();\n        target.animate({\n            height: 'toggle',\n            opacity: 'toggle',\n        }, 'fast');\n    });\n\n    $(document).mouseup((e) => {\n        if (!$('.rkg-user').is(e.target)\n            && $('.rkg-user-details').has(e.target).length === 0) {\n            $('.rkg-user-details').hide();\n        }\n    });\n\n    $('#rkg-excursion-calendar').on('click', '.calendar-excursion', (e) => {\n        const target = $(e.currentTarget).find('.date-excursions');\n        $('.date-excursions').not(target).hide();\n        target.animate({\n            height: 'toggle',\n            opacity: 'toggle',\n        }, 'fast');\n    });\n\n    $(document).mouseup((e) => {\n        if (!$('.calendar-excursion').is(e.target)\n            && $('.date-excursions').has(e.target).length === 0) {\n            $('.date-excursions').hide();\n        }\n    });\n\n    $(window).scroll(() => {\n        $('.rkg-user-details').hide();\n    });\n\n    $('.rkg-profile-meni-toggle').click((e) => {\n        e.preventDefault();\n        $(e.currentTarget).next().slideToggle();\n    });\n\n    function getParameterByName(name, url = window.location.href) {\n        const rename = name.replace(/[\\[\\]]/g, '\\\\$&');\n        const regex = new RegExp(`[?&]${rename}(=([^&#]*)|&|#|$)`);\n        const results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    }\n\n    $('#rkg-excursion-calendar').on('click', '.rkg-cal-prev, .rkg-cal-next', (e) => {\n        e.preventDefault();\n        const url = $(e.currentTarget).attr('href');\n        const month = getParameterByName('month', url);\n        const year = getParameterByName('year', url);\n        $.ajax({\n            type: 'GET',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'excursion_calendar',\n                month,\n                year,\n            },\n            success: (response) => {\n                $('#rkg-excursion-calendar').html(response);\n            },\n        });\n    });\n\n    $('#excursion-contorl-search').click(() => {\n        $('#rkg-excursion-page-search').toggle();\n        $('.rkg-excursion-search-down').toggle();\n        $('.rkg-excursion-search-up').toggle();\n        $('.rkg-excursion-cal-down').show();\n        $('.rkg-excursion-cal-up').hide();\n    });\n});\n","/**\n * Binary Calculator (BC) Arbitrary Precision Mathematics Lib v0.10  (LGPL)\n * Copy of libbcmath included in PHP5 src\n * supports bcadd, bcsub, bcmul, bcdiv, bccomp, bcscale, and new function bcround(val, precision)\n * See PHP Manual for parameters.. functions work identical to the PHP5 funcions\n * Feel free to use how-ever you want, just email any bug-fixes/improvements to the sourceforge project:\n *      https://sourceforge.net/projects/bcmath-js/\n *\n * Ported from the PHP5 bcmath extension source code,\n * which uses the libbcmath package...\n *    Copyright (C) 1991, 1992, 1993, 1994, 1997 Free Software Foundation, Inc.\n *    Copyright (C) 2000 Philip A. Nelson\n *     The Free Software Foundation, Inc.\n *     59 Temple Place, Suite 330\n *     Boston, MA 02111-1307 USA.\n *      e-mail:  philnelson@acm.org\n *     us-mail:  Philip A. Nelson\n *               Computer Science Department, 9062\n *               Western Washington University\n *               Bellingham, WA 98226-9062\n */\nvar libbcmath={PLUS:\"+\",MINUS:\"-\",BASE:10,scale:0,bc_num:function(){this.n_sign=null;this.n_len=null;this.n_scale=null;this.n_value=null;this.toString=function(){var b,a;a=this.n_value.join(\"\");b=((this.n_sign==libbcmath.PLUS)?\"\":this.n_sign)+a.substr(0,this.n_len);if(this.n_scale>0){b+=\".\"+a.substr(this.n_len,this.n_scale)}return b};this.setScale=function(a){while(this.n_scale<a){this.n_value.push(0);this.n_scale++}while(this.n_scale>a){this.n_value.pop();this.n_scale--}return this}},bc_new_num:function(b,c){var a;a=new libbcmath.bc_num();a.n_sign=libbcmath.PLUS;a.n_len=b;a.n_scale=c;a.n_value=libbcmath.safe_emalloc(1,b+c,0);libbcmath.memset(a.n_value,0,0,b+c);return a},safe_emalloc:function(c,b,a){return Array((c*b)+a)},bc_init_num:function(){return new libbcmath.bc_new_num(1,0)},_bc_rm_leading_zeros:function(a){while((a.n_value[0]===0)&&(a.n_len>1)){a.n_value.shift();a.n_len--}},php_str2num:function(b){var a;a=b.indexOf(\".\");if(a==-1){return libbcmath.bc_str2num(b,0)}else{return libbcmath.bc_str2num(b,(b.length-a))}},CH_VAL:function(a){return a-\"0\"},BCD_CHAR:function(a){return a+\"0\"},isdigit:function(a){return(isNaN(parseInt(a,10))?false:true)},bc_str2num:function(h,c){var g,f,a,b,e,i,d;g=h.split(\"\");a=0;b=0;e=0;i=false;if((g[a]===\"+\")||(g[a]===\"-\")){a++}while(g[a]===\"0\"){a++}while((g[a])%1===0){a++;b++}if(g[a]===\".\"){a++}while((g[a])%1===0){a++;e++}if((g[a])||(b+e===0)){return libbcmath.bc_init_num()}e=libbcmath.MIN(e,c);if(b===0){i=true;b=1}f=libbcmath.bc_new_num(b,e);a=0;if(g[a]===\"-\"){f.n_sign=libbcmath.MINUS;a++}else{f.n_sign=libbcmath.PLUS;if(g[a]===\"+\"){a++}}while(g[a]===\"0\"){a++}d=0;if(i){f.n_value[d++]=0;b=0}for(;b>0;b--){f.n_value[d++]=libbcmath.CH_VAL(g[a++])}if(e>0){a++;for(;e>0;e--){f.n_value[d++]=libbcmath.CH_VAL(g[a++])}}return f},cint:function(b){if(typeof(b)==\"undefined\"){b=0}var a=parseInt(b,10);if(isNaN(a)){a=0}return a},MIN:function(d,c){return((d>c)?c:d)},MAX:function(d,c){return((d>c)?d:c)},ODD:function(b){return(b&1)},memset:function(d,e,c,a){var b;for(b=0;b<a;b++){d[e+b]=c}},memcpy:function(b,f,e,d,a){var c;for(c=0;c<a;c++){b[f+c]=e[d+c]}return true},bc_is_zero:function(a){var b;var c;b=a.n_len+a.n_scale;c=0;while((b>0)&&(a.n_value[c++]===0)){b--}if(b!==0){return false}else{return true}},bc_out_of_memory:function(){throw new Error(\"(BC) Out of memory\")}};libbcmath.bc_add=function(f,d,c){var e,b,a;if(f.n_sign===d.n_sign){e=libbcmath._bc_do_add(f,d,c);e.n_sign=f.n_sign}else{b=libbcmath._bc_do_compare(f,d,false,false);switch(b){case -1:e=libbcmath._bc_do_sub(d,f,c);e.n_sign=d.n_sign;break;case 0:a=libbcmath.MAX(c,libbcmath.MAX(f.n_scale,d.n_scale));e=libbcmath.bc_new_num(1,a);libbcmath.memset(e.n_value,0,0,a+1);break;case 1:e=libbcmath._bc_do_sub(f,d,c);e.n_sign=f.n_sign}}return e};libbcmath.bc_compare=function(b,a){return libbcmath._bc_do_compare(b,a,true,false)};libbcmath._bc_do_compare=function(e,d,c,b){var g,a;var f;if(c&&(e.n_sign!=d.n_sign)){if(e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}if(e.n_len!=d.n_len){if(e.n_len>d.n_len){if(!c||(e.n_sign==libbcmath.PLUS)){return(1)}else{return(-1)}}else{if(!c||(e.n_sign==libbcmath.PLUS)){return(-1)}else{return(1)}}}f=e.n_len+Math.min(e.n_scale,d.n_scale);g=0;a=0;while((f>0)&&(e.n_value[g]==d.n_value[a])){g++;a++;f--}if(b&&(f==1)&&(e.n_scale==d.n_scale)){return(0)}if(f!==0){if(e.n_value[g]>d.n_value[a]){if(!c||e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}else{if(!c||e.n_sign==libbcmath.PLUS){return(-1)}else{return(1)}}}if(e.n_scale!=d.n_scale){if(e.n_scale>d.n_scale){for(f=(e.n_scale-d.n_scale);f>0;f--){if(e.n_value[g++]!==0){if(!c||e.n_sign==libbcmath.PLUS){return(1)}else{return(-1)}}}}else{for(f=(d.n_scale-e.n_scale);f>0;f--){if(d.n_value[a++]!==0){if(!c||e.n_sign==libbcmath.PLUS){return(-1)}else{return(1)}}}}}return(0)};libbcmath._one_mult=function(d,e,i,f,j,c){var h,g;var b,a;if(f===0){libbcmath.memset(j,0,0,i)}else{if(f==1){libbcmath.memcpy(j,c,d,e,i)}else{b=e+i-1;a=c+i-1;h=0;while(i-->0){g=d[b--]*f+h;j[a--]=g%libbcmath.BASE;h=Math.floor(g/libbcmath.BASE)}if(h!=0){j[a]=h}}}};libbcmath.bc_divide=function(l,k,z){var y;var w;var c,b;var p,o,h,x;var u,A;var j,i,s,q,a,g;var r,m,t,v;var e;var n;var f;var d;if(libbcmath.bc_is_zero(k)){return -1}if(libbcmath.bc_is_zero(l)){return libbcmath.bc_new_num(1,z)}if(k.n_scale===0){if(k.n_len===1&&k.n_value[0]===1){w=libbcmath.bc_new_num(l.n_len,z);w.n_sign=(l.n_sign==k.n_sign?libbcmath.PLUS:libbcmath.MINUS);libbcmath.memset(w.n_value,l.n_len,0,z);libbcmath.memcpy(w.n_value,0,l.n_value,0,l.n_len+libbcmath.MIN(l.n_scale,z))}}s=k.n_scale;h=k.n_len+s-1;while((s>0)&&(k.n_value[h--]===0)){s--}j=l.n_len+s;u=l.n_scale-s;if(u<z){a=z-u}else{a=0}c=libbcmath.safe_emalloc(1,l.n_len+l.n_scale,a+2);if(c===null){libbcmath.bc_out_of_memory()}libbcmath.memset(c,0,0,l.n_len+l.n_scale+a+2);libbcmath.memcpy(c,1,l.n_value,0,l.n_len+l.n_scale);i=k.n_len+s;b=libbcmath.safe_emalloc(1,i,1);if(b===null){libbcmath.bc_out_of_memory()}libbcmath.memcpy(b,0,k.n_value,0,i);b[i]=0;h=0;while(b[h]===0){h++;i--}if(i>j+z){q=z+1;n=true}else{n=false;if(i>j){q=z+1}else{q=j-i+z+1}}w=libbcmath.bc_new_num(q-z,z);libbcmath.memset(w.n_value,0,0,q);e=libbcmath.safe_emalloc(1,i,1);if(e===null){libbcmath.bc_out_of_memory()}if(!n){f=Math.floor(10/(k.n_value[h]+1));if(f!=1){libbcmath._one_mult(c,0,j+u+a+1,f,c,0);libbcmath._one_mult(k.n_value,h,i,f,k.n_value,h)}r=0;if(i>j){x=i-j}else{x=0}while(r<=j+z-i){if(k.n_value[h]==c[r]){m=9}else{m=Math.floor((c[r]*10+c[r+1])/k.n_value[h])}if(k.n_value[h+1]*m>(c[r]*10+c[r+1]-k.n_value[h]*m)*10+c[r+2]){m--;if(k.n_value[h+1]*m>(c[r]*10+c[r+1]-k.n_value[h]*m)*10+c[r+2]){m--}}t=0;if(m!==0){e[0]=0;libbcmath._one_mult(k.n_value,h,i,m,e,1);p=r+i;o=i;for(g=0;g<i+1;g++){if(o<0){A=c[p]-0-t}else{A=c[p]-e[o--]-t}if(A<0){A+=10;t=1}else{t=0}c[p--]=A}}if(t==1){m--;p=r+i;o=i-1;v=0;for(g=0;g<i;g++){if(o<0){A=c[p]+0+v}else{A=c[p]+k.n_value[o--]+v}if(A>9){A-=10;v=1}else{v=0}c[p--]=A}if(v==1){c[p]=(c[p]+1)%10}}w.n_value[x++]=m;r++}}w.n_sign=(l.n_sign==k.n_sign?libbcmath.PLUS:libbcmath.MINUS);if(libbcmath.bc_is_zero(w)){w.n_sign=libbcmath.PLUS}libbcmath._bc_rm_leading_zeros(w);return w};libbcmath._bc_do_add=function(h,g,i){var f;var c,b;var k,e,j;var m,l,a;var d;c=libbcmath.MAX(h.n_scale,g.n_scale);b=libbcmath.MAX(h.n_len,g.n_len)+1;f=libbcmath.bc_new_num(b,libbcmath.MAX(c,i));l=h.n_scale;a=g.n_scale;k=(h.n_len+l-1);e=(g.n_len+a-1);j=(c+b-1);if(l!=a){if(l>a){while(l>a){f.n_value[j--]=h.n_value[k--];l--}}else{while(a>l){f.n_value[j--]=g.n_value[e--];a--}}}l+=h.n_len;a+=g.n_len;m=0;while((l>0)&&(a>0)){d=h.n_value[k--]+g.n_value[e--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j]=d;j--;l--;a--}if(l===0){while(a-->0){d=g.n_value[e--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j--]=d}}else{while(l-->0){d=h.n_value[k--]+m;if(d>=libbcmath.BASE){m=1;d-=libbcmath.BASE}else{m=0}f.n_value[j--]=d}}if(m==1){f.n_value[j]+=1}libbcmath._bc_rm_leading_zeros(f);return f};libbcmath._bc_do_sub=function(h,g,i){var l;var m,a;var d,f;var k,c,n;var j,e,b;a=libbcmath.MAX(h.n_len,g.n_len);m=libbcmath.MAX(h.n_scale,g.n_scale);f=libbcmath.MIN(h.n_len,g.n_len);d=libbcmath.MIN(h.n_scale,g.n_scale);l=libbcmath.bc_new_num(a,libbcmath.MAX(m,i));k=(h.n_len+h.n_scale-1);c=(g.n_len+g.n_scale-1);n=(a+m-1);j=0;if(h.n_scale!=d){for(e=h.n_scale-d;e>0;e--){l.n_value[n--]=h.n_value[k--]}}else{for(e=g.n_scale-d;e>0;e--){b=0-g.n_value[c--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0;l.n_value[n--]=b}}}for(e=0;e<f+d;e++){b=h.n_value[k--]-g.n_value[c--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0}l.n_value[n--]=b}if(a!=f){for(e=a-f;e>0;e--){b=h.n_value[k--]-j;if(b<0){b+=libbcmath.BASE;j=1}else{j=0}l.n_value[n--]=b}}libbcmath._bc_rm_leading_zeros(l);return l};libbcmath.MUL_BASE_DIGITS=80;libbcmath.MUL_SMALL_DIGITS=(libbcmath.MUL_BASE_DIGITS/4);libbcmath.bc_multiply=function(f,d,h){var c;var b,a;var g,e;b=f.n_len+f.n_scale;a=d.n_len+d.n_scale;g=f.n_scale+d.n_scale;e=libbcmath.MIN(g,libbcmath.MAX(h,libbcmath.MAX(f.n_scale,d.n_scale)));c=libbcmath._bc_rec_mul(f,b,d,a,g);c.n_sign=(f.n_sign==d.n_sign?libbcmath.PLUS:libbcmath.MINUS);c.n_len=a+b+1-g;c.n_scale=e;libbcmath._bc_rm_leading_zeros(c);if(libbcmath.bc_is_zero(c)){c.n_sign=libbcmath.PLUS}return c};libbcmath.new_sub_num=function(b,d,c){var a=new libbcmath.bc_num();a.n_sign=libbcmath.PLUS;a.n_len=b;a.n_scale=d;a.n_value=c;return a};libbcmath._bc_simp_mul=function(i,b,h,m,a){var j;var k,c,f;var n,l;var e,g,d;d=b+m+1;j=libbcmath.bc_new_num(d,0);n=b-1;l=m-1;f=d-1;g=0;for(e=0;e<d-1;e++){k=n-libbcmath.MAX(0,e-m+1);c=l-libbcmath.MIN(e,m-1);while((k>=0)&&(c<=l)){g+=i.n_value[k--]*h.n_value[c++]}j.n_value[f--]=Math.floor(g%libbcmath.BASE);g=Math.floor(g/libbcmath.BASE)}j.n_value[f]=g;return j};libbcmath._bc_shift_addsub=function(b,g,a,d){var c,h;var e,f;e=g.n_len;if(g.n_value[0]===0){e--}if(!(b.n_len+b.n_scale>=a+e)){throw new Error(\"len + scale < shift + count\")}c=b.n_len+b.n_scale-a-1;h=g.n_len=1;f=0;if(d){while(e--){b.n_value[c]-=g.n_value[h--]+f;if(b.n_value[c]<0){f=1;b.n_value[c--]+=libbcmath.BASE}else{f=0;c--}}while(f){b.n_value[c]-=f;if(b.n_value[c]<0){b.n_value[c--]+=libbcmath.BASE}else{f=0}}}else{while(e--){b.n_value[c]+=g.n_value[h--]+f;if(b.n_value[c]>(libbcmath.BASE-1)){f=1;b.n_value[c--]-=libbcmath.BASE}else{f=0;c--}}while(f){b.n_value[c]+=f;if(b.n_value[c]>(libbcmath.BASE-1)){b.n_value[c--]-=libbcmath.BASE}else{f=0}}}return true};libbcmath._bc_rec_mul=function(m,i,l,j,c){var k;var s,r,h,g;var f,p;var d,b,a,y,x;var o,w,e;var q,t;if((i+j)<libbcmath.MUL_BASE_DIGITS||i<libbcmath.MUL_SMALL_DIGITS||j<libbcmath.MUL_SMALL_DIGITS){return libbcmath._bc_simp_mul(m,i,l,j,c)}o=Math.floor((libbcmath.MAX(i,j)+1)/2);if(i<o){r=libbcmath.bc_init_num();s=libbcmath.new_sub_num(i,0,m.n_value)}else{r=libbcmath.new_sub_num(i-o,0,m.n_value);s=libbcmath.new_sub_num(o,0,m.n_value+i-o)}if(j<o){g=libbcmath.bc_init_num();h=libbcmath.new_sub_num(j,0,l.n_value)}else{g=libbcmath.new_sub_num(j-o,0,l.n_value);h=libbcmath.new_sub_num(o,0,l.n_value+j-o)}libbcmath._bc_rm_leading_zeros(r);libbcmath._bc_rm_leading_zeros(s);f=s.n_len;libbcmath._bc_rm_leading_zeros(g);libbcmath._bc_rm_leading_zeros(h);p=h.n_len;e=libbcmath.bc_is_zero(r)||libbcmath.bc_is_zero(g);y=libbcmath.bc_init_num();x=libbcmath.bc_init_num();y=libbcmath.bc_sub(r,s,0);q=y.n_len;x=libbcmath.bc_sub(h,g,0);t=x.n_len;if(e){d=libbcmath.bc_init_num()}else{d=libbcmath._bc_rec_mul(r,r.n_len,g,g.n_len,0)}if(libbcmath.bc_is_zero(y)||libbcmath.bc_is_zero(x)){b=libbcmath.bc_init_num()}else{b=libbcmath._bc_rec_mul(y,q,x,t,0)}if(libbcmath.bc_is_zero(s)||libbcmath.bc_is_zero(h)){a=libbcmath.bc_init_num()}else{a=libbcmath._bc_rec_mul(s,s.n_len,h,h.n_len,0)}w=i+j+1;k=libbcmath.bc_new_num(w,0);if(!e){libbcmath._bc_shift_addsub(k,d,2*o,0);libbcmath._bc_shift_addsub(k,d,o,0)}libbcmath._bc_shift_addsub(k,a,o,0);libbcmath._bc_shift_addsub(k,a,0,0);libbcmath._bc_shift_addsub(k,b,o,y.n_sign!=x.n_sign);return k};libbcmath.bc_sub=function(e,d,c){var f;var b,a;if(e.n_sign!=d.n_sign){f=libbcmath._bc_do_add(e,d,c);f.n_sign=e.n_sign}else{b=libbcmath._bc_do_compare(e,d,false,false);switch(b){case -1:f=libbcmath._bc_do_sub(d,e,c);f.n_sign=(d.n_sign==libbcmath.PLUS?libbcmath.MINUS:libbcmath.PLUS);break;case 0:a=libbcmath.MAX(c,libbcmath.MAX(e.n_scale,d.n_scale));f=libbcmath.bc_new_num(1,a);libbcmath.memset(f.n_value,0,0,a+1);break;case 1:f=libbcmath._bc_do_sub(e,d,c);f.n_sign=e.n_sign;break}}return f};function bcadd(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_add(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcsub(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_sub(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bccomp(a,c,e){var d,b;if(typeof(e)==\"undefined\"){e=libbcmath.scale}e=((e<0)?0:e);d=libbcmath.bc_init_num();b=libbcmath.bc_init_num();d=libbcmath.bc_str2num(a.toString(),e);b=libbcmath.bc_str2num(c.toString(),e);return libbcmath.bc_compare(d,b,e)}function bcscale(a){a=parseInt(a,10);if(isNaN(a)){return false}if(a<0){return false}libbcmath.scale=a;return true}function bcdiv(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_divide(e,c,f);if(a===-1){throw new Error(11,\"(BC) Division by zero\")}if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcmul(b,d,f){var e,c,a;if(typeof(f)==\"undefined\"){f=libbcmath.scale}f=((f<0)?0:f);e=libbcmath.bc_init_num();c=libbcmath.bc_init_num();a=libbcmath.bc_init_num();e=libbcmath.php_str2num(b.toString());c=libbcmath.php_str2num(d.toString());if(e.n_scale>c.n_scale){c.setScale(e.n_scale)}if(c.n_scale>e.n_scale){e.setScale(c.n_scale)}a=libbcmath.bc_multiply(e,c,f);if(a.n_scale>f){a.n_scale=f}return a.toString()}function bcround(d,b){var a,c;a=\"0.\"+Array(b+1).join(\"0\")+\"5\";if(d.toString().substring(0,1)==\"-\"){a=\"-\"+a}c=bcadd(d,a,b);return c};","/**\n * PDF417 - 2D Barcode generator (LGPLv3)\n *\n * Ported from PHP - PDF417 class, version 1.0.005, from TCPDF library (http://www.tcpdf.org/)\n */\nvar PDF417 = {\n\tROWHEIGHT: 4,\n\tQUIETH: 2,\n\tQUIETV: 2,\n\n\tbarcode_array: {},\n\tstart_pattern: '11111111010101000',\n\tstop_pattern: '111111101000101001',\n\n\t/**\n\t * Array of text Compaction Sub-Modes (values 0xFB - 0xFF are used for submode changers).\t \n\t */\n\ttextsubmodes: [\n\t\t[0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x20,0xFD,0xFE,0xFF], // Alpha\n\t\t[0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x6b,0x6c,0x6d,0x6e,0x6f,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x20,0xFD,0xFE,0xFF], // Lower\n\t\t[0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x26,0x0d,0x09,0x2c,0x3a,0x23,0x2d,0x2e,0x24,0x2f,0x2b,0x25,0x2a,0x3d,0x5e,0xFB,0x20,0xFD,0xFE,0xFF], // Mixed\n\t\t[0x3b,0x3c,0x3e,0x40,0x5b,0x5c,0x5d,0x5f,0x60,0x7e,0x21,0x0d,0x09,0x2c,0x3a,0x0a,0x2d,0x2e,0x24,0x2f,0x22,0x7c,0x2a,0x28,0x29,0x3f,0x7b,0x7d,0x27,0xFF] // Puntuaction\n\t],\n\n\t/**\n\t * Array of switching codes for Text Compaction Sub-Modes.\t \n\t */\n\ttextlatch: {\n\t\t'01': [27], '02': [28], '03': [28,25], //\n\t\t'10': [28,28], '12': [28], '13': [28,25], //\n\t\t'20': [28], '21': [27], '23': [25], //\n\t\t'30': [29], '31': [29,27], '32': [29,28] //\n\t},\n\n\t/**\n\t * Clusters of codewords (0, 3, 6)<br/>\n\t * Values are hex equivalents of binary representation of bars (1 = bar, 0 = space).<br/>\n\t * The codewords numbered from 900 to 928 have special meaning, some enable to switch between modes in order to optimise the code:\n\t * <ul>\n\t * <li>900 : Switch to \"Text\" mode</li>\n\t * <li>901 : Switch to \"Byte\" mode</li>\n\t * <li>902 : Switch to \"Numeric\" mode</li>\n\t * <li>903 - 912 : Reserved</li>\n\t * <li>913 : Switch to \"Octet\" only for the next codeword</li>\n\t * <li>914 - 920 : Reserved</li>\n\t * <li>921 : Initialization</li>\n\t * <li>922 : Terminator codeword for Macro PDF control block</li>\n\t * <li>923 : Sequence tag to identify the beginning of optional fields in the Macro PDF control block</li>\n\t * <li>924 : Switch to \"Byte\" mode (If the total number of byte is multiple of 6)</li>\n\t * <li>925 : Identifier for a user defined Extended Channel Interpretation (ECI)</li>\n\t * <li>926 : Identifier for a general purpose ECI format</li>\n\t * <li>927 : Identifier for an ECI of a character set or code page</li>\n\t * <li>928 : Macro marker codeword to indicate the beginning of a Macro PDF Control Block</li>\n\t * </ul>\t \n\t */\n\tclusters: [\n\t\t[ // cluster 0 -----------------------------------------------------------------------\n\t\t\t0x1d5c0,0x1eaf0,0x1f57c,0x1d4e0,0x1ea78,0x1f53e,0x1a8c0,0x1d470,0x1a860,0x15040, //  10\n\t\t\t0x1a830,0x15020,0x1adc0,0x1d6f0,0x1eb7c,0x1ace0,0x1d678,0x1eb3e,0x158c0,0x1ac70, //  20\n\t\t\t0x15860,0x15dc0,0x1aef0,0x1d77c,0x15ce0,0x1ae78,0x1d73e,0x15c70,0x1ae3c,0x15ef0, //  30\n\t\t\t0x1af7c,0x15e78,0x1af3e,0x15f7c,0x1f5fa,0x1d2e0,0x1e978,0x1f4be,0x1a4c0,0x1d270, //  40\n\t\t\t0x1e93c,0x1a460,0x1d238,0x14840,0x1a430,0x1d21c,0x14820,0x1a418,0x14810,0x1a6e0, //  50\n\t\t\t0x1d378,0x1e9be,0x14cc0,0x1a670,0x1d33c,0x14c60,0x1a638,0x1d31e,0x14c30,0x1a61c, //  60\n\t\t\t0x14ee0,0x1a778,0x1d3be,0x14e70,0x1a73c,0x14e38,0x1a71e,0x14f78,0x1a7be,0x14f3c, //  70\n\t\t\t0x14f1e,0x1a2c0,0x1d170,0x1e8bc,0x1a260,0x1d138,0x1e89e,0x14440,0x1a230,0x1d11c, //  80\n\t\t\t0x14420,0x1a218,0x14410,0x14408,0x146c0,0x1a370,0x1d1bc,0x14660,0x1a338,0x1d19e, //  90\n\t\t\t0x14630,0x1a31c,0x14618,0x1460c,0x14770,0x1a3bc,0x14738,0x1a39e,0x1471c,0x147bc, // 100\n\t\t\t0x1a160,0x1d0b8,0x1e85e,0x14240,0x1a130,0x1d09c,0x14220,0x1a118,0x1d08e,0x14210, // 110\n\t\t\t0x1a10c,0x14208,0x1a106,0x14360,0x1a1b8,0x1d0de,0x14330,0x1a19c,0x14318,0x1a18e, // 120\n\t\t\t0x1430c,0x14306,0x1a1de,0x1438e,0x14140,0x1a0b0,0x1d05c,0x14120,0x1a098,0x1d04e, // 130\n\t\t\t0x14110,0x1a08c,0x14108,0x1a086,0x14104,0x141b0,0x14198,0x1418c,0x140a0,0x1d02e, // 140\n\t\t\t0x1a04c,0x1a046,0x14082,0x1cae0,0x1e578,0x1f2be,0x194c0,0x1ca70,0x1e53c,0x19460, // 150\n\t\t\t0x1ca38,0x1e51e,0x12840,0x19430,0x12820,0x196e0,0x1cb78,0x1e5be,0x12cc0,0x19670, // 160\n\t\t\t0x1cb3c,0x12c60,0x19638,0x12c30,0x12c18,0x12ee0,0x19778,0x1cbbe,0x12e70,0x1973c, // 170\n\t\t\t0x12e38,0x12e1c,0x12f78,0x197be,0x12f3c,0x12fbe,0x1dac0,0x1ed70,0x1f6bc,0x1da60, // 180\n\t\t\t0x1ed38,0x1f69e,0x1b440,0x1da30,0x1ed1c,0x1b420,0x1da18,0x1ed0e,0x1b410,0x1da0c, // 190\n\t\t\t0x192c0,0x1c970,0x1e4bc,0x1b6c0,0x19260,0x1c938,0x1e49e,0x1b660,0x1db38,0x1ed9e, // 200\n\t\t\t0x16c40,0x12420,0x19218,0x1c90e,0x16c20,0x1b618,0x16c10,0x126c0,0x19370,0x1c9bc, // 210\n\t\t\t0x16ec0,0x12660,0x19338,0x1c99e,0x16e60,0x1b738,0x1db9e,0x16e30,0x12618,0x16e18, // 220\n\t\t\t0x12770,0x193bc,0x16f70,0x12738,0x1939e,0x16f38,0x1b79e,0x16f1c,0x127bc,0x16fbc, // 230\n\t\t\t0x1279e,0x16f9e,0x1d960,0x1ecb8,0x1f65e,0x1b240,0x1d930,0x1ec9c,0x1b220,0x1d918, // 240\n\t\t\t0x1ec8e,0x1b210,0x1d90c,0x1b208,0x1b204,0x19160,0x1c8b8,0x1e45e,0x1b360,0x19130, // 250\n\t\t\t0x1c89c,0x16640,0x12220,0x1d99c,0x1c88e,0x16620,0x12210,0x1910c,0x16610,0x1b30c, // 260\n\t\t\t0x19106,0x12204,0x12360,0x191b8,0x1c8de,0x16760,0x12330,0x1919c,0x16730,0x1b39c, // 270\n\t\t\t0x1918e,0x16718,0x1230c,0x12306,0x123b8,0x191de,0x167b8,0x1239c,0x1679c,0x1238e, // 280\n\t\t\t0x1678e,0x167de,0x1b140,0x1d8b0,0x1ec5c,0x1b120,0x1d898,0x1ec4e,0x1b110,0x1d88c, // 290\n\t\t\t0x1b108,0x1d886,0x1b104,0x1b102,0x12140,0x190b0,0x1c85c,0x16340,0x12120,0x19098, // 300\n\t\t\t0x1c84e,0x16320,0x1b198,0x1d8ce,0x16310,0x12108,0x19086,0x16308,0x1b186,0x16304, // 310\n\t\t\t0x121b0,0x190dc,0x163b0,0x12198,0x190ce,0x16398,0x1b1ce,0x1638c,0x12186,0x16386, // 320\n\t\t\t0x163dc,0x163ce,0x1b0a0,0x1d858,0x1ec2e,0x1b090,0x1d84c,0x1b088,0x1d846,0x1b084, // 330\n\t\t\t0x1b082,0x120a0,0x19058,0x1c82e,0x161a0,0x12090,0x1904c,0x16190,0x1b0cc,0x19046, // 340\n\t\t\t0x16188,0x12084,0x16184,0x12082,0x120d8,0x161d8,0x161cc,0x161c6,0x1d82c,0x1d826, // 350\n\t\t\t0x1b042,0x1902c,0x12048,0x160c8,0x160c4,0x160c2,0x18ac0,0x1c570,0x1e2bc,0x18a60, // 360\n\t\t\t0x1c538,0x11440,0x18a30,0x1c51c,0x11420,0x18a18,0x11410,0x11408,0x116c0,0x18b70, // 370\n\t\t\t0x1c5bc,0x11660,0x18b38,0x1c59e,0x11630,0x18b1c,0x11618,0x1160c,0x11770,0x18bbc, // 380\n\t\t\t0x11738,0x18b9e,0x1171c,0x117bc,0x1179e,0x1cd60,0x1e6b8,0x1f35e,0x19a40,0x1cd30, // 390\n\t\t\t0x1e69c,0x19a20,0x1cd18,0x1e68e,0x19a10,0x1cd0c,0x19a08,0x1cd06,0x18960,0x1c4b8, // 400\n\t\t\t0x1e25e,0x19b60,0x18930,0x1c49c,0x13640,0x11220,0x1cd9c,0x1c48e,0x13620,0x19b18, // 410\n\t\t\t0x1890c,0x13610,0x11208,0x13608,0x11360,0x189b8,0x1c4de,0x13760,0x11330,0x1cdde, // 420\n\t\t\t0x13730,0x19b9c,0x1898e,0x13718,0x1130c,0x1370c,0x113b8,0x189de,0x137b8,0x1139c, // 430\n\t\t\t0x1379c,0x1138e,0x113de,0x137de,0x1dd40,0x1eeb0,0x1f75c,0x1dd20,0x1ee98,0x1f74e, // 440\n\t\t\t0x1dd10,0x1ee8c,0x1dd08,0x1ee86,0x1dd04,0x19940,0x1ccb0,0x1e65c,0x1bb40,0x19920, // 450\n\t\t\t0x1eedc,0x1e64e,0x1bb20,0x1dd98,0x1eece,0x1bb10,0x19908,0x1cc86,0x1bb08,0x1dd86, // 460\n\t\t\t0x19902,0x11140,0x188b0,0x1c45c,0x13340,0x11120,0x18898,0x1c44e,0x17740,0x13320, // 470\n\t\t\t0x19998,0x1ccce,0x17720,0x1bb98,0x1ddce,0x18886,0x17710,0x13308,0x19986,0x17708, // 480\n\t\t\t0x11102,0x111b0,0x188dc,0x133b0,0x11198,0x188ce,0x177b0,0x13398,0x199ce,0x17798, // 490\n\t\t\t0x1bbce,0x11186,0x13386,0x111dc,0x133dc,0x111ce,0x177dc,0x133ce,0x1dca0,0x1ee58, // 500\n\t\t\t0x1f72e,0x1dc90,0x1ee4c,0x1dc88,0x1ee46,0x1dc84,0x1dc82,0x198a0,0x1cc58,0x1e62e, // 510\n\t\t\t0x1b9a0,0x19890,0x1ee6e,0x1b990,0x1dccc,0x1cc46,0x1b988,0x19884,0x1b984,0x19882, // 520\n\t\t\t0x1b982,0x110a0,0x18858,0x1c42e,0x131a0,0x11090,0x1884c,0x173a0,0x13190,0x198cc, // 530\n\t\t\t0x18846,0x17390,0x1b9cc,0x11084,0x17388,0x13184,0x11082,0x13182,0x110d8,0x1886e, // 540\n\t\t\t0x131d8,0x110cc,0x173d8,0x131cc,0x110c6,0x173cc,0x131c6,0x110ee,0x173ee,0x1dc50, // 550\n\t\t\t0x1ee2c,0x1dc48,0x1ee26,0x1dc44,0x1dc42,0x19850,0x1cc2c,0x1b8d0,0x19848,0x1cc26, // 560\n\t\t\t0x1b8c8,0x1dc66,0x1b8c4,0x19842,0x1b8c2,0x11050,0x1882c,0x130d0,0x11048,0x18826, // 570\n\t\t\t0x171d0,0x130c8,0x19866,0x171c8,0x1b8e6,0x11042,0x171c4,0x130c2,0x171c2,0x130ec, // 580\n\t\t\t0x171ec,0x171e6,0x1ee16,0x1dc22,0x1cc16,0x19824,0x19822,0x11028,0x13068,0x170e8, // 590\n\t\t\t0x11022,0x13062,0x18560,0x10a40,0x18530,0x10a20,0x18518,0x1c28e,0x10a10,0x1850c, // 600\n\t\t\t0x10a08,0x18506,0x10b60,0x185b8,0x1c2de,0x10b30,0x1859c,0x10b18,0x1858e,0x10b0c, // 610\n\t\t\t0x10b06,0x10bb8,0x185de,0x10b9c,0x10b8e,0x10bde,0x18d40,0x1c6b0,0x1e35c,0x18d20, // 620\n\t\t\t0x1c698,0x18d10,0x1c68c,0x18d08,0x1c686,0x18d04,0x10940,0x184b0,0x1c25c,0x11b40, // 630\n\t\t\t0x10920,0x1c6dc,0x1c24e,0x11b20,0x18d98,0x1c6ce,0x11b10,0x10908,0x18486,0x11b08, // 640\n\t\t\t0x18d86,0x10902,0x109b0,0x184dc,0x11bb0,0x10998,0x184ce,0x11b98,0x18dce,0x11b8c, // 650\n\t\t\t0x10986,0x109dc,0x11bdc,0x109ce,0x11bce,0x1cea0,0x1e758,0x1f3ae,0x1ce90,0x1e74c, // 660\n\t\t\t0x1ce88,0x1e746,0x1ce84,0x1ce82,0x18ca0,0x1c658,0x19da0,0x18c90,0x1c64c,0x19d90, // 670\n\t\t\t0x1cecc,0x1c646,0x19d88,0x18c84,0x19d84,0x18c82,0x19d82,0x108a0,0x18458,0x119a0, // 680\n\t\t\t0x10890,0x1c66e,0x13ba0,0x11990,0x18ccc,0x18446,0x13b90,0x19dcc,0x10884,0x13b88, // 690\n\t\t\t0x11984,0x10882,0x11982,0x108d8,0x1846e,0x119d8,0x108cc,0x13bd8,0x119cc,0x108c6, // 700\n\t\t\t0x13bcc,0x119c6,0x108ee,0x119ee,0x13bee,0x1ef50,0x1f7ac,0x1ef48,0x1f7a6,0x1ef44, // 710\n\t\t\t0x1ef42,0x1ce50,0x1e72c,0x1ded0,0x1ef6c,0x1e726,0x1dec8,0x1ef66,0x1dec4,0x1ce42, // 720\n\t\t\t0x1dec2,0x18c50,0x1c62c,0x19cd0,0x18c48,0x1c626,0x1bdd0,0x19cc8,0x1ce66,0x1bdc8, // 730\n\t\t\t0x1dee6,0x18c42,0x1bdc4,0x19cc2,0x1bdc2,0x10850,0x1842c,0x118d0,0x10848,0x18426, // 740\n\t\t\t0x139d0,0x118c8,0x18c66,0x17bd0,0x139c8,0x19ce6,0x10842,0x17bc8,0x1bde6,0x118c2, // 750\n\t\t\t0x17bc4,0x1086c,0x118ec,0x10866,0x139ec,0x118e6,0x17bec,0x139e6,0x17be6,0x1ef28, // 760\n\t\t\t0x1f796,0x1ef24,0x1ef22,0x1ce28,0x1e716,0x1de68,0x1ef36,0x1de64,0x1ce22,0x1de62, // 770\n\t\t\t0x18c28,0x1c616,0x19c68,0x18c24,0x1bce8,0x19c64,0x18c22,0x1bce4,0x19c62,0x1bce2, // 780\n\t\t\t0x10828,0x18416,0x11868,0x18c36,0x138e8,0x11864,0x10822,0x179e8,0x138e4,0x11862, // 790\n\t\t\t0x179e4,0x138e2,0x179e2,0x11876,0x179f6,0x1ef12,0x1de34,0x1de32,0x19c34,0x1bc74, // 800\n\t\t\t0x1bc72,0x11834,0x13874,0x178f4,0x178f2,0x10540,0x10520,0x18298,0x10510,0x10508, // 810\n\t\t\t0x10504,0x105b0,0x10598,0x1058c,0x10586,0x105dc,0x105ce,0x186a0,0x18690,0x1c34c, // 820\n\t\t\t0x18688,0x1c346,0x18684,0x18682,0x104a0,0x18258,0x10da0,0x186d8,0x1824c,0x10d90, // 830\n\t\t\t0x186cc,0x10d88,0x186c6,0x10d84,0x10482,0x10d82,0x104d8,0x1826e,0x10dd8,0x186ee, // 840\n\t\t\t0x10dcc,0x104c6,0x10dc6,0x104ee,0x10dee,0x1c750,0x1c748,0x1c744,0x1c742,0x18650, // 850\n\t\t\t0x18ed0,0x1c76c,0x1c326,0x18ec8,0x1c766,0x18ec4,0x18642,0x18ec2,0x10450,0x10cd0, // 860\n\t\t\t0x10448,0x18226,0x11dd0,0x10cc8,0x10444,0x11dc8,0x10cc4,0x10442,0x11dc4,0x10cc2, // 870\n\t\t\t0x1046c,0x10cec,0x10466,0x11dec,0x10ce6,0x11de6,0x1e7a8,0x1e7a4,0x1e7a2,0x1c728, // 880\n\t\t\t0x1cf68,0x1e7b6,0x1cf64,0x1c722,0x1cf62,0x18628,0x1c316,0x18e68,0x1c736,0x19ee8, // 890\n\t\t\t0x18e64,0x18622,0x19ee4,0x18e62,0x19ee2,0x10428,0x18216,0x10c68,0x18636,0x11ce8, // 900\n\t\t\t0x10c64,0x10422,0x13de8,0x11ce4,0x10c62,0x13de4,0x11ce2,0x10436,0x10c76,0x11cf6, // 910\n\t\t\t0x13df6,0x1f7d4,0x1f7d2,0x1e794,0x1efb4,0x1e792,0x1efb2,0x1c714,0x1cf34,0x1c712, // 920\n\t\t\t0x1df74,0x1cf32,0x1df72,0x18614,0x18e34,0x18612,0x19e74,0x18e32,0x1bef4],        // 929\n\t\t[ // cluster 3 -----------------------------------------------------------------------\n\t\t\t0x1f560,0x1fab8,0x1ea40,0x1f530,0x1fa9c,0x1ea20,0x1f518,0x1fa8e,0x1ea10,0x1f50c, //  10\n\t\t\t0x1ea08,0x1f506,0x1ea04,0x1eb60,0x1f5b8,0x1fade,0x1d640,0x1eb30,0x1f59c,0x1d620, //  20\n\t\t\t0x1eb18,0x1f58e,0x1d610,0x1eb0c,0x1d608,0x1eb06,0x1d604,0x1d760,0x1ebb8,0x1f5de, //  30\n\t\t\t0x1ae40,0x1d730,0x1eb9c,0x1ae20,0x1d718,0x1eb8e,0x1ae10,0x1d70c,0x1ae08,0x1d706, //  40\n\t\t\t0x1ae04,0x1af60,0x1d7b8,0x1ebde,0x15e40,0x1af30,0x1d79c,0x15e20,0x1af18,0x1d78e, //  50\n\t\t\t0x15e10,0x1af0c,0x15e08,0x1af06,0x15f60,0x1afb8,0x1d7de,0x15f30,0x1af9c,0x15f18, //  60\n\t\t\t0x1af8e,0x15f0c,0x15fb8,0x1afde,0x15f9c,0x15f8e,0x1e940,0x1f4b0,0x1fa5c,0x1e920, //  70\n\t\t\t0x1f498,0x1fa4e,0x1e910,0x1f48c,0x1e908,0x1f486,0x1e904,0x1e902,0x1d340,0x1e9b0, //  80\n\t\t\t0x1f4dc,0x1d320,0x1e998,0x1f4ce,0x1d310,0x1e98c,0x1d308,0x1e986,0x1d304,0x1d302, //  90\n\t\t\t0x1a740,0x1d3b0,0x1e9dc,0x1a720,0x1d398,0x1e9ce,0x1a710,0x1d38c,0x1a708,0x1d386, // 100\n\t\t\t0x1a704,0x1a702,0x14f40,0x1a7b0,0x1d3dc,0x14f20,0x1a798,0x1d3ce,0x14f10,0x1a78c, // 110\n\t\t\t0x14f08,0x1a786,0x14f04,0x14fb0,0x1a7dc,0x14f98,0x1a7ce,0x14f8c,0x14f86,0x14fdc, // 120\n\t\t\t0x14fce,0x1e8a0,0x1f458,0x1fa2e,0x1e890,0x1f44c,0x1e888,0x1f446,0x1e884,0x1e882, // 130\n\t\t\t0x1d1a0,0x1e8d8,0x1f46e,0x1d190,0x1e8cc,0x1d188,0x1e8c6,0x1d184,0x1d182,0x1a3a0, // 140\n\t\t\t0x1d1d8,0x1e8ee,0x1a390,0x1d1cc,0x1a388,0x1d1c6,0x1a384,0x1a382,0x147a0,0x1a3d8, // 150\n\t\t\t0x1d1ee,0x14790,0x1a3cc,0x14788,0x1a3c6,0x14784,0x14782,0x147d8,0x1a3ee,0x147cc, // 160\n\t\t\t0x147c6,0x147ee,0x1e850,0x1f42c,0x1e848,0x1f426,0x1e844,0x1e842,0x1d0d0,0x1e86c, // 170\n\t\t\t0x1d0c8,0x1e866,0x1d0c4,0x1d0c2,0x1a1d0,0x1d0ec,0x1a1c8,0x1d0e6,0x1a1c4,0x1a1c2, // 180\n\t\t\t0x143d0,0x1a1ec,0x143c8,0x1a1e6,0x143c4,0x143c2,0x143ec,0x143e6,0x1e828,0x1f416, // 190\n\t\t\t0x1e824,0x1e822,0x1d068,0x1e836,0x1d064,0x1d062,0x1a0e8,0x1d076,0x1a0e4,0x1a0e2, // 200\n\t\t\t0x141e8,0x1a0f6,0x141e4,0x141e2,0x1e814,0x1e812,0x1d034,0x1d032,0x1a074,0x1a072, // 210\n\t\t\t0x1e540,0x1f2b0,0x1f95c,0x1e520,0x1f298,0x1f94e,0x1e510,0x1f28c,0x1e508,0x1f286, // 220\n\t\t\t0x1e504,0x1e502,0x1cb40,0x1e5b0,0x1f2dc,0x1cb20,0x1e598,0x1f2ce,0x1cb10,0x1e58c, // 230\n\t\t\t0x1cb08,0x1e586,0x1cb04,0x1cb02,0x19740,0x1cbb0,0x1e5dc,0x19720,0x1cb98,0x1e5ce, // 240\n\t\t\t0x19710,0x1cb8c,0x19708,0x1cb86,0x19704,0x19702,0x12f40,0x197b0,0x1cbdc,0x12f20, // 250\n\t\t\t0x19798,0x1cbce,0x12f10,0x1978c,0x12f08,0x19786,0x12f04,0x12fb0,0x197dc,0x12f98, // 260\n\t\t\t0x197ce,0x12f8c,0x12f86,0x12fdc,0x12fce,0x1f6a0,0x1fb58,0x16bf0,0x1f690,0x1fb4c, // 270\n\t\t\t0x169f8,0x1f688,0x1fb46,0x168fc,0x1f684,0x1f682,0x1e4a0,0x1f258,0x1f92e,0x1eda0, // 280\n\t\t\t0x1e490,0x1fb6e,0x1ed90,0x1f6cc,0x1f246,0x1ed88,0x1e484,0x1ed84,0x1e482,0x1ed82, // 290\n\t\t\t0x1c9a0,0x1e4d8,0x1f26e,0x1dba0,0x1c990,0x1e4cc,0x1db90,0x1edcc,0x1e4c6,0x1db88, // 300\n\t\t\t0x1c984,0x1db84,0x1c982,0x1db82,0x193a0,0x1c9d8,0x1e4ee,0x1b7a0,0x19390,0x1c9cc, // 310\n\t\t\t0x1b790,0x1dbcc,0x1c9c6,0x1b788,0x19384,0x1b784,0x19382,0x1b782,0x127a0,0x193d8, // 320\n\t\t\t0x1c9ee,0x16fa0,0x12790,0x193cc,0x16f90,0x1b7cc,0x193c6,0x16f88,0x12784,0x16f84, // 330\n\t\t\t0x12782,0x127d8,0x193ee,0x16fd8,0x127cc,0x16fcc,0x127c6,0x16fc6,0x127ee,0x1f650, // 340\n\t\t\t0x1fb2c,0x165f8,0x1f648,0x1fb26,0x164fc,0x1f644,0x1647e,0x1f642,0x1e450,0x1f22c, // 350\n\t\t\t0x1ecd0,0x1e448,0x1f226,0x1ecc8,0x1f666,0x1ecc4,0x1e442,0x1ecc2,0x1c8d0,0x1e46c, // 360\n\t\t\t0x1d9d0,0x1c8c8,0x1e466,0x1d9c8,0x1ece6,0x1d9c4,0x1c8c2,0x1d9c2,0x191d0,0x1c8ec, // 370\n\t\t\t0x1b3d0,0x191c8,0x1c8e6,0x1b3c8,0x1d9e6,0x1b3c4,0x191c2,0x1b3c2,0x123d0,0x191ec, // 380\n\t\t\t0x167d0,0x123c8,0x191e6,0x167c8,0x1b3e6,0x167c4,0x123c2,0x167c2,0x123ec,0x167ec, // 390\n\t\t\t0x123e6,0x167e6,0x1f628,0x1fb16,0x162fc,0x1f624,0x1627e,0x1f622,0x1e428,0x1f216, // 400\n\t\t\t0x1ec68,0x1f636,0x1ec64,0x1e422,0x1ec62,0x1c868,0x1e436,0x1d8e8,0x1c864,0x1d8e4, // 410\n\t\t\t0x1c862,0x1d8e2,0x190e8,0x1c876,0x1b1e8,0x1d8f6,0x1b1e4,0x190e2,0x1b1e2,0x121e8, // 420\n\t\t\t0x190f6,0x163e8,0x121e4,0x163e4,0x121e2,0x163e2,0x121f6,0x163f6,0x1f614,0x1617e, // 430\n\t\t\t0x1f612,0x1e414,0x1ec34,0x1e412,0x1ec32,0x1c834,0x1d874,0x1c832,0x1d872,0x19074, // 440\n\t\t\t0x1b0f4,0x19072,0x1b0f2,0x120f4,0x161f4,0x120f2,0x161f2,0x1f60a,0x1e40a,0x1ec1a, // 450\n\t\t\t0x1c81a,0x1d83a,0x1903a,0x1b07a,0x1e2a0,0x1f158,0x1f8ae,0x1e290,0x1f14c,0x1e288, // 460\n\t\t\t0x1f146,0x1e284,0x1e282,0x1c5a0,0x1e2d8,0x1f16e,0x1c590,0x1e2cc,0x1c588,0x1e2c6, // 470\n\t\t\t0x1c584,0x1c582,0x18ba0,0x1c5d8,0x1e2ee,0x18b90,0x1c5cc,0x18b88,0x1c5c6,0x18b84, // 480\n\t\t\t0x18b82,0x117a0,0x18bd8,0x1c5ee,0x11790,0x18bcc,0x11788,0x18bc6,0x11784,0x11782, // 490\n\t\t\t0x117d8,0x18bee,0x117cc,0x117c6,0x117ee,0x1f350,0x1f9ac,0x135f8,0x1f348,0x1f9a6, // 500\n\t\t\t0x134fc,0x1f344,0x1347e,0x1f342,0x1e250,0x1f12c,0x1e6d0,0x1e248,0x1f126,0x1e6c8, // 510\n\t\t\t0x1f366,0x1e6c4,0x1e242,0x1e6c2,0x1c4d0,0x1e26c,0x1cdd0,0x1c4c8,0x1e266,0x1cdc8, // 520\n\t\t\t0x1e6e6,0x1cdc4,0x1c4c2,0x1cdc2,0x189d0,0x1c4ec,0x19bd0,0x189c8,0x1c4e6,0x19bc8, // 530\n\t\t\t0x1cde6,0x19bc4,0x189c2,0x19bc2,0x113d0,0x189ec,0x137d0,0x113c8,0x189e6,0x137c8, // 540\n\t\t\t0x19be6,0x137c4,0x113c2,0x137c2,0x113ec,0x137ec,0x113e6,0x137e6,0x1fba8,0x175f0, // 550\n\t\t\t0x1bafc,0x1fba4,0x174f8,0x1ba7e,0x1fba2,0x1747c,0x1743e,0x1f328,0x1f996,0x132fc, // 560\n\t\t\t0x1f768,0x1fbb6,0x176fc,0x1327e,0x1f764,0x1f322,0x1767e,0x1f762,0x1e228,0x1f116, // 570\n\t\t\t0x1e668,0x1e224,0x1eee8,0x1f776,0x1e222,0x1eee4,0x1e662,0x1eee2,0x1c468,0x1e236, // 580\n\t\t\t0x1cce8,0x1c464,0x1dde8,0x1cce4,0x1c462,0x1dde4,0x1cce2,0x1dde2,0x188e8,0x1c476, // 590\n\t\t\t0x199e8,0x188e4,0x1bbe8,0x199e4,0x188e2,0x1bbe4,0x199e2,0x1bbe2,0x111e8,0x188f6, // 600\n\t\t\t0x133e8,0x111e4,0x177e8,0x133e4,0x111e2,0x177e4,0x133e2,0x177e2,0x111f6,0x133f6, // 610\n\t\t\t0x1fb94,0x172f8,0x1b97e,0x1fb92,0x1727c,0x1723e,0x1f314,0x1317e,0x1f734,0x1f312, // 620\n\t\t\t0x1737e,0x1f732,0x1e214,0x1e634,0x1e212,0x1ee74,0x1e632,0x1ee72,0x1c434,0x1cc74, // 630\n\t\t\t0x1c432,0x1dcf4,0x1cc72,0x1dcf2,0x18874,0x198f4,0x18872,0x1b9f4,0x198f2,0x1b9f2, // 640\n\t\t\t0x110f4,0x131f4,0x110f2,0x173f4,0x131f2,0x173f2,0x1fb8a,0x1717c,0x1713e,0x1f30a, // 650\n\t\t\t0x1f71a,0x1e20a,0x1e61a,0x1ee3a,0x1c41a,0x1cc3a,0x1dc7a,0x1883a,0x1987a,0x1b8fa, // 660\n\t\t\t0x1107a,0x130fa,0x171fa,0x170be,0x1e150,0x1f0ac,0x1e148,0x1f0a6,0x1e144,0x1e142, // 670\n\t\t\t0x1c2d0,0x1e16c,0x1c2c8,0x1e166,0x1c2c4,0x1c2c2,0x185d0,0x1c2ec,0x185c8,0x1c2e6, // 680\n\t\t\t0x185c4,0x185c2,0x10bd0,0x185ec,0x10bc8,0x185e6,0x10bc4,0x10bc2,0x10bec,0x10be6, // 690\n\t\t\t0x1f1a8,0x1f8d6,0x11afc,0x1f1a4,0x11a7e,0x1f1a2,0x1e128,0x1f096,0x1e368,0x1e124, // 700\n\t\t\t0x1e364,0x1e122,0x1e362,0x1c268,0x1e136,0x1c6e8,0x1c264,0x1c6e4,0x1c262,0x1c6e2, // 710\n\t\t\t0x184e8,0x1c276,0x18de8,0x184e4,0x18de4,0x184e2,0x18de2,0x109e8,0x184f6,0x11be8, // 720\n\t\t\t0x109e4,0x11be4,0x109e2,0x11be2,0x109f6,0x11bf6,0x1f9d4,0x13af8,0x19d7e,0x1f9d2, // 730\n\t\t\t0x13a7c,0x13a3e,0x1f194,0x1197e,0x1f3b4,0x1f192,0x13b7e,0x1f3b2,0x1e114,0x1e334, // 740\n\t\t\t0x1e112,0x1e774,0x1e332,0x1e772,0x1c234,0x1c674,0x1c232,0x1cef4,0x1c672,0x1cef2, // 750\n\t\t\t0x18474,0x18cf4,0x18472,0x19df4,0x18cf2,0x19df2,0x108f4,0x119f4,0x108f2,0x13bf4, // 760\n\t\t\t0x119f2,0x13bf2,0x17af0,0x1bd7c,0x17a78,0x1bd3e,0x17a3c,0x17a1e,0x1f9ca,0x1397c, // 770\n\t\t\t0x1fbda,0x17b7c,0x1393e,0x17b3e,0x1f18a,0x1f39a,0x1f7ba,0x1e10a,0x1e31a,0x1e73a, // 780\n\t\t\t0x1ef7a,0x1c21a,0x1c63a,0x1ce7a,0x1defa,0x1843a,0x18c7a,0x19cfa,0x1bdfa,0x1087a, // 790\n\t\t\t0x118fa,0x139fa,0x17978,0x1bcbe,0x1793c,0x1791e,0x138be,0x179be,0x178bc,0x1789e, // 800\n\t\t\t0x1785e,0x1e0a8,0x1e0a4,0x1e0a2,0x1c168,0x1e0b6,0x1c164,0x1c162,0x182e8,0x1c176, // 810\n\t\t\t0x182e4,0x182e2,0x105e8,0x182f6,0x105e4,0x105e2,0x105f6,0x1f0d4,0x10d7e,0x1f0d2, // 820\n\t\t\t0x1e094,0x1e1b4,0x1e092,0x1e1b2,0x1c134,0x1c374,0x1c132,0x1c372,0x18274,0x186f4, // 830\n\t\t\t0x18272,0x186f2,0x104f4,0x10df4,0x104f2,0x10df2,0x1f8ea,0x11d7c,0x11d3e,0x1f0ca, // 840\n\t\t\t0x1f1da,0x1e08a,0x1e19a,0x1e3ba,0x1c11a,0x1c33a,0x1c77a,0x1823a,0x1867a,0x18efa, // 850\n\t\t\t0x1047a,0x10cfa,0x11dfa,0x13d78,0x19ebe,0x13d3c,0x13d1e,0x11cbe,0x13dbe,0x17d70, // 860\n\t\t\t0x1bebc,0x17d38,0x1be9e,0x17d1c,0x17d0e,0x13cbc,0x17dbc,0x13c9e,0x17d9e,0x17cb8, // 870\n\t\t\t0x1be5e,0x17c9c,0x17c8e,0x13c5e,0x17cde,0x17c5c,0x17c4e,0x17c2e,0x1c0b4,0x1c0b2, // 880\n\t\t\t0x18174,0x18172,0x102f4,0x102f2,0x1e0da,0x1c09a,0x1c1ba,0x1813a,0x1837a,0x1027a, // 890\n\t\t\t0x106fa,0x10ebe,0x11ebc,0x11e9e,0x13eb8,0x19f5e,0x13e9c,0x13e8e,0x11e5e,0x13ede, // 900\n\t\t\t0x17eb0,0x1bf5c,0x17e98,0x1bf4e,0x17e8c,0x17e86,0x13e5c,0x17edc,0x13e4e,0x17ece, // 910\n\t\t\t0x17e58,0x1bf2e,0x17e4c,0x17e46,0x13e2e,0x17e6e,0x17e2c,0x17e26,0x10f5e,0x11f5c, // 920\n\t\t\t0x11f4e,0x13f58,0x19fae,0x13f4c,0x13f46,0x11f2e,0x13f6e,0x13f2c,0x13f26],        // 929\n\t\t[ // cluster 6 -----------------------------------------------------------------------\n\t\t\t0x1abe0,0x1d5f8,0x153c0,0x1a9f0,0x1d4fc,0x151e0,0x1a8f8,0x1d47e,0x150f0,0x1a87c, //  10\n\t\t\t0x15078,0x1fad0,0x15be0,0x1adf8,0x1fac8,0x159f0,0x1acfc,0x1fac4,0x158f8,0x1ac7e, //  20\n\t\t\t0x1fac2,0x1587c,0x1f5d0,0x1faec,0x15df8,0x1f5c8,0x1fae6,0x15cfc,0x1f5c4,0x15c7e, //  30\n\t\t\t0x1f5c2,0x1ebd0,0x1f5ec,0x1ebc8,0x1f5e6,0x1ebc4,0x1ebc2,0x1d7d0,0x1ebec,0x1d7c8, //  40\n\t\t\t0x1ebe6,0x1d7c4,0x1d7c2,0x1afd0,0x1d7ec,0x1afc8,0x1d7e6,0x1afc4,0x14bc0,0x1a5f0, //  50\n\t\t\t0x1d2fc,0x149e0,0x1a4f8,0x1d27e,0x148f0,0x1a47c,0x14878,0x1a43e,0x1483c,0x1fa68, //  60\n\t\t\t0x14df0,0x1a6fc,0x1fa64,0x14cf8,0x1a67e,0x1fa62,0x14c7c,0x14c3e,0x1f4e8,0x1fa76, //  70\n\t\t\t0x14efc,0x1f4e4,0x14e7e,0x1f4e2,0x1e9e8,0x1f4f6,0x1e9e4,0x1e9e2,0x1d3e8,0x1e9f6, //  80\n\t\t\t0x1d3e4,0x1d3e2,0x1a7e8,0x1d3f6,0x1a7e4,0x1a7e2,0x145e0,0x1a2f8,0x1d17e,0x144f0, //  90\n\t\t\t0x1a27c,0x14478,0x1a23e,0x1443c,0x1441e,0x1fa34,0x146f8,0x1a37e,0x1fa32,0x1467c, // 100\n\t\t\t0x1463e,0x1f474,0x1477e,0x1f472,0x1e8f4,0x1e8f2,0x1d1f4,0x1d1f2,0x1a3f4,0x1a3f2, // 110\n\t\t\t0x142f0,0x1a17c,0x14278,0x1a13e,0x1423c,0x1421e,0x1fa1a,0x1437c,0x1433e,0x1f43a, // 120\n\t\t\t0x1e87a,0x1d0fa,0x14178,0x1a0be,0x1413c,0x1411e,0x141be,0x140bc,0x1409e,0x12bc0, // 130\n\t\t\t0x195f0,0x1cafc,0x129e0,0x194f8,0x1ca7e,0x128f0,0x1947c,0x12878,0x1943e,0x1283c, // 140\n\t\t\t0x1f968,0x12df0,0x196fc,0x1f964,0x12cf8,0x1967e,0x1f962,0x12c7c,0x12c3e,0x1f2e8, // 150\n\t\t\t0x1f976,0x12efc,0x1f2e4,0x12e7e,0x1f2e2,0x1e5e8,0x1f2f6,0x1e5e4,0x1e5e2,0x1cbe8, // 160\n\t\t\t0x1e5f6,0x1cbe4,0x1cbe2,0x197e8,0x1cbf6,0x197e4,0x197e2,0x1b5e0,0x1daf8,0x1ed7e, // 170\n\t\t\t0x169c0,0x1b4f0,0x1da7c,0x168e0,0x1b478,0x1da3e,0x16870,0x1b43c,0x16838,0x1b41e, // 180\n\t\t\t0x1681c,0x125e0,0x192f8,0x1c97e,0x16de0,0x124f0,0x1927c,0x16cf0,0x1b67c,0x1923e, // 190\n\t\t\t0x16c78,0x1243c,0x16c3c,0x1241e,0x16c1e,0x1f934,0x126f8,0x1937e,0x1fb74,0x1f932, // 200\n\t\t\t0x16ef8,0x1267c,0x1fb72,0x16e7c,0x1263e,0x16e3e,0x1f274,0x1277e,0x1f6f4,0x1f272, // 210\n\t\t\t0x16f7e,0x1f6f2,0x1e4f4,0x1edf4,0x1e4f2,0x1edf2,0x1c9f4,0x1dbf4,0x1c9f2,0x1dbf2, // 220\n\t\t\t0x193f4,0x193f2,0x165c0,0x1b2f0,0x1d97c,0x164e0,0x1b278,0x1d93e,0x16470,0x1b23c, // 230\n\t\t\t0x16438,0x1b21e,0x1641c,0x1640e,0x122f0,0x1917c,0x166f0,0x12278,0x1913e,0x16678, // 240\n\t\t\t0x1b33e,0x1663c,0x1221e,0x1661e,0x1f91a,0x1237c,0x1fb3a,0x1677c,0x1233e,0x1673e, // 250\n\t\t\t0x1f23a,0x1f67a,0x1e47a,0x1ecfa,0x1c8fa,0x1d9fa,0x191fa,0x162e0,0x1b178,0x1d8be, // 260\n\t\t\t0x16270,0x1b13c,0x16238,0x1b11e,0x1621c,0x1620e,0x12178,0x190be,0x16378,0x1213c, // 270\n\t\t\t0x1633c,0x1211e,0x1631e,0x121be,0x163be,0x16170,0x1b0bc,0x16138,0x1b09e,0x1611c, // 280\n\t\t\t0x1610e,0x120bc,0x161bc,0x1209e,0x1619e,0x160b8,0x1b05e,0x1609c,0x1608e,0x1205e, // 290\n\t\t\t0x160de,0x1605c,0x1604e,0x115e0,0x18af8,0x1c57e,0x114f0,0x18a7c,0x11478,0x18a3e, // 300\n\t\t\t0x1143c,0x1141e,0x1f8b4,0x116f8,0x18b7e,0x1f8b2,0x1167c,0x1163e,0x1f174,0x1177e, // 310\n\t\t\t0x1f172,0x1e2f4,0x1e2f2,0x1c5f4,0x1c5f2,0x18bf4,0x18bf2,0x135c0,0x19af0,0x1cd7c, // 320\n\t\t\t0x134e0,0x19a78,0x1cd3e,0x13470,0x19a3c,0x13438,0x19a1e,0x1341c,0x1340e,0x112f0, // 330\n\t\t\t0x1897c,0x136f0,0x11278,0x1893e,0x13678,0x19b3e,0x1363c,0x1121e,0x1361e,0x1f89a, // 340\n\t\t\t0x1137c,0x1f9ba,0x1377c,0x1133e,0x1373e,0x1f13a,0x1f37a,0x1e27a,0x1e6fa,0x1c4fa, // 350\n\t\t\t0x1cdfa,0x189fa,0x1bae0,0x1dd78,0x1eebe,0x174c0,0x1ba70,0x1dd3c,0x17460,0x1ba38, // 360\n\t\t\t0x1dd1e,0x17430,0x1ba1c,0x17418,0x1ba0e,0x1740c,0x132e0,0x19978,0x1ccbe,0x176e0, // 370\n\t\t\t0x13270,0x1993c,0x17670,0x1bb3c,0x1991e,0x17638,0x1321c,0x1761c,0x1320e,0x1760e, // 380\n\t\t\t0x11178,0x188be,0x13378,0x1113c,0x17778,0x1333c,0x1111e,0x1773c,0x1331e,0x1771e, // 390\n\t\t\t0x111be,0x133be,0x177be,0x172c0,0x1b970,0x1dcbc,0x17260,0x1b938,0x1dc9e,0x17230, // 400\n\t\t\t0x1b91c,0x17218,0x1b90e,0x1720c,0x17206,0x13170,0x198bc,0x17370,0x13138,0x1989e, // 410\n\t\t\t0x17338,0x1b99e,0x1731c,0x1310e,0x1730e,0x110bc,0x131bc,0x1109e,0x173bc,0x1319e, // 420\n\t\t\t0x1739e,0x17160,0x1b8b8,0x1dc5e,0x17130,0x1b89c,0x17118,0x1b88e,0x1710c,0x17106, // 430\n\t\t\t0x130b8,0x1985e,0x171b8,0x1309c,0x1719c,0x1308e,0x1718e,0x1105e,0x130de,0x171de, // 440\n\t\t\t0x170b0,0x1b85c,0x17098,0x1b84e,0x1708c,0x17086,0x1305c,0x170dc,0x1304e,0x170ce, // 450\n\t\t\t0x17058,0x1b82e,0x1704c,0x17046,0x1302e,0x1706e,0x1702c,0x17026,0x10af0,0x1857c, // 460\n\t\t\t0x10a78,0x1853e,0x10a3c,0x10a1e,0x10b7c,0x10b3e,0x1f0ba,0x1e17a,0x1c2fa,0x185fa, // 470\n\t\t\t0x11ae0,0x18d78,0x1c6be,0x11a70,0x18d3c,0x11a38,0x18d1e,0x11a1c,0x11a0e,0x10978, // 480\n\t\t\t0x184be,0x11b78,0x1093c,0x11b3c,0x1091e,0x11b1e,0x109be,0x11bbe,0x13ac0,0x19d70, // 490\n\t\t\t0x1cebc,0x13a60,0x19d38,0x1ce9e,0x13a30,0x19d1c,0x13a18,0x19d0e,0x13a0c,0x13a06, // 500\n\t\t\t0x11970,0x18cbc,0x13b70,0x11938,0x18c9e,0x13b38,0x1191c,0x13b1c,0x1190e,0x13b0e, // 510\n\t\t\t0x108bc,0x119bc,0x1089e,0x13bbc,0x1199e,0x13b9e,0x1bd60,0x1deb8,0x1ef5e,0x17a40, // 520\n\t\t\t0x1bd30,0x1de9c,0x17a20,0x1bd18,0x1de8e,0x17a10,0x1bd0c,0x17a08,0x1bd06,0x17a04, // 530\n\t\t\t0x13960,0x19cb8,0x1ce5e,0x17b60,0x13930,0x19c9c,0x17b30,0x1bd9c,0x19c8e,0x17b18, // 540\n\t\t\t0x1390c,0x17b0c,0x13906,0x17b06,0x118b8,0x18c5e,0x139b8,0x1189c,0x17bb8,0x1399c, // 550\n\t\t\t0x1188e,0x17b9c,0x1398e,0x17b8e,0x1085e,0x118de,0x139de,0x17bde,0x17940,0x1bcb0, // 560\n\t\t\t0x1de5c,0x17920,0x1bc98,0x1de4e,0x17910,0x1bc8c,0x17908,0x1bc86,0x17904,0x17902, // 570\n\t\t\t0x138b0,0x19c5c,0x179b0,0x13898,0x19c4e,0x17998,0x1bcce,0x1798c,0x13886,0x17986, // 580\n\t\t\t0x1185c,0x138dc,0x1184e,0x179dc,0x138ce,0x179ce,0x178a0,0x1bc58,0x1de2e,0x17890, // 590\n\t\t\t0x1bc4c,0x17888,0x1bc46,0x17884,0x17882,0x13858,0x19c2e,0x178d8,0x1384c,0x178cc, // 600\n\t\t\t0x13846,0x178c6,0x1182e,0x1386e,0x178ee,0x17850,0x1bc2c,0x17848,0x1bc26,0x17844, // 610\n\t\t\t0x17842,0x1382c,0x1786c,0x13826,0x17866,0x17828,0x1bc16,0x17824,0x17822,0x13816, // 620\n\t\t\t0x17836,0x10578,0x182be,0x1053c,0x1051e,0x105be,0x10d70,0x186bc,0x10d38,0x1869e, // 630\n\t\t\t0x10d1c,0x10d0e,0x104bc,0x10dbc,0x1049e,0x10d9e,0x11d60,0x18eb8,0x1c75e,0x11d30, // 640\n\t\t\t0x18e9c,0x11d18,0x18e8e,0x11d0c,0x11d06,0x10cb8,0x1865e,0x11db8,0x10c9c,0x11d9c, // 650\n\t\t\t0x10c8e,0x11d8e,0x1045e,0x10cde,0x11dde,0x13d40,0x19eb0,0x1cf5c,0x13d20,0x19e98, // 660\n\t\t\t0x1cf4e,0x13d10,0x19e8c,0x13d08,0x19e86,0x13d04,0x13d02,0x11cb0,0x18e5c,0x13db0, // 670\n\t\t\t0x11c98,0x18e4e,0x13d98,0x19ece,0x13d8c,0x11c86,0x13d86,0x10c5c,0x11cdc,0x10c4e, // 680\n\t\t\t0x13ddc,0x11cce,0x13dce,0x1bea0,0x1df58,0x1efae,0x1be90,0x1df4c,0x1be88,0x1df46, // 690\n\t\t\t0x1be84,0x1be82,0x13ca0,0x19e58,0x1cf2e,0x17da0,0x13c90,0x19e4c,0x17d90,0x1becc, // 700\n\t\t\t0x19e46,0x17d88,0x13c84,0x17d84,0x13c82,0x17d82,0x11c58,0x18e2e,0x13cd8,0x11c4c, // 710\n\t\t\t0x17dd8,0x13ccc,0x11c46,0x17dcc,0x13cc6,0x17dc6,0x10c2e,0x11c6e,0x13cee,0x17dee, // 720\n\t\t\t0x1be50,0x1df2c,0x1be48,0x1df26,0x1be44,0x1be42,0x13c50,0x19e2c,0x17cd0,0x13c48, // 730\n\t\t\t0x19e26,0x17cc8,0x1be66,0x17cc4,0x13c42,0x17cc2,0x11c2c,0x13c6c,0x11c26,0x17cec, // 740\n\t\t\t0x13c66,0x17ce6,0x1be28,0x1df16,0x1be24,0x1be22,0x13c28,0x19e16,0x17c68,0x13c24, // 750\n\t\t\t0x17c64,0x13c22,0x17c62,0x11c16,0x13c36,0x17c76,0x1be14,0x1be12,0x13c14,0x17c34, // 760\n\t\t\t0x13c12,0x17c32,0x102bc,0x1029e,0x106b8,0x1835e,0x1069c,0x1068e,0x1025e,0x106de, // 770\n\t\t\t0x10eb0,0x1875c,0x10e98,0x1874e,0x10e8c,0x10e86,0x1065c,0x10edc,0x1064e,0x10ece, // 780\n\t\t\t0x11ea0,0x18f58,0x1c7ae,0x11e90,0x18f4c,0x11e88,0x18f46,0x11e84,0x11e82,0x10e58, // 790\n\t\t\t0x1872e,0x11ed8,0x18f6e,0x11ecc,0x10e46,0x11ec6,0x1062e,0x10e6e,0x11eee,0x19f50, // 800\n\t\t\t0x1cfac,0x19f48,0x1cfa6,0x19f44,0x19f42,0x11e50,0x18f2c,0x13ed0,0x19f6c,0x18f26, // 810\n\t\t\t0x13ec8,0x11e44,0x13ec4,0x11e42,0x13ec2,0x10e2c,0x11e6c,0x10e26,0x13eec,0x11e66, // 820\n\t\t\t0x13ee6,0x1dfa8,0x1efd6,0x1dfa4,0x1dfa2,0x19f28,0x1cf96,0x1bf68,0x19f24,0x1bf64, // 830\n\t\t\t0x19f22,0x1bf62,0x11e28,0x18f16,0x13e68,0x11e24,0x17ee8,0x13e64,0x11e22,0x17ee4, // 840\n\t\t\t0x13e62,0x17ee2,0x10e16,0x11e36,0x13e76,0x17ef6,0x1df94,0x1df92,0x19f14,0x1bf34, // 850\n\t\t\t0x19f12,0x1bf32,0x11e14,0x13e34,0x11e12,0x17e74,0x13e32,0x17e72,0x1df8a,0x19f0a, // 860\n\t\t\t0x1bf1a,0x11e0a,0x13e1a,0x17e3a,0x1035c,0x1034e,0x10758,0x183ae,0x1074c,0x10746, // 870\n\t\t\t0x1032e,0x1076e,0x10f50,0x187ac,0x10f48,0x187a6,0x10f44,0x10f42,0x1072c,0x10f6c, // 880\n\t\t\t0x10726,0x10f66,0x18fa8,0x1c7d6,0x18fa4,0x18fa2,0x10f28,0x18796,0x11f68,0x18fb6, // 890\n\t\t\t0x11f64,0x10f22,0x11f62,0x10716,0x10f36,0x11f76,0x1cfd4,0x1cfd2,0x18f94,0x19fb4, // 900\n\t\t\t0x18f92,0x19fb2,0x10f14,0x11f34,0x10f12,0x13f74,0x11f32,0x13f72,0x1cfca,0x18f8a, // 910\n\t\t\t0x19f9a,0x10f0a,0x11f1a,0x13f3a,0x103ac,0x103a6,0x107a8,0x183d6,0x107a4,0x107a2, // 920\n\t\t\t0x10396,0x107b6,0x187d4,0x187d2,0x10794,0x10fb4,0x10792,0x10fb2,0x1c7ea]         // 929\t\n\t],\n\n\t/**\n\t * Array of factors of the Reed-Solomon polynomial equations used for error correction; one sub array for each correction level (0-8).\n\t * @protected\n\t */\n\trsfactors: [\n\t\t[ // ECL 0 (2 factors) -------------------------------------------------------------------------------\n\t\t\t0x01b,0x395],                                                                                    //   2\n\t\t[ // ECL 1 (4 factors) -------------------------------------------------------------------------------\n\t\t\t0x20a,0x238,0x2d3,0x329],                                                                        //   4\n\t\t[ // ECL 2 (8 factors) -------------------------------------------------------------------------------\n\t\t\t0x0ed,0x134,0x1b4,0x11c,0x286,0x28d,0x1ac,0x17b],                                                //   8\n\t\t[ // ECL 3 (16 factors) ------------------------------------------------------------------------------\n\t\t\t0x112,0x232,0x0e8,0x2f3,0x257,0x20c,0x321,0x084,0x127,0x074,0x1ba,0x1ac,0x127,0x02a,0x0b0,0x041],//  16\n\t\t[ // ECL 4 (32 factors) ------------------------------------------------------------------------------\n\t\t\t0x169,0x23f,0x39a,0x20d,0x0b0,0x24a,0x280,0x141,0x218,0x2e6,0x2a5,0x2e6,0x2af,0x11c,0x0c1,0x205, //  16\n\t\t\t0x111,0x1ee,0x107,0x093,0x251,0x320,0x23b,0x140,0x323,0x085,0x0e7,0x186,0x2ad,0x14a,0x03f,0x19a],//  32\n\t\t[ // ECL 5 (64 factors) ------------------------------------------------------------------------------\n\t\t\t0x21b,0x1a6,0x006,0x05d,0x35e,0x303,0x1c5,0x06a,0x262,0x11f,0x06b,0x1f9,0x2dd,0x36d,0x17d,0x264, //  16\n\t\t\t0x2d3,0x1dc,0x1ce,0x0ac,0x1ae,0x261,0x35a,0x336,0x21f,0x178,0x1ff,0x190,0x2a0,0x2fa,0x11b,0x0b8, //  32\n\t\t\t0x1b8,0x023,0x207,0x01f,0x1cc,0x252,0x0e1,0x217,0x205,0x160,0x25d,0x09e,0x28b,0x0c9,0x1e8,0x1f6, //  48\n\t\t\t0x288,0x2dd,0x2cd,0x053,0x194,0x061,0x118,0x303,0x348,0x275,0x004,0x17d,0x34b,0x26f,0x108,0x21f],//  64\n\t\t[ // ECL 6 (128 factors) -----------------------------------------------------------------------------\n\t\t\t0x209,0x136,0x360,0x223,0x35a,0x244,0x128,0x17b,0x035,0x30b,0x381,0x1bc,0x190,0x39d,0x2ed,0x19f, //  16\n\t\t\t0x336,0x05d,0x0d9,0x0d0,0x3a0,0x0f4,0x247,0x26c,0x0f6,0x094,0x1bf,0x277,0x124,0x38c,0x1ea,0x2c0, //  32\n\t\t\t0x204,0x102,0x1c9,0x38b,0x252,0x2d3,0x2a2,0x124,0x110,0x060,0x2ac,0x1b0,0x2ae,0x25e,0x35c,0x239, //  48\n\t\t\t0x0c1,0x0db,0x081,0x0ba,0x0ec,0x11f,0x0c0,0x307,0x116,0x0ad,0x028,0x17b,0x2c8,0x1cf,0x286,0x308, //  64\n\t\t\t0x0ab,0x1eb,0x129,0x2fb,0x09c,0x2dc,0x05f,0x10e,0x1bf,0x05a,0x1fb,0x030,0x0e4,0x335,0x328,0x382, //  80\n\t\t\t0x310,0x297,0x273,0x17a,0x17e,0x106,0x17c,0x25a,0x2f2,0x150,0x059,0x266,0x057,0x1b0,0x29e,0x268, //  96\n\t\t\t0x09d,0x176,0x0f2,0x2d6,0x258,0x10d,0x177,0x382,0x34d,0x1c6,0x162,0x082,0x32e,0x24b,0x324,0x022, // 112\n\t\t\t0x0d3,0x14a,0x21b,0x129,0x33b,0x361,0x025,0x205,0x342,0x13b,0x226,0x056,0x321,0x004,0x06c,0x21b],// 128\n\t\t[ // ECL 7 (256 factors) -----------------------------------------------------------------------------\n\t\t\t0x20c,0x37e,0x04b,0x2fe,0x372,0x359,0x04a,0x0cc,0x052,0x24a,0x2c4,0x0fa,0x389,0x312,0x08a,0x2d0, //  16\n\t\t\t0x35a,0x0c2,0x137,0x391,0x113,0x0be,0x177,0x352,0x1b6,0x2dd,0x0c2,0x118,0x0c9,0x118,0x33c,0x2f5, //  32\n\t\t\t0x2c6,0x32e,0x397,0x059,0x044,0x239,0x00b,0x0cc,0x31c,0x25d,0x21c,0x391,0x321,0x2bc,0x31f,0x089, //  48\n\t\t\t0x1b7,0x1a2,0x250,0x29c,0x161,0x35b,0x172,0x2b6,0x145,0x0f0,0x0d8,0x101,0x11c,0x225,0x0d1,0x374, //  64\n\t\t\t0x13b,0x046,0x149,0x319,0x1ea,0x112,0x36d,0x0a2,0x2ed,0x32c,0x2ac,0x1cd,0x14e,0x178,0x351,0x209, //  80\n\t\t\t0x133,0x123,0x323,0x2c8,0x013,0x166,0x18f,0x38c,0x067,0x1ff,0x033,0x008,0x205,0x0e1,0x121,0x1d6, //  96\n\t\t\t0x27d,0x2db,0x042,0x0ff,0x395,0x10d,0x1cf,0x33e,0x2da,0x1b1,0x350,0x249,0x088,0x21a,0x38a,0x05a, // 112\n\t\t\t0x002,0x122,0x2e7,0x0c7,0x28f,0x387,0x149,0x031,0x322,0x244,0x163,0x24c,0x0bc,0x1ce,0x00a,0x086, // 128\n\t\t\t0x274,0x140,0x1df,0x082,0x2e3,0x047,0x107,0x13e,0x176,0x259,0x0c0,0x25d,0x08e,0x2a1,0x2af,0x0ea, // 144\n\t\t\t0x2d2,0x180,0x0b1,0x2f0,0x25f,0x280,0x1c7,0x0c1,0x2b1,0x2c3,0x325,0x281,0x030,0x03c,0x2dc,0x26d, // 160\n\t\t\t0x37f,0x220,0x105,0x354,0x28f,0x135,0x2b9,0x2f3,0x2f4,0x03c,0x0e7,0x305,0x1b2,0x1a5,0x2d6,0x210, // 176\n\t\t\t0x1f7,0x076,0x031,0x31b,0x020,0x090,0x1f4,0x0ee,0x344,0x18a,0x118,0x236,0x13f,0x009,0x287,0x226, // 192\n\t\t\t0x049,0x392,0x156,0x07e,0x020,0x2a9,0x14b,0x318,0x26c,0x03c,0x261,0x1b9,0x0b4,0x317,0x37d,0x2f2, // 208\n\t\t\t0x25d,0x17f,0x0e4,0x2ed,0x2f8,0x0d5,0x036,0x129,0x086,0x036,0x342,0x12b,0x39a,0x0bf,0x38e,0x214, // 224\n\t\t\t0x261,0x33d,0x0bd,0x014,0x0a7,0x01d,0x368,0x1c1,0x053,0x192,0x029,0x290,0x1f9,0x243,0x1e1,0x0ad, // 240\n\t\t\t0x194,0x0fb,0x2b0,0x05f,0x1f1,0x22b,0x282,0x21f,0x133,0x09f,0x39c,0x22e,0x288,0x037,0x1f1,0x00a],// 256\n\t\t[ // ECL 8 (512 factors) -----------------------------------------------------------------------------\n\t\t\t0x160,0x04d,0x175,0x1f8,0x023,0x257,0x1ac,0x0cf,0x199,0x23e,0x076,0x1f2,0x11d,0x17c,0x15e,0x1ec, //  16\n\t\t\t0x0c5,0x109,0x398,0x09b,0x392,0x12b,0x0e5,0x283,0x126,0x367,0x132,0x058,0x057,0x0c1,0x160,0x30d, //  32\n\t\t\t0x34e,0x04b,0x147,0x208,0x1b3,0x21f,0x0cb,0x29a,0x0f9,0x15a,0x30d,0x26d,0x280,0x10c,0x31a,0x216, //  48\n\t\t\t0x21b,0x30d,0x198,0x186,0x284,0x066,0x1dc,0x1f3,0x122,0x278,0x221,0x025,0x35a,0x394,0x228,0x029, //  64\n\t\t\t0x21e,0x121,0x07a,0x110,0x17f,0x320,0x1e5,0x062,0x2f0,0x1d8,0x2f9,0x06b,0x310,0x35c,0x292,0x2e5, //  80\n\t\t\t0x122,0x0cc,0x2a9,0x197,0x357,0x055,0x063,0x03e,0x1e2,0x0b4,0x014,0x129,0x1c3,0x251,0x391,0x08e, //  96\n\t\t\t0x328,0x2ac,0x11f,0x218,0x231,0x04c,0x28d,0x383,0x2d9,0x237,0x2e8,0x186,0x201,0x0c0,0x204,0x102, // 112\n\t\t\t0x0f0,0x206,0x31a,0x18b,0x300,0x350,0x033,0x262,0x180,0x0a8,0x0be,0x33a,0x148,0x254,0x312,0x12f, // 128\n\t\t\t0x23a,0x17d,0x19f,0x281,0x09c,0x0ed,0x097,0x1ad,0x213,0x0cf,0x2a4,0x2c6,0x059,0x0a8,0x130,0x192, // 144\n\t\t\t0x028,0x2c4,0x23f,0x0a2,0x360,0x0e5,0x041,0x35d,0x349,0x200,0x0a4,0x1dd,0x0dd,0x05c,0x166,0x311, // 160\n\t\t\t0x120,0x165,0x352,0x344,0x33b,0x2e0,0x2c3,0x05e,0x008,0x1ee,0x072,0x209,0x002,0x1f3,0x353,0x21f, // 176\n\t\t\t0x098,0x2d9,0x303,0x05f,0x0f8,0x169,0x242,0x143,0x358,0x31d,0x121,0x033,0x2ac,0x1d2,0x215,0x334, // 192\n\t\t\t0x29d,0x02d,0x386,0x1c4,0x0a7,0x156,0x0f4,0x0ad,0x023,0x1cf,0x28b,0x033,0x2bb,0x24f,0x1c4,0x242, // 208\n\t\t\t0x025,0x07c,0x12a,0x14c,0x228,0x02b,0x1ab,0x077,0x296,0x309,0x1db,0x352,0x2fc,0x16c,0x242,0x38f, // 224\n\t\t\t0x11b,0x2c7,0x1d8,0x1a4,0x0f5,0x120,0x252,0x18a,0x1ff,0x147,0x24d,0x309,0x2bb,0x2b0,0x02b,0x198, // 240\n\t\t\t0x34a,0x17f,0x2d1,0x209,0x230,0x284,0x2ca,0x22f,0x03e,0x091,0x369,0x297,0x2c9,0x09f,0x2a0,0x2d9, // 256\n\t\t\t0x270,0x03b,0x0c1,0x1a1,0x09e,0x0d1,0x233,0x234,0x157,0x2b5,0x06d,0x260,0x233,0x16d,0x0b5,0x304, // 272\n\t\t\t0x2a5,0x136,0x0f8,0x161,0x2c4,0x19a,0x243,0x366,0x269,0x349,0x278,0x35c,0x121,0x218,0x023,0x309, // 288\n\t\t\t0x26a,0x24a,0x1a8,0x341,0x04d,0x255,0x15a,0x10d,0x2f5,0x278,0x2b7,0x2ef,0x14b,0x0f7,0x0b8,0x02d, // 304\n\t\t\t0x313,0x2a8,0x012,0x042,0x197,0x171,0x036,0x1ec,0x0e4,0x265,0x33e,0x39a,0x1b5,0x207,0x284,0x389, // 320\n\t\t\t0x315,0x1a4,0x131,0x1b9,0x0cf,0x12c,0x37c,0x33b,0x08d,0x219,0x17d,0x296,0x201,0x038,0x0fc,0x155, // 336\n\t\t\t0x0f2,0x31d,0x346,0x345,0x2d0,0x0e0,0x133,0x277,0x03d,0x057,0x230,0x136,0x2f4,0x299,0x18d,0x328, // 352\n\t\t\t0x353,0x135,0x1d9,0x31b,0x17a,0x01f,0x287,0x393,0x1cb,0x326,0x24e,0x2db,0x1a9,0x0d8,0x224,0x0f9, // 368\n\t\t\t0x141,0x371,0x2bb,0x217,0x2a1,0x30e,0x0d2,0x32f,0x389,0x12f,0x34b,0x39a,0x119,0x049,0x1d5,0x317, // 384\n\t\t\t0x294,0x0a2,0x1f2,0x134,0x09b,0x1a6,0x38b,0x331,0x0bb,0x03e,0x010,0x1a9,0x217,0x150,0x11e,0x1b5, // 400\n\t\t\t0x177,0x111,0x262,0x128,0x0b7,0x39b,0x074,0x29b,0x2ef,0x161,0x03e,0x16e,0x2b3,0x17b,0x2af,0x34a, // 416\n\t\t\t0x025,0x165,0x2d0,0x2e6,0x14a,0x005,0x027,0x39b,0x137,0x1a8,0x0f2,0x2ed,0x141,0x036,0x29d,0x13c, // 432\n\t\t\t0x156,0x12b,0x216,0x069,0x29b,0x1e8,0x280,0x2a0,0x240,0x21c,0x13c,0x1e6,0x2d1,0x262,0x02e,0x290, // 448\n\t\t\t0x1bf,0x0ab,0x268,0x1d0,0x0be,0x213,0x129,0x141,0x2fa,0x2f0,0x215,0x0af,0x086,0x00e,0x17d,0x1b1, // 464\n\t\t\t0x2cd,0x02d,0x06f,0x014,0x254,0x11c,0x2e0,0x08a,0x286,0x19b,0x36d,0x29d,0x08d,0x397,0x02d,0x30c, // 480\n\t\t\t0x197,0x0a4,0x14c,0x383,0x0a5,0x2d6,0x258,0x145,0x1f2,0x28f,0x165,0x2f0,0x300,0x0df,0x351,0x287, // 496\n\t\t\t0x03f,0x136,0x35f,0x0fb,0x16e,0x130,0x11a,0x2e2,0x2a3,0x19a,0x185,0x0f4,0x01f,0x079,0x12f,0x107] // 512\n\t],\t\n\n\t/**\n\t * This is the class constructor.\n\t * Creates a PDF417 object\n\t * @param code (string) code to represent using PDF417\n\t * @param ecl (int) error correction level (0-8); default -1 = automatic correction level\n\t * @param aspectratio (float) the width to height of the symbol (excluding quiet zones)\t \n\t */\n\tinit: function(code, ecl, aspectratio) {\t\t\n\t\tcode = unescape(encodeURIComponent(code)); // covert UTF-8 to ISO-8859-1 \n\t\tecl = ecl || -1;\n\t\taspectratio = aspectratio || 2;\t\t\n\t\tthis.barcode_array = {};\n\t\tif (code === \"\") {\n\t\t\treturn false;\n\t\t}\n\t\t// get the input sequence array\n\t\tsequence = this.getInputSequences(code);\t\t\n\t\tcodewords = []; // array of code-words\n\t\tfor(var i=0;i<sequence.length; i++) {\n\t\t\tvar cw = this.getCompaction(sequence[i][0], sequence[i][1], true);\n\t\t\tcodewords = codewords.concat(cw);\n\t\t}\n\t\tif (codewords[0] == 900) {\n\t\t\t// Text Alpha is the default mode, so remove the first code\n\t\t\tcodewords.shift();\n\t\t}\n\t\t// count number of codewords\n\t\tvar numcw = codewords.length;\n\t\tif (numcw > 925) {\n\t\t\t// reached maximum data codeword capacity\n\t\t\treturn false;\n\t\t}\t\t\n\n\t\t// set error correction level\n\t\tecl = this.getErrorCorrectionLevel(ecl, numcw);\n\t\t// number of codewords for error correction\n\t\tvar errsize = (2 << ecl);\n\t\t// calculate number of columns (number of codewords per row) and rows\n\t\tvar nce = (numcw + errsize + 1);\n\t\tvar cols = Math.round((Math.sqrt(4761 + (68 * aspectratio * this.ROWHEIGHT * nce)) - 69) / 34);\n\t\t// adjust cols\n\t\tif (cols < 1) {\n\t\t\tcols = 1;\n\t\t} else if (cols > 30) {\n\t\t\tcols = 30;\n\t\t}\n\t\tvar rows = Math.ceil(nce / cols);\n\t\tvar size = (cols * rows);\n\t\t// adjust rows\n\t\tif ((rows < 3) || (rows > 90)) {\n\t\t\tif (rows < 3) {\n\t\t\t\trows = 3;\n\t\t\t} else if (rows > 90) {\n\t\t\t\trows = 90;\n\t\t\t}\n\t\t\tcols = Math.ceil(size / rows);\n\t\t\tsize = (cols * rows);\n\t\t}\n\t\tif (size > 928) {\n\t\t\t// set dimensions to get maximum capacity\n\t\t\tif (Math.abs(aspectratio - (17 * 29 / 32)) < Math.abs(aspectratio - (17 * 16 / 58))) {\n\t\t\t\tcols = 29;\n\t\t\t\trows = 32;\n\t\t\t} else {\n\t\t\t\tcols = 16;\n\t\t\t\trows = 58;\n\t\t\t}\n\t\t\tsize = 928;\n\t\t}\n\t\t// calculate padding\n\t\tvar pad = (size - nce);\n\t\tif (pad > 0) {\n\t\t\tif ((size - rows) == nce) {\n\t\t\t\t--rows;\n\t\t\t\tsize -= rows;\n\t\t\t} else {\n\t\t\t\t// add pading\n\t\t\t\tcodewords = codewords.concat(this._array_fill(0, pad, 900));\n\t\t\t}\n\t\t}\n\n\t\t// Symbol Length Descriptor (number of data codewords including Symbol Length Descriptor and pad codewords)\n\t\tvar sld = size - errsize;\n\t\t// add symbol length description\n\t\tcodewords.unshift(sld);\n\t\t// calculate error correction\n\t\tvar ecw = this.getErrorCorrection(codewords, ecl);\n\t\t// add error correction codewords\n\t\tcodewords = codewords.concat(ecw);\n\t\t// add horizontal quiet zones to start and stop patterns\n\t\tvar pstart = this._str_repeat('0', this.QUIETH) + this.start_pattern;\n\t\tvar pstop = this.stop_pattern + \"\" + this._str_repeat('0', this.QUIETH);\n\t\tthis.barcode_array['num_rows'] = (rows * this.ROWHEIGHT) + (2 * this.QUIETV);\n\t\tthis.barcode_array['num_cols'] = ((cols + 2) * 17) + 35 + (2 * this.QUIETH);\n\t\tthis.barcode_array['bcode'] = [];\n\n\t\tvar empty_row;\n\t\t// build rows for vertical quiet zone\n\t\tif (this.QUIETV > 0) {\n\t\t\tempty_row = this._array_fill(0, this.barcode_array['num_cols'], 0);\n\t\t\tfor (var i = 0; i < this.QUIETV; ++i) {\n\t\t\t\t// add vertical quiet rows\n\t\t\t\tthis.barcode_array['bcode'].push(empty_row);\n\t\t\t}\n\t\t}\n\n\t\tvar L;\n\t\tvar k = 0; // codeword index\n\t\tvar cid = 0; // initial cluster\n\t\t// for each row\n\t\tfor (var r = 0; r < rows; ++r) {\n\t\t\t// row start code\n\t\t\tvar row = pstart;\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + this._intval((rows - 1) / 3));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 1: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + (ecl * 3) + ((rows - 1) % 3));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 2: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + (cols - 1));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// left row indicator\n\t\t\trow += this._sprintf('%17b', this.clusters[cid][L]);\n\t\t\t// for each column\n\t\t\tfor (var c = 0; c < cols; ++c) {\n\t\t\t\trow += this._sprintf('%17b', this.clusters[cid][codewords[k]]);\n\t\t\t\t++k;\n\t\t\t}\n\t\t\tswitch (cid) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + (cols - 1));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 1: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + this._intval((rows - 1) / 3));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 2: {\n\t\t\t\t\tL = ((30 * this._intval(r / 3)) + (ecl * 3) + ((rows - 1) % 3));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// right row indicator\n\t\t\trow += this._sprintf('%17b', this.clusters[cid][L]);\n\t\t\t// row stop code\n\t\t\trow += pstop;\n\t\t\t// convert the string to array\n\t\t\tvar arow = this._preg_split('//', row, -1, 'PREG_SPLIT_NO_EMPTY');\n\t\t\t// duplicate row to get the desired height\n\t\t\tfor (var h = 0; h < this.ROWHEIGHT; ++h) {\n\t\t\t\tthis.barcode_array['bcode'].push(arow);\n\t\t\t}\n\t\t\t++cid;\n\t\t\tif (cid > 2) {\n\t\t\t\tcid = 0;\n\t\t\t}\n\t\t}\n\t\tif (this.QUIETV > 0) {\n\t\t\tfor (var i = 0; i < this.QUIETV; ++i) {\n\t\t\t\t// add vertical quiet rows\n\t\t\t\tthis.barcode_array['bcode'].push(empty_row);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetInputSequences: function(code) {\n\t\tvar sequence_array = []; // array to be returned\n\t\tvar numseq = [];\n\t\t// get numeric sequences\t\t\n\t\tnumseq = code.match(/([0-9]{13,44})/g);\n\t\tif (numseq == null) {\n\t\t\tnumseq = [];\t\t\t\n\t\t} else {\n\t\t\t// add offset to each matched line\n\t\t\tfor (var n = 0, offset = 0; n < numseq.length; n++) {\n        offset = code.indexOf(numseq[n], offset);\n      \tnumseq[n] = [numseq[n], offset];\n        offset += numseq[n][0].length;\n      }\n\t\t}\n\t\tnumseq.push(['', code.length]);\n\t\tvar offset = 0;\n\t\tfor(var i=0; i<numseq.length; i++) {\n\t\t\tvar seq = numseq[i];\t\t\t\n\t\t\tvar seqlen = seq[0].length;\n\t\t\tif (seq[1] > 0) {\n\t\t\t\t// extract text sequence before the number sequence\n\t\t\t\tvar prevseq = code.substr(offset, (seq[1] - offset));\n\t\t\t\tvar textseq = [];\n\t\t\t\t// get text sequences\t\t\t\t\n\t\t\t\ttextseq = prevseq.match(/([\\x09\\x0a\\x0d\\x20-\\x7e]{5,})/g);\n\t\t\t\tif (textseq == null) {\n\t\t\t\t\ttextseq = [];\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t// add offset to each matched line\n\t\t\t\t\tfor (var n=0;n<textseq.length;n++) {\n\t\t\t\t\t\tvar offset = prevseq.indexOf(textseq[n]);\n\t\t\t\t\t\ttextseq[n] = [textseq[n], offset];\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\ttextseq.push(['', prevseq.length]);\n\t\t\t\tvar txtoffset = 0;\n\t\t\t\tfor(var j=0; j<textseq.length; j++) {\n\t\t\t\t\tvar txtseq = textseq[j];\n\t\t\t\t\tvar txtseqlen = txtseq[0].length;\n\t\t\t\t\tif (txtseq[1] > 0) {\n\t\t\t\t\t\t// extract byte sequence before the text sequence\n\t\t\t\t\t\tvar prevtxtseq = prevseq.substr(txtoffset, (txtseq[1] - txtoffset));\n\t\t\t\t\t\tif (prevtxtseq.length > 0) {\n\t\t\t\t\t\t\t// add BYTE sequence\n\t\t\t\t\t\t\tif ((prevtxtseq.length == 1) && (sequence_array.length > 0) && (sequence_array[sequence_array.length - 1][0] == 900)) {\n\t\t\t\t\t\t\t\tsequence_array.push([913, prevtxtseq]);\n\t\t\t\t\t\t\t} else if ((prevtxtseq.length % 6) == 0) {\n\t\t\t\t\t\t\t\tsequence_array.push([924, prevtxtseq]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsequence_array.push([901, prevtxtseq]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (txtseqlen > 0) {\n\t\t\t\t\t\t// add numeric sequence\n\t\t\t\t\t\tsequence_array.push([900, txtseq[0]]);\n\t\t\t\t\t}\n\t\t\t\t\ttxtoffset = txtseq[1] + txtseqlen;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (seqlen > 0) {\n\t\t\t\t// add numeric sequence\n\t\t\t\tsequence_array.push([902, seq[0]]);\n\t\t\t}\n\t\t\toffset = seq[1] + seqlen;\n\t\t}\n\t\treturn sequence_array;\n\t},\n\n\tgetCompaction: function(mode, code, addmode) {\n\t\taddmode = addmode || true;\n\t\tvar cw = []; // array of codewords to return\n\t\tswitch(mode) {\n\t\t\tcase 900: { // Text Compaction mode latch\n\t\t\t\tvar submode = 0; // default Alpha sub-mode\n\t\t\t\tvar txtarr = []; // array of characters and sub-mode switching characters\n\t\t\t\tvar codelen = code.length;\n\t\t\t\tfor (var i = 0; i < codelen; ++i) {\n\t\t\t\t\tvar chval = this._ord(code.charAt(i));\n\t\t\t\t\tvar k;\n\t\t\t\t\tif ((k = this._array_search(chval, this.textsubmodes[submode])) !== false) {\n\t\t\t\t\t\t// we are on the same sub-mode\n\t\t\t\t\t\ttxtarr.push(k);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the sub-mode is changed\n\t\t\t\t\t\tfor (var s = 0; s < 4; ++s) {\n\t\t\t\t\t\t\t// search new sub-mode\n\t\t\t\t\t\t\tif ((s != submode) && ((k = this._array_search(chval, this.textsubmodes[s])) !== false)) {\n\t\t\t\t\t\t\t\t// s is the new submode\n\t\t\t\t\t\t\t\tif ((((i + 1) == codelen) || (((i + 1) < codelen) && (this._array_search(this._ord(code.charAt(i + 1)), this.textsubmodes[submode]) !== false))) && ((s == 3) || ((s == 0) && (submode == 1)))) {\n\t\t\t\t\t\t\t\t\t// shift (temporary change only for this char)\n\t\t\t\t\t\t\t\t\tif (s == 3) {\n\t\t\t\t\t\t\t\t\t\t// shift to puntuaction\n\t\t\t\t\t\t\t\t\t\ttxtarr.push(29);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// shift from lower to alpha\n\t\t\t\t\t\t\t\t\t\ttxtarr.push(27);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// latch\n\t\t\t\t\t\t\t\t\ttxtarr\t= txtarr.concat(this.textlatch[''+submode+s]);\n\t\t\t\t\t\t\t\t\t// set new submode\n\t\t\t\t\t\t\t\t\tsubmode = s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// add characted code to array\n\t\t\t\t\t\t\t\ttxtarr.push(k);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar txtarrlen = txtarr.length;\n\t\t\t\tif ((txtarrlen % 2) != 0) {\n\t\t\t\t\t// add padding\n\t\t\t\t\ttxtarr.push(29);\n\t\t\t\t\t++txtarrlen;\n\t\t\t\t}\n\t\t\t\t// calculate codewords\n\t\t\t\tfor (var i = 0; i < txtarrlen; i += 2) {\n\t\t\t\t\tcw.push((30 * parseInt(txtarr[i])) + parseInt(txtarr[(i + 1)]));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 901:\n\t\t\tcase 924: { // Byte Compaction mode latch\n\t\t\t\tvar rest;\n\t\t\t\tvar sublen;\n\t\t\t\tvar codelen;\n\t\t\t\twhile ((codelen = code.length) > 0) {\t\t\t\t\t\n\t\t\t\t\tif (codelen > 6) {\n\t\t\t\t\t\trest = code.substring(6);\n\t\t\t\t\t\tcode = code.substring(0, 6);\n\t\t\t\t\t\tsublen = 6;\n\t\t\t\t\t} else {\t\t\t\t\t\t\n\t\t\t\t\t\trest = '';\n\t\t\t\t\t\tsublen = code.length;\n\t\t\t\t\t}\n\t\t\t\t\tif (sublen == 6) {\n\t\t\t\t\t\tvar t = bcmul(''+this._ord(code.charAt(0)), '1099511627776');\n\t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(1)), '4294967296'));\n\t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(2)), '16777216'));\n\t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(3)), '65536'));\n\t\t\t\t\t\tt = bcadd(t, bcmul('' + this._ord(code.charAt(4)), '256'));\n\t\t\t\t\t\tt = bcadd(t, '' + this._ord(code.charAt(5)));\n\t\t\t\t\t\t// tmp array for the 6 bytes block\n\t\t\t\t\t\tvar cw6 = [];\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tvar d = this._my_bcmod(t, '900');\n\t\t\t\t\t\t\tt = bcdiv(t, '900');\n\t\t\t\t\t\t\t// prepend the value to the beginning of the array\n\t\t\t\t\t\t\tcw6.unshift(d);\n\t\t\t\t\t\t} while (t != '0');\n\t\t\t\t\t\t// append the result array at the end\n\t\t\t\t\t\tcw = cw.concat(cw6);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var i = 0; i < sublen; ++i) {\n\t\t\t\t\t\t\tcw.push(this._ord(code.charAt(i)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcode = rest;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 902: { // Numeric Compaction mode latch\n\t\t\t\tvar rest;\n\t\t\t\tvar codelen;\n\t\t\t\twhile ((codelen = code.length) > 0) {\n\t\t\t\t\tif (codelen > 44) {\n\t\t\t\t\t\trest = code.substring(44);\n\t\t\t\t\t\tcode = code.substring(0, 44);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trest = '';\n\t\t\t\t\t}\n\t\t\t\t\tvar t = '1' + code;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tvar d = this._my_bcmod(t, '900');\n\t\t\t\t\t\tt = bcdiv(t, '900');\n\t\t\t\t\t\tcw.unshift(d);\n\t\t\t\t\t} while (t != '0');\n\t\t\t\t\tcode = rest;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 913: { // Byte Compaction mode shift\n\t\t\t\tcw.push(this._ord(code));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (addmode) {\n\t\t\t// add the compaction mode codeword at the beginning\n\t\t\tcw.unshift(mode);\n\t\t}\n\t\treturn cw;\n\t},\n\n\tgetErrorCorrectionLevel: function(ecl, numcw) {\n\t\t// get maximum correction level\n\t\tvar maxecl = 8; // starting error level\n\t\tvar maxerrsize = (928 - numcw); // available codewords for error\n\t\twhile (maxecl > 0) {\n\t\t\tvar errsize = (2 << ecl);\n\t\t\tif (maxerrsize >= errsize) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t--maxecl;\n\t\t}\n\t\t// check for automatic levels\n\t\tif ((ecl < 0) || (ecl > 8)) {\n\t\t\tif (numcw < 41) {\n\t\t\t\tecl = 2;\n\t\t\t} else if (numcw < 161) {\n\t\t\t\tecl = 3;\n\t\t\t} else if (numcw < 321) {\n\t\t\t\tecl = 4;\n\t\t\t} else if (numcw < 864) {\n\t\t\t\tecl = 5;\n\t\t\t} else {\n\t\t\t\tecl = maxecl;\n\t\t\t}\n\t\t}\n\t\tif (ecl > maxecl) {\n\t\t\tecl = maxecl;\n\t\t}\n\t\treturn ecl;\n\t},\n\n\tgetErrorCorrection: function(cw, ecl) {\n\t\t// get error correction coefficients\n\t\tvar ecc = this.rsfactors[ecl];\n\t\t// number of error correction factors\n\t\tvar eclsize = (2 << ecl);\n\t\t// maximum index for rsfactors[ecl]\n\t\tvar eclmaxid = (eclsize - 1);\n\t\t// initialize array of error correction codewords\n\t\tvar ecw = this._array_fill(0, eclsize, 0);\n\t\t// for each data codeword\n\t\tfor (var k=0; k<cw.length;k++) {\n\t\t\tvar t1 = (cw[k] + ecw[eclmaxid]) % 929;\n\t\t\tfor (var j = eclmaxid; j > 0; --j) {\n\t\t\t\tvar t2 = (t1 * ecc[j]) % 929;\n\t\t\t\tvar t3 = 929 - t2;\n\t\t\t\tecw[j] = (ecw[(j - 1)] + t3) % 929;\n\t\t\t}\n\t\t\tt2 = (t1 * ecc[0]) % 929;\n\t\t\tt3 = 929 - t2;\n\t\t\tecw[0] = t3 % 929;\n\t\t}\n\t\tfor (var j=0;j<ecw.length;j++) {\n\t\t\tif (ecw[j] != 0) {\n\t\t\t\tecw[j] = 929 - ecw[j];\n\t\t\t}\n\t\t}\t\t\t\t\n\t\tecw = ecw.reverse();\n\t\treturn ecw;\n\t},\n\n\tgetBarcodeArray: function() {\n\t\treturn this.barcode_array;\n\t},\n\n    /**\n     *\n     * Functions from phpjs.org\n     *\n     */\n\t_array_fill: function(start_index, num, mixed_val) {\t\t\n\t\tvar key, tmp_arr = {};\t\n\n\t\tif (start_index == 0) {\n\t\t\tvar tmpArray = [];\n\t\t\tfor (var i=0;i<num;i++) {\n\t\t\t\ttmpArray.push(mixed_val);\n\t\t\t}\n\t\t\treturn tmpArray;\n\t\t}\n\n\t  \tif (!isNaN(start_index) && !isNaN(num)) {\n\t\t    for (key = 0; key < num; key++) {\n\t\t      tmp_arr[(key + start_index)] = mixed_val;\n\t\t    }\n\t  \t}\n\n\t  \treturn tmp_arr;\n\t},\t\n\n\t_str_repeat:function(input, multiplier) {\n\t\t// http://kevin.vanzonneveld.net\n\t\t// +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t// +   improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n\t\t// +   improved by: Ian Carter (http://euona.com/)\n\t\t// *     example 1: str_repeat('-=', 10);\n\t\t// *     returns 1: '-=-=-=-=-=-=-=-=-=-='\n\t\tvar y = '';\n\t\twhile (true) {\n\t\t\tif (multiplier & 1) {\n\t\t\t  y += input;\n\t\t\t}\n\t\t\tmultiplier >>= 1;\n\t\t\tif (multiplier) {\n\t\t\t\tinput += input;\n\t\t\t} else {\n\t\t\t  \tbreak;\n\t\t\t}\n\t\t}\n\t\treturn y;\n\t},\n\n\t_intval:function(mixed_var, base) {\n\t\t// http://kevin.vanzonneveld.net\n\t\t// +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t// +   improved by: stensi\n\t\t// +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t// +   input by: Matteo\n\t\t// +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n\t\t// +   bugfixed by: Rafał Kukawski (http://kukawski.pl)\n\t\t// *     example 1: intval('Kevin van Zonneveld');\n\t\t// *     returns 1: 0\n\t\t// *     example 2: intval(4.2);\n\t\t// *     returns 2: 4\n\t\t// *     example 3: intval(42, 8);\n\t\t// *     returns 3: 42\n\t\t// *     example 4: intval('09');\n\t\t// *     returns 4: 9\n\t\t// *     example 5: intval('1e', 16);\n\t\t// *     returns 5: 30\n\t\tvar tmp;\n\n\t\tvar type = typeof(mixed_var);\n\n\t\tif (type === 'boolean') {\n\t\t\treturn +mixed_var;\n\t\t} else if (type === 'string') {\n\t\t\ttmp = parseInt(mixed_var, base || 10);\n\t\t\treturn (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp;\n\t\t} else if (type === 'number' && isFinite(mixed_var)) {\n\t\t\treturn mixed_var | 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t},\n\n\t_sprintf: function() {\n\t  // http://kevin.vanzonneveld.net\n\t  // +   original by: Ash Searle (http://hexmen.com/blog/)\n\t  // + namespaced by: Michael White (http://getsprink.com)\n\t  // +    tweaked by: Jack\n\t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t  // +      input by: Paulo Freitas\n\t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t  // +      input by: Brett Zamir (http://brett-zamir.me)\n\t  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t  // +   improved by: Dj\n\t  // +   improved by: Allidylls\n\t  // *     example 1: sprintf(\"%01.2f\", 123.1);\n\t  // *     returns 1: 123.10\n\t  // *     example 2: sprintf(\"[%10s]\", 'monkey');\n\t  // *     returns 2: '[    monkey]'\n\t  // *     example 3: sprintf(\"[%'#10s]\", 'monkey');\n\t  // *     returns 3: '[####monkey]'\n\t  // *     example 4: sprintf(\"%d\", 123456789012345);\n\t  // *     returns 4: '123456789012345'\n\t  var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g;\n\t  var a = arguments,\n\t    i = 0,\n\t    format = a[i++];\n\n\t  // pad()\n\t  var pad = function (str, len, chr, leftJustify) {\n\t    if (!chr) {\n\t      chr = ' ';\n\t    }\n\t    var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);\n\t    return leftJustify ? str + padding : padding + str;\n\t  };\n\n\t  // justify()\n\t  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n\t    var diff = minWidth - value.length;\n\t    if (diff > 0) {\n\t      if (leftJustify || !zeroPad) {\n\t        value = pad(value, minWidth, customPadChar, leftJustify);\n\t      } else {\n\t        value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n\t      }\n\t    }\n\t    return value;\n\t  };\n\n\t  // formatBaseX()\n\t  var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n\t    // Note: casts negative numbers to positive ones\n\t    var number = value >>> 0;\n\t    prefix = prefix && number && {\n\t      '2': '0b',\n\t      '8': '0',\n\t      '16': '0x'\n\t    }[base] || '';\n\t    value = prefix + pad(number.toString(base), precision || 0, '0', false);\n\t    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n\t  };\n\n\t  // formatString()\n\t  var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n\t    if (precision != null) {\n\t      value = value.slice(0, precision);\n\t    }\n\t    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);\n\t  };\n\n\t  // doFormat()\n\t  var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n\t    var number;\n\t    var prefix;\n\t    var method;\n\t    var textTransform;\n\t    var value;\n\n\t    if (substring == '%%') {\n\t      return '%';\n\t    }\n\n\t    // parse flags\n\t    var leftJustify = false,\n\t      positivePrefix = '',\n\t      zeroPad = false,\n\t      prefixBaseX = false,\n\t      customPadChar = ' ';\n\t    var flagsl = flags.length;\n\t    for (var j = 0; flags && j < flagsl; j++) {\n\t      switch (flags.charAt(j)) {\n\t      case ' ':\n\t        positivePrefix = ' ';\n\t        break;\n\t      case '+':\n\t        positivePrefix = '+';\n\t        break;\n\t      case '-':\n\t        leftJustify = true;\n\t        break;\n\t      case \"'\":\n\t        customPadChar = flags.charAt(j + 1);\n\t        break;\n\t      case '0':\n\t        zeroPad = true;\n\t        break;\n\t      case '#':\n\t        prefixBaseX = true;\n\t        break;\n\t      }\n\t    }\n\n\t    // parameters may be null, undefined, empty-string or real valued\n\t    // we want to ignore null, undefined and empty-string values\n\t    if (!minWidth) {\n\t      minWidth = 0;\n\t    } else if (minWidth == '*') {\n\t      minWidth = +a[i++];\n\t    } else if (minWidth.charAt(0) == '*') {\n\t      minWidth = +a[minWidth.slice(1, -1)];\n\t    } else {\n\t      minWidth = +minWidth;\n\t    }\n\n\t    // Note: undocumented perl feature:\n\t    if (minWidth < 0) {\n\t      minWidth = -minWidth;\n\t      leftJustify = true;\n\t    }\n\n\t    if (!isFinite(minWidth)) {\n\t      throw new Error('sprintf: (minimum-)width must be finite');\n\t    }\n\n\t    if (!precision) {\n\t      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : undefined;\n\t    } else if (precision == '*') {\n\t      precision = +a[i++];\n\t    } else if (precision.charAt(0) == '*') {\n\t      precision = +a[precision.slice(1, -1)];\n\t    } else {\n\t      precision = +precision;\n\t    }\n\n\t    // grab value using valueIndex if required?\n\t    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n\n\t    switch (type) {\n\t    case 's':\n\t      return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n\t    case 'c':\n\t      return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n\t    case 'b':\n\t      return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\t    case 'o':\n\t      return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\t    case 'x':\n\t      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\t    case 'X':\n\t      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();\n\t    case 'u':\n\t      return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\t    case 'i':\n\t    case 'd':\n\t      number = +value || 0;\n\t      number = Math.round(number - number % 1); // Plain Math.round doesn't just truncate\n\t      prefix = number < 0 ? '-' : positivePrefix;\n\t      value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n\t      return justify(value, prefix, leftJustify, minWidth, zeroPad);\n\t    case 'e':\n\t    case 'E':\n\t    case 'f': // Should handle locales (as per setlocale)\n\t    case 'F':\n\t    case 'g':\n\t    case 'G':\n\t      number = +value;\n\t      prefix = number < 0 ? '-' : positivePrefix;\n\t      method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n\t      textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n\t      value = prefix + Math.abs(number)[method](precision);\n\t      return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n\t    default:\n\t      return substring;\n\t    }\n\t  };\n\n\t  return format.replace(regex, doFormat);\n\t},\n\n\t_preg_split: function(pattern, subject, limit, flags) {\n\t    // http://kevin.vanzonneveld.net\n\t    // + original by: Marco Marchiò\n\t    // * example 1: preg_split(/[\\s,]+/, 'hypertext language, programming');\n\t    // * returns 1: ['hypertext', 'language', 'programming']\n\t    // * example 2: preg_split('//', 'string', -1, 'PREG_SPLIT_NO_EMPTY');\n\t    // * returns 2: ['s', 't', 'r', 'i', 'n', 'g']\n\t    // * example 3: var str = 'hypertext language programming';\n\t    // * example 3: preg_split('/ /', str, -1, 'PREG_SPLIT_OFFSET_CAPTURE');\n\t    // * returns 3: [['hypertext', 0], ['language', 10], ['programming', 19]]\n\t    // * example 4: preg_split('/( )/', '1 2 3 4 5 6 7 8', 4, 'PREG_SPLIT_DELIM_CAPTURE');\n\t    // * returns 4: ['1', ' ', '2', ' ', '3', ' ', '4 5 6 7 8']\n\t    // * example 5: preg_split('/( )/', '1 2 3 4 5 6 7 8', 4, (2 | 4));\n\t    // * returns 5: [['1', 0], [' ', 1], ['2', 2], [' ', 3], ['3', 4], [' ', 5], ['4 5 6 7 8', 6]]\n\n\t    limit = limit || 0; flags = flags || ''; // Limit and flags are optional\n\n\t    var result, ret=[], index=0, i = 0,\n\t        noEmpty = false, delim = false, offset = false,\n\t        OPTS = {}, optTemp = 0,\n\t        regexpBody = /^\\/(.*)\\/\\w*$/.exec(pattern.toString())[1],\n\t        regexpFlags = /^\\/.*\\/(\\w*)$/.exec(pattern.toString())[1];\n\t        // Non-global regexp causes an infinite loop when executing the while,\n\t        // so if it's not global, copy the regexp and add the \"g\" modifier.\n\t        pattern = pattern.global && typeof pattern !== 'string' ? pattern :\n\t            new RegExp(regexpBody, regexpFlags+(regexpFlags.indexOf('g') !==-1 ? '' :'g'));\n\n\t    OPTS = {\n\t        'PREG_SPLIT_NO_EMPTY': 1,\n\t        'PREG_SPLIT_DELIM_CAPTURE': 2,\n\t        'PREG_SPLIT_OFFSET_CAPTURE': 4\n\t    };\n\t    if (typeof flags !== 'number') { // Allow for a single string or an array of string flags\n\t        flags = [].concat(flags);\n\t        for (i=0; i < flags.length; i++) {\n\t            // Resolve string input to bitwise e.g. 'PREG_SPLIT_OFFSET_CAPTURE' becomes 4\n\t            if (OPTS[flags[i]]) {\n\t                optTemp = optTemp | OPTS[flags[i]];\n\t            }\n\t        }\n\t        flags = optTemp;\n\t    }\n\t    noEmpty = flags & OPTS.PREG_SPLIT_NO_EMPTY;\n\t    delim = flags & OPTS.PREG_SPLIT_DELIM_CAPTURE;\n\t    offset = flags & OPTS.PREG_SPLIT_OFFSET_CAPTURE;\n\n\t    var _filter = function(str, strindex) {\n\t        // If the match is empty and the PREG_SPLIT_NO_EMPTY flag is set don't add it\n\t        if (noEmpty && !str.length) {return;}\n\t        // If the PREG_SPLIT_OFFSET_CAPTURE flag is set\n\t        // transform the match into an array and add the index at position 1\n\t        if (offset) {str = [str, strindex];}\n\t        ret.push(str);\n\t    };\n\t    // Special case for empty regexp\n\t    if (!regexpBody){\n\t        result=subject.split('');\n\t        for (i=0; i < result.length; i++) {\n\t            _filter(result[i], i);\n\t        }\n\t        return ret;\n\t    }\n\t    // Exec the pattern and get the result\n\t    while (result = pattern.exec(subject)) {\n\t        // Stop if the limit is 1\n\t        if (limit === 1) {break;}\n\t        // Take the correct portion of the string and filter the match\n\t        _filter(subject.slice(index, result.index), index);\n\t        index = result.index+result[0].length;\n\t        // If the PREG_SPLIT_DELIM_CAPTURE flag is set, every capture match must be included in the results array\n\t        if (delim) {\n\t            // Convert the regexp result into a normal array\n\t            var resarr = Array.prototype.slice.call(result);\n\t            for (i = 1; i < resarr.length; i++) {\n\t                if (result[i] !== undefined) {\n\t                    _filter(result[i], result.index+result[0].indexOf(result[i]));\n\t                }\n\t            }\n\t        }\n\t        limit--;\n\t    }\n\t    // Filter last match\n\t    _filter(subject.slice(index, subject.length), index);\n\t    return ret;\n\t},\n\n\n\t_ord: function(string) {\t  \n\t  return string.charCodeAt(0);\n\t},\n\n\t_array_search: function(needle, haystack, argStrict) {\n\t  // http://kevin.vanzonneveld.net\n\t  // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t  // +      input by: Brett Zamir (http://brett-zamir.me)\n\t  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t  // *     example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'});\n\t  // *     returns 1: 'surname'\n\t  // *     example 2: ini_set('phpjs.return_phpjs_arrays', 'on');\n\t  // *     example 2: var ordered_arr = array({3:'value'}, {2:'value'}, {'a':'value'}, {'b':'value'});\n\t  // *     example 2: var key = array_search(/val/g, ordered_arr); // or var key = ordered_arr.search(/val/g);\n\t  // *     returns 2: '3'\n\n\t  var strict = !!argStrict,\n\t    key = '';\n\n\t  if (haystack && typeof haystack === 'object' && haystack.change_key_case) { // Duck-type check for our own array()-created PHPJS_Array\n\t    return haystack.search(needle, argStrict);\n\t  }\n\t  if (typeof needle === 'object' && needle.exec) { // Duck-type for RegExp\n\t    if (!strict) { // Let's consider case sensitive searches as strict\n\t      var flags = 'i' + (needle.global ? 'g' : '') +\n\t            (needle.multiline ? 'm' : '') +\n\t            (needle.sticky ? 'y' : ''); // sticky is FF only\n\t      needle = new RegExp(needle.source, flags);\n\t    }\n\t    for (key in haystack) {\n\t      if (needle.test(haystack[key])) {\n\t        return key;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\n\t  for (key in haystack) {\n\t    if ((strict && haystack[key] === needle) || (!strict && haystack[key] == needle)) {\n\t      return key;\n\t    }\n\t  }\n\n  \t  return false;\n\t},\n\n\t_my_bcmod: function(x, y) {\n\t    // how many numbers to take at once? carefull not to exceed (int)\n\t    var take = 5;    \n\t    var mod = '';\n\t    do {\n\t        var a = parseInt(mod + '' + x.substring(0, take));\n\t        x = x.substring(take);\n\t        mod = a % y;   \n\t    }\n\t    while ( x.length );\n\n\t    return parseInt(mod); \n\t}\n\n};","/**\n * BarcodeGenerator - 2D Barcode generator for Croatian payment(LGPLv3)\n * version: 0.502\n */\nBarcodePayment = new function() {\n\tvar _me = this;\n\t\n\t// Constants\n\tvar _allowedSingleByteCharacters = [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \" \", \",\", \".\", \":\", \"-\", \"+\", \"?\", \"'\", \"/\", \"(\", \")\" ];\n\tvar _allowedTwoByteCharacters = [ \"Š\", \"Đ\", \"Č\", \"Ć\", \"Ž\", \"š\", \"đ\", \"č\", \"ć\", \"ž\" ];\n\tvar _allowedCharacters = jQuery.merge(jQuery.merge([], _allowedSingleByteCharacters), _allowedTwoByteCharacters);\n\t\n\tvar _priceFieldLength = 15;\n\tvar _pricePattern = \"^[0-9]+,[0-9]{2}$\";\n\t\n\tvar _delimiter = String.fromCharCode(0x0A);\n\tvar _header = \"HRVHUB30\";\n\tvar _currency = \"HRK\"\n\tvar _paymentModelPrefix = \"HR\";\n\t\n\t// Private variables\n\tvar _settings;\n\t\n\tthis.Defaults = {\n\t\tValidateIBAN: false, // TODO: Implement IBAN validation\n\t\tValidateModelPozivNaBroj: false // TODO: Implement callout number validation\n\t}\n\t\n\t// Public functions\n\tthis.GetLength = function(str) {\n\t\tvar len = 0;\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(str)) {\n\t\t\tfor (var i = 0; i < str.length; ++i) {\n\t\t\t\tvar c = str[i];\n\t\t\t\t\n\t\t\t\tif (jQuery.inArray(c, _allowedTwoByteCharacters) > -1) {\n\t\t\t\t\tlen += 2;\n\t\t\t\t} else if (jQuery.inArray(c, _allowedSingleByteCharacters) > -1) {\n\t\t\t\t\tlen += 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn len;\n\t}\n\t\n\tthis.IsIBANValid = function(iban) {\n\t\t// TODO: Implement IBAN validation\n\t\treturn true;\n\t}\n\t\n\tthis.IsPaymentModelValid = function(paymentModel) {\n\t\tvar isValid = false;\n\t\t\n\t\t$.each(BarcodePayment.PaymentModels, function() { \n\t\t\tif (this.model == paymentModel) {\n\t\t\t\tisValid = true;\n\t\t\t\treturn false; // Break out of each\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn isValid;\n\t}\n\t\n\tthis.IsCalloutNumberValid = function(calloutNumber, paymentModel) {\n\t\tvar isValid = true;\n\t\t\n\t\tif (isValid && _settings.ValidateModelPozivNaBroj) {\n\t\t\t// TODO: Implement callout number validation by model\n\t\t}\n\t\t\n\t\treturn isValid;\n\t}\n\t\n\tthis.IsIntentCodeValid = function(intentCode) {\n\t\tvar isValid = false;\n\t\t\n\t\t$.each(BarcodePayment.IntentCodes, function() { \n\t\t\tif (this.code == intentCode) {\n\t\t\t\tisValid = true;\n\t\t\t\treturn false; // Break out of each\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn isValid;\n\t}\n\t\n\tthis.ValidatePaymentParams = function(paymentParams) {\n\t\tif (!(paymentParams instanceof(BarcodePayment.PaymentParams))) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tvar result = BarcodePayment.ValidationResult.OK;\n\t\tvar fieldLength = -1;\n\n\t\t// Price\n\t\tfieldLength = _me.GetLength(paymentParams.Iznos);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.Price) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PriceMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.Iznos) && (fieldLength == -1 || paymentParams.Iznos.match(_pricePattern) == null)) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PricePatternInvalid;\n\t\t}\n\t\t\n\t\t// Payer name\n\t\tfieldLength = _me.GetLength(paymentParams.ImePlatitelja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.PayerName) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerNameMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.ImePlatitelja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerNameInvalid;\n\t\t}\n\t\t\n\t\t// Payer address\n\t\tfieldLength = _me.GetLength(paymentParams.AdresaPlatitelja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.PayerAddress) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerAddressMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.AdresaPlatitelja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerAddressInvalid;\n\t\t}\n\t\t\n\t\t// Payer HQ\n\t\tfieldLength = _me.GetLength(paymentParams.SjedistePlatitelja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.PayerHQ) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerHQMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.SjedistePlatitelja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PayerHQInvalid;\n\t\t}\n\t\t\n\t\t// Receiver name\n\t\tfieldLength = _me.GetLength(paymentParams.Primatelj);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverName) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverNameMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.Primatelj) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverNameInvalid;\n\t\t}\n\t\t\n\t\t// Receiver address\n\t\tfieldLength = _me.GetLength(paymentParams.AdresaPrimatelja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverAddress) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverAddressMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.AdresaPrimatelja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverAddressInvalid;\n\t\t}\n\t\t\n\t\t// Receiver HQ\n\t\tfieldLength = _me.GetLength(paymentParams.SjedistePrimatelja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.ReceiverHQ) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverHQMaxLengthExceeded;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.SjedistePrimatelja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.ReceiverHQInvalid;\n\t\t}\n\t\t\n\t\t// IBAN\n\t\tfieldLength = _me.GetLength(paymentParams.IBAN);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.IBAN) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IBANMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.IBAN) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IBANInvalid;\n\t\t}\n\t\t\n\t\tif (_settings.ValidateIBAN && !StringNotDefinedOrEmpty(paymentParams.IBAN) && !_me.IsIBANValid(paymentParams.IBAN)) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IBANInvalid;\n\t\t}\n\t\t\n\t\t// Payment model\n\t\tfieldLength = _me.GetLength(paymentParams.ModelPlacanja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.PaymentModel) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.ModelPlacanja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelInvalid;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.ModelPlacanja) && !_me.IsPaymentModelValid(paymentParams.ModelPlacanja)) {\n\t\t\tresult |= BarcodePayment.ValidationResult.PaymentModelInvalid;\n\t\t}\n\t\t\n\t\t// Callout number\n\t\tfieldLength = _me.GetLength(paymentParams.PozivNaBroj);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.CalloutNumber) {\n\t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.PozivNaBroj) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberInvalid;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.PozivNaBroj) && !_me.IsCalloutNumberValid(paymentParams.PozivNaBroj, paymentParams.ModelPlacanja)) {\n\t\t\tresult |= BarcodePayment.ValidationResult.CalloutNumberInvalid;\n\t\t}\n\t\t\n\t\t// Intent code\n\t\tfieldLength = _me.GetLength(paymentParams.SifraNamjene);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.IntentCode) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.SifraNamjene) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeInvalid;\n\t\t}\n\t\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.SifraNamjene) && !_me.IsIntentCodeValid(paymentParams.SifraNamjene)) {\n\t\t\tresult |= BarcodePayment.ValidationResult.IntentCodeInvalid;\n\t\t}\n\t\t\n\t\t// Description\n\t\tfieldLength = _me.GetLength(paymentParams.OpisPlacanja);\n\t\tif (fieldLength > BarcodePayment.MaxLengths.Description) {\n\t\t\tresult |= BarcodePayment.ValidationResult.DescriptionMaxLengthExceeded;\n\t\t}\n\t\n\t\tif (!StringNotDefinedOrEmpty(paymentParams.OpisPlacanja) && fieldLength == -1) {\n\t\t\tresult |= BarcodePayment.ValidationResult.DescriptionInvalid;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\tthis.GetEncodedText = function(paymentParams) {\n\t\tif (!(paymentParams instanceof(BarcodePayment.PaymentParams))) {\n\t\t\treturn BarcodePayment.ResultCode.InvalidObject;\n\t\t}\n\t\t\n\t\tif (BarcodePayment.ValidatePaymentParams(paymentParams) != BarcodePayment.ValidationResult.OK) {\n\t\t\treturn BarcodePayment.ResultCode.InvalidContent;\n\t\t}\n\n\t\treturn ConcatenateStrings(\n\t\t\t_header, _delimiter,\n\t\t\t_currency, _delimiter,\n\t\t\tEncodePrice(paymentParams.Iznos), _delimiter,\n\t\t\tpaymentParams.ImePlatitelja, _delimiter,\n\t\t\tpaymentParams.AdresaPlatitelja, _delimiter,\n\t\t\tpaymentParams.SjedistePlatitelja, _delimiter,\n\t\t\tpaymentParams.Primatelj, _delimiter,\n\t\t\tpaymentParams.AdresaPrimatelja, _delimiter,\n\t\t\tpaymentParams.SjedistePrimatelja, _delimiter,\n\t\t\tpaymentParams.IBAN, _delimiter,\n\t\t\t_paymentModelPrefix, paymentParams.ModelPlacanja, _delimiter,\n\t\t\tpaymentParams.PozivNaBroj, _delimiter,\n\t\t\tpaymentParams.SifraNamjene, _delimiter,\n\t\t\tpaymentParams.OpisPlacanja, _delimiter\n\t\t);\n\t}\n\t\n\t// Private functions\n\tvar PadLeft = function(str, len, pad) {\n\t\twhile (str.length < len) {\n\t\t\tstr = pad + str;\n\t\t}\n\n\t\treturn str;\n\t}\n\t\n\tvar StringNotDefinedOrEmpty = function(str) {\n\t\treturn str == undefined || str == null || str.length == 0;\n\t}\n\t\n\tvar EncodePrice = function(price) {\n\t\tvar fullLength = 15;\n\t\treturn PadLeft(price.replace(',', ''), fullLength, '0');\n\t}\n\t\n\tvar ConcatenateStrings = function() {\n\t\tvar res = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; ++i) {\n\t\t\tif (typeof(arguments[i]) != 'undefined') {\n\t\t\t\tres += arguments[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n\t// Enumerations and helper classes\n\t// Source: PBZ net banking website\n\tthis.IntentCodes = [\n\t\t{ code: \"ADMG\", title: \"Administracija\" },\n\t\t{ code: \"GVEA\", title: \"Austrijski državni zaposlenici, Kategorija A\" },\n\t\t{ code: \"GVEB\", title: \"Austrijski državni zaposlenici, Kategorija B\" },\n\t\t{ code: \"GVEC\", title: \"Austrijski državni zaposlenici, Kategorija C\" },\n\t\t{ code: \"GVED\", title: \"Austrijski državni zaposlenici, Kategorija D\" },\n\t\t{ code: \"BUSB\", title: \"Autobusni\" },\n\t\t{ code: \"CPYR\", title: \"Autorsko pravo\" },\n\t\t{ code: \"HSPC\", title: \"Bolnička njega\" },\n\t\t{ code: \"RDTX\", title: \"Cestarina\" },\n\t\t{ code: \"DEPT\", title: \"Depozit\" },\n\t\t{ code: \"DERI\", title: \"Derivati (izvedenice)\" },\n\t\t{ code: \"FREX\", title: \"Devizno tržište\" },\n\t\t{ code: \"CGDD\", title: \"Direktno terećenje nastalo kao rezultat kartične transakcije\" },\n\t\t{ code: \"DIVD\", title: \"Dividenda\" },\n\t\t{ code: \"BECH\", title: \"Dječji doplatak\" },\n\t\t{ code: \"CHAR\", title: \"Dobrotvorno plaćanje\" },\n\t\t{ code: \"ETUP\", title: \"Doplata e-novca\" },\n\t\t{ code: \"MTUP\", title: \"Doplata mobilnog uređaja (bon)\" },\n\t\t{ code: \"GOVI\", title: \"Državno osiguranje\" },\n\t\t{ code: \"ENRG\", title: \"Energenti\" },\n\t\t{ code: \"CDCD\", title: \"Gotovinska isplata\" },\n\t\t{ code: \"CSDB\", title: \"Gotovinska isplata\" },\n\t\t{ code: \"TCSC\", title: \"Gradske naknade\" },\n\t\t{ code: \"CDCS\", title: \"Isplata gotovine s naknadom\" },\n\t\t{ code: \"FAND\", title: \"Isplata naknade za elementarne nepogode\" },\n\t\t{ code: \"CSLP\", title: \"Isplata socijalnih zajmova društava  banci\" },\n\t\t{ code: \"RHBS\", title: \"Isplata za vrijeme profesionalne rehabilitacije\" },\n\t\t{ code: \"GWLT\", title: \"Isplata žrtvama rata i invalidima\" },\n\t\t{ code: \"ADCS\", title: \"Isplate za donacije, sponzorstva, savjetodavne, intelektualne i druge usluge\" },\n\t\t{ code: \"PADD\", title: \"Izravno terećenje\" },\n\t\t{ code: \"INTE\", title: \"Kamata\" },\n\t\t{ code: \"CDDP\", title: \"Kartično plaćanje s odgodom\" },\n\t\t{ code: \"CDCB\", title: \"Kartično plaćanje uz gotovinski povrat (Cashback)\" },\n\t\t{ code: \"BOCE\", title: \"Knjiženje konverzije u Back Office-u\" },\n\t\t{ code: \"POPE\", title: \"Knjiženje mjesta kupnje\" },\n\t\t{ code: \"RCKE\", title: \"Knjiženje ponovne prezentacije čeka\" },\n\t\t{ code: \"AREN\", title: \"Knjiženje računa potraživanja\" },\n\t\t{ code: \"COMC\", title: \"Komercijalno plaćanje\" },\n\t\t{ code: \"UBIL\", title: \"Komunalne usluge\" },\n\t\t{ code: \"COMT\", title: \"Konsolidirano plaćanje treće strane za račun potrošača.\" },\n\t\t{ code: \"SEPI\", title: \"Kupnja vrijednosnica (interna)\" },\n\t\t{ code: \"GDDS\", title: \"Kupovina-prodaja roba\" },\n\t\t{ code: \"GSCB\", title: \"Kupovina-prodaja roba i usluga uz gotovinski povrat\" },\n\t\t{ code: \"GDSV\", title: \"Kupovina/prodaja roba i usluga\" },\n\t\t{ code: \"SCVE\", title: \"Kupovina/prodaja usluga\" },\n\t\t{ code: \"HLTC\", title: \"Kućna njega bolesnika\" },\n\t\t{ code: \"CBLK\", title: \"Masovni kliring kartica\" },\n\t\t{ code: \"MDCS\", title: \"Medicinske usluge\" },\n\t\t{ code: \"NWCM\", title: \"Mrežna komunikacija\" },\n\t\t{ code: \"RENT\", title: \"Najam\" },\n\t\t{ code: \"ALLW\", title: \"Naknada\" },\n\t\t{ code: \"SSBE\", title: \"Naknada socijalnog osiguranja\" },\n\t\t{ code: \"LICF\", title: \"Naknada za licencu\" },\n\t\t{ code: \"GFRP\", title: \"Naknada za nezaposlene u toku stečaja\" },\n\t\t{ code: \"BENE\", title: \"Naknada za nezaposlenost/invaliditet\" },\n\t\t{ code: \"CFEE\", title: \"Naknada za poništenje\" },\n\t\t{ code: \"AEMP\", title: \"Naknada za zapošljavanje\" },\n\t\t{ code: \"COLL\", title: \"Naplata\" },\n\t\t{ code: \"FCOL\", title: \"Naplata naknade po kartičnoj transakciji\" },\n\t\t{ code: \"DBTC\", title: \"Naplata putem terećenja\" },\n\t\t{ code: \"NOWS\", title: \"Nenavedeno\" },\n\t\t{ code: \"IDCP\", title: \"Neopozivo plaćanje sa računa debitne kartice\" },\n\t\t{ code: \"ICCP\", title: \"Neopozivo plaćanje sa računa kreditne kartice\" },\n\t\t{ code: \"BONU\", title: \"Novčana nagrada (bonus).\" },\n\t\t{ code: \"PAYR\", title: \"Obračun plaća\" },\n\t\t{ code: \"BLDM\", title: \"Održavanje zgrada\" },\n\t\t{ code: \"HEDG\", title: \"Omeđivanje rizika (Hedging)\" },\n\t\t{ code: \"CDOC\", title: \"Originalno odobrenje\" },\n\t\t{ code: \"PPTI\", title: \"Osiguranje imovine\" },\n\t\t{ code: \"LBRI\", title: \"Osiguranje iz rada\" },\n\t\t{ code: \"OTHR\", title: \"Ostalo\" },\n\t\t{ code: \"CLPR\", title: \"Otplata glavnice kredita za automobil\" },\n\t\t{ code: \"HLRP\", title: \"Otplata stambenog kredita\" },\n\t\t{ code: \"LOAR\", title: \"Otplata zajma\" },\n\t\t{ code: \"ALMY\", title: \"Plaćanje alimentacije\" },\n\t\t{ code: \"RCPT\", title: \"Plaćanje blagajničke potvrde. (ReceiptPayment)\" },\n\t\t{ code: \"PRCP\", title: \"Plaćanje cijene\" },\n\t\t{ code: \"SUPP\", title: \"Plaćanje dobavljača\" },\n\t\t{ code: \"CFDI\", title: \"Plaćanje dospjele glavnice\" },\n\t\t{ code: \"GOVT\", title: \"Plaćanje države\" },\n\t\t{ code: \"PENS\", title: \"Plaćanje mirovine\" },\n\t\t{ code: \"DCRD\", title: \"Plaćanje na račun debitne kartice.\" },\n\t\t{ code: \"CCRD\", title: \"Plaćanje na račun kreditne kartice\" },\n\t\t{ code: \"SALA\", title: \"Plaćanje plaće\" },\n\t\t{ code: \"REBT\", title: \"Plaćanje popusta/rabata\" },\n\t\t{ code: \"TAXS\", title: \"Plaćanje poreza\" },\n\t\t{ code: \"VATX\", title: \"Plaćanje poreza na dodatnu vrijednost\" },\n\t\t{ code: \"RINP\", title: \"Plaćanje rata koje se ponavljaju\" },\n\t\t{ code: \"IHRP\", title: \"Plaćanje rate pri kupnji na otplatu\" },\n\t\t{ code: \"IVPT\", title: \"Plaćanje računa\" },\n\t\t{ code: \"CDBL\", title: \"Plaćanje računa za kreditnu karticu\" },\n\t\t{ code: \"TREA\", title: \"Plaćanje riznice\" },\n\t\t{ code: \"CMDT\", title: \"Plaćanje roba\" },\n\t\t{ code: \"INTC\", title: \"Plaćanje unutar društva\" },\n\t\t{ code: \"INVS\", title: \"Plaćanje za fondove i vrijednosnice\" },\n\t\t{ code: \"PRME\", title: \"Plemeniti metali\" },\n\t\t{ code: \"AGRT\", title: \"Poljoprivredni transfer\" },\n\t\t{ code: \"INTX\", title: \"Porez na dohodak\" },\n\t\t{ code: \"PTXP\", title: \"Porez na imovinu\" },\n\t\t{ code: \"NITX\", title: \"Porez na neto dohodak\" },\n\t\t{ code: \"ESTX\", title: \"Porez na ostavštinu\" },\n\t\t{ code: \"GSTX\", title: \"Porez na robu i usluge\" },\n\t\t{ code: \"HSTX\", title: \"Porez na stambeni prostor\" },\n\t\t{ code: \"FWLV\", title: \"Porez na strane radnike\" },\n\t\t{ code: \"WHLD\", title: \"Porez po odbitku\" },\n\t\t{ code: \"BEXP\", title: \"Poslovni troškovi\" },\n\t\t{ code: \"REFU\", title: \"Povrat\" },\n\t\t{ code: \"TAXR\", title: \"Povrat poreza\" },\n\t\t{ code: \"RIMB\", title: \"Povrat prethodne pogrešne transakcije\" },\n\t\t{ code: \"OFEE\", title: \"Početna naknada (Opening Fee)\" },\n\t\t{ code: \"ADVA\", title: \"Predujam\" },\n\t\t{ code: \"INSU\", title: \"Premija osiguranja\" },\n\t\t{ code: \"INPC\", title: \"Premija osiguranja za vozilo\" },\n\t\t{ code: \"TRPT\", title: \"Prepaid cestarina (ENC)\" },\n\t\t{ code: \"SUBS\", title: \"Pretplata\" },\n\t\t{ code: \"CASH\", title: \"Prijenos gotovine\" },\n\t\t{ code: \"PENO\", title: \"Prisilna naplata\" },\n\t\t{ code: \"COMM\", title: \"Provizija\" },\n\t\t{ code: \"INSM\", title: \"Rata\" },\n\t\t{ code: \"ELEC\", title: \"Račun za električnu energiju\" },\n\t\t{ code: \"CBTV\", title: \"Račun za kabelsku TV\" },\n\t\t{ code: \"OTLC\", title: \"Račun za ostale telekom usluge\" },\n\t\t{ code: \"GASB\", title: \"Račun za plin\" },\n\t\t{ code: \"WTER\", title: \"Račun za vodu\" },\n\t\t{ code: \"ANNI\", title: \"Renta\" },\n\t\t{ code: \"BBSC\", title: \"Rodiljna naknada\" },\n\t\t{ code: \"NETT\", title: \"Saldiranje (netiranje)\" },\n\t\t{ code: \"CAFI\", title: \"Skrbničke naknade (interne)\" },\n\t\t{ code: \"STDY\", title: \"Studiranje\" },\n\t\t{ code: \"ROYA\", title: \"Tantijeme\" },\n\t\t{ code: \"PHON\", title: \"Telefonski račun\" },\n\t\t{ code: \"FERB\", title: \"Trajektni\" },\n\t\t{ code: \"DMEQ\", title: \"Trajna medicinska pomagala\" },\n\t\t{ code: \"WEBI\", title: \"Transakcija inicirana internetom\" },\n\t\t{ code: \"TELI\", title: \"Transakcija inicirana telefonom\" },\n\t\t{ code: \"HREC\", title: \"Transakcija se odnosi na doprinos poslodavca za troškove stanovanja\" },\n\t\t{ code: \"CBFR\", title: \"Transakcija se odnosi na kapitalnu štednju za mirovinu\" },\n\t\t{ code: \"CBFF\", title: \"Transakcija se odnosi na kapitalnu štednju, općenito\" },\n\t\t{ code: \"TRAD\", title: \"Trgovinske usluge\" },\n\t\t{ code: \"COST\", title: \"Troškovi\" },\n\t\t{ code: \"CPKC\", title: \"Troškovi parkiranja\" },\n\t\t{ code: \"TBIL\", title: \"Troškovi telekomunikacija\" },\n\t\t{ code: \"NWCH\", title: \"Troškovi za mrežu\" },\n\t\t{ code: \"EDUC\", title: \"Troškovi školovanja\" },\n\t\t{ code: \"LIMA\", title: \"Upravljanje likvidnošću\" },\n\t\t{ code: \"ACCT\", title: \"Upravljanje računom\" },\n\t\t{ code: \"ANTS\", title: \"Usluge anestezije\" },\n\t\t{ code: \"VIEW\", title: \"Usluge oftalmološke skrbi\" },\n\t\t{ code: \"LTCF\", title: \"Ustanova dugoročne zdravstvene skrbi\" },\n\t\t{ code: \"ICRF\", title: \"Ustanova socijalne skrbi\" },\n\t\t{ code: \"CVCF\", title: \"Ustanova za usluge skrbi za rekonvalescente\" },\n\t\t{ code: \"PTSP\", title: \"Uvjeti plaćanja\" },\n\t\t{ code: \"MSVC\", title: \"Višestruke vrste usluga\" },\n\t\t{ code: \"SECU\", title: \"Vrijednosni papiri\" },\n\t\t{ code: \"LOAN\", title: \"Zajam\" },\n\t\t{ code: \"FCPM\", title: \"Zakašnjele naknade\" },\n\t\t{ code: \"TRFD\", title: \"Zaklada\" },\n\t\t{ code: \"CDQC\", title: \"Zamjenska gotovina\" },\n\t\t{ code: \"HLTI\", title: \"Zdravstveno osiguranje\" },\n\t\t{ code: \"AIRB\", title: \"Zračni\" },\n\t\t{ code: \"DNTS\", title: \"Zubarske usluge\" },\n\t\t{ code: \"SAVG\", title: \"Štednja\" },\n\t\t{ code: \"RLWY\", title: \"Željeznički\" },\n\t\t{ code: \"LIFI\", title: \"Životno osiguranje\" }\n\t]\n\n\t// TODO: Add validation rules for every payment model\n\t// Source: FINA website - http://www.fina.hr/fgs.axd?id=16090&usg=AFQjCNF8XEhnL9POBo5CccBjCWW9gzBJJg&sig2=b5VcZvu4wgv185jhJR-U_w&cad=rja\n\tthis.PaymentModels = [\n\t\t{ model: \"00\" },\n\t\t{ model: \"01\" },\n\t\t{ model: \"02\" },\n\t\t{ model: \"03\" },\n\t\t{ model: \"04\" },\n\t\t{ model: \"05\" },\n\t\t{ model: \"06\" },\n\t\t{ model: \"07\" },\n\t\t{ model: \"08\" },\n\t\t{ model: \"09\" },\n\t\t{ model: \"10\" },\n\t\t{ model: \"11\" },\n\t\t{ model: \"12\" },\n\t\t{ model: \"13\" },\n\t\t{ model: \"14\" },\n\t\t{ model: \"15\" },\n\t\t{ model: \"16\" },\n\t\t{ model: \"17\" },\n\t\t{ model: \"18\" },\n\t\t{ model: \"23\" },\n\t\t{ model: \"24\" },\n\t\t{ model: \"26\" },\n\t\t{ model: \"27\" },\n\t\t{ model: \"28\" },\n\t\t{ model: \"29\" },\n\t\t{ model: \"30\" },\n\t\t{ model: \"31\" },\n\t\t{ model: \"33\" },\n\t\t{ model: \"34\" },\n\t\t{ model: \"40\" },\n\t\t{ model: \"41\" },\n\t\t{ model: \"42\" },\n\t\t{ model: \"43\" },\n\t\t{ model: \"55\" },\n\t\t{ model: \"62\" },\n\t\t{ model: \"63\" },\n\t\t{ model: \"64\" },\n\t\t{ model: \"65\" },\n\t\t{ model: \"67\" },\n\t\t{ model: \"68\" },\n\t\t{ model: \"69\" },\n\t\t{ model: \"99\" },\n\t\t{ model: \"25\" },\n\t\t{ model: \"83\" },\n\t\t{ model: \"84\" },\n\t\t{ model: \"50\" }\n\t]\n\t\n\tthis.AllowedSingleByteCharacters = jQuery.merge([], _allowedSingleByteCharacters);\n\tthis.AllowedTwoByteCharacters = jQuery.merge([], _allowedTwoByteCharacters);\n\tthis.AllowedCharacters = jQuery.merge([], _allowedCharacters);\n\tthis.PricePattern = _pricePattern.substr(0);\n\t\n\tthis.MaxLengths = {\n\t\tPrice: 16,\n\t\tPayerName: 30,\n\t\tPayerAddress: 27,\n\t\tPayerHQ: 27,\n\t\tReceiverName: 25,\n\t\tReceiverAddress: 25,\n\t\tReceiverHQ: 27,\n\t\tIBAN: 21,\n\t\tPaymentModel: 2,\n\t\tCalloutNumber: 22,\n\t\tIntentCode: 4,\n\t\tDescription: 35\n\t}\n\t\n\tthis.ResultCode = {\n\t\tOK: 0,\n\t\tInvalidObject: 1,\n\t\tInvalidContent: 2\n\t}\n\t\n\tthis.ValidationResult = {\n\t\tOK: 0,\n\t\t\n\t\tPricePatternInvalid: 1,\n\t\tPriceMaxLengthExceeded: 2,\n\t\t\n\t\tPayerNameInvalid: 4,\n\t\tPayerNameMaxLengthExceeded: 8,\n\t\t\n\t\tPayerAddressInvalid: 16,\n\t\tPayerAddressMaxLengthExceeded: 32,\n\t\t\n\t\tPayerHQInvalid: 64,\n\t\tPayerHQMaxLengthExceeded: 128,\n\t\t\n\t\tReceiverNameInvalid: 256,\n\t\tReceiverNameMaxLengthExceeded: 512,\n\t\t\n\t\tReceiverAddressInvalid: 1024,\n\t\tReceiverAddressMaxLengthExceeded: 2048,\n\t\t\n\t\tReceiverHQInvalid: 4096,\n\t\tReceiverHQMaxLengthExceeded: 8192,\n\t\t\n\t\tIBANInvalid: 16384,\n\t\tIBANMaxLengthExceeded: 32768,\n\t\t\n\t\tPaymentModelInvalid: 65536,\n\t\tPaymentModelMaxLengthExceeded: 131072,\n\t\t\n\t\tCalloutNumberInvalid: 262144,\n\t\tCalloutNumberMaxLengthExceeded: 524288,\n\t\t\n\t\tIntentCodeInvalid: 1048576,\n\t\tIntentCodeMaxLengthExceeded: 2097152,\n\t\t\n\t\tDescriptionInvalid: 4194304,\n\t\tDescriptionMaxLengthExceeded: 8388608\n\t}\n\t\n\tthis.PaymentParams = function () {\n\t\tthis.Iznos = \"\";\n\t\tthis.ImePlatitelja = \"\";\n\t\tthis.AdresaPlatitelja = \"\";\n\t\tthis.SjedistePlatitelja = \"\";\n\t\tthis.Primatelj = \"\";\n\t\tthis.AdresaPrimatelja = \"\";\n\t\tthis.SjedistePrimatelja = \"\";\n\t\tthis.IBAN = \"\";\n\t\tthis.ModelPlacanja = \"\";\n\t\tthis.PozivNaBroj = \"\";\n\t\tthis.SifraNamjene = \"\";\n\t\tthis.OpisPlacanja = \"\";\n\t}\n\t\n\t// Initialization method\n\tthis.Init = function(settings) {\n\t\t_settings = jQuery.extend({}, BarcodePayment.Defaults, settings);\n\t}\n}","/* global rkgTheme loginStatus Croppie rkgScript PDF417 BarcodePayment modalStatusClass */\nlet modalShow     = false;\nlet signup        = null;\n\nconst modalOpen = (modal, callback) => {\n    modalStatusClass();\n    $('.rkg-modal-status').text('');\n    $('body').addClass('modal-open');\n\n    if (modalShow) {\n        $('.rkg-modal form, .modal-div').fadeOut('fast').promise().done(() => {\n            $(modal).fadeIn(400);\n        });\n    } else {\n        $('.rkg-modal form, .modal-div').hide();\n        $(modal).show();\n    }\n\n    modalShow = true;\n    if ($(window).width() <= 1080) {\n        $('.rkg-modal')\n            .fadeIn({queue: false, duration: 'fast'}).promise().done(callback);\n        return;\n    }\n    $('.rkg-modal-background').fadeIn('fast').promise().done(() => {\n        $('.rkg-modal')\n            .fadeIn({queue: false, duration: 'fast'})\n            .animate({top: '50%'})\n            .promise()\n            .done(callback);\n    });\n};\n\n$('.ShowPayModal').click((e) => {\n    e.preventDefault();\n    const textToEncode = $(e.currentTarget).data('barcode_text');\n    console.log(textToEncode);\n\n    PDF417.init(textToEncode);\n\n    const barcode = PDF417.getBarcodeArray();\n\n    // block sizes (width and height) in pixels\n    const bw = 2;\n    const bh = 1;\n\n    // create canvas element based on number of columns and rows in barcode\n    const container = document.getElementById('payment-barcode');\n    if (container.firstChild) {\n        container.removeChild(container.firstChild);\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.width = bw * barcode.num_cols;\n    canvas.height = bh * barcode.num_rows;\n    container.appendChild(canvas);\n\n    const ctx = canvas.getContext('2d');\n\n    // graph barcode elements\n    let y = 0;\n    // for each row\n    for (let r = 0; r < barcode.num_rows; ++r) {\n        let x = 0;\n        // for each column\n        for (let c = 0; c < barcode.num_cols; ++c) {\n            if (barcode.bcode[r][c] === '1') {\n                ctx.fillRect(x, y, bw, bh);\n            }\n            x += bw;\n        }\n        y += bh;\n    }\n\n    const title = $(e.currentTarget).data('title');\n    const primatelj = $(e.currentTarget).data('primatelj');\n    const iban = $(e.currentTarget).data('iban');\n    const modelPlacanja = $(e.currentTarget).data('model_placanja');\n    const pozivNaBroj = $(e.currentTarget).data('poziv_na_broj');\n    const opisPlacanja = $(e.currentTarget).data('opis_placanja');\n    const iznos = $(e.currentTarget).data('iznos');\n    $('#payment-title').html(title);\n    $('#payment-primatelj').html(primatelj);\n    $('#payment-iban').html(iban);\n    $('#payment-model_placanja').html(modelPlacanja);\n    $('#payment-poziv_na_broj').html(pozivNaBroj);\n    $('#payment-opis_placanja').html(opisPlacanja);\n    $('#payment-iznos').html(iznos);\n\n    // $('.rkg-profile-meni').hide()\n    // .promise()\n    // .done(() => {\n    // modalOpen('#payment-modal');\n    // });\n});\n\n$('.rkg-modal-close, rkg-info-close').click((e) => {\n    modalShow = false;\n    e.preventDefault();\n    modalStatusClass();\n    $('.rkg-modal-status').text('');\n    $('body').removeClass('modal-open');\n    signup = null;\n    if ($(window).width() <= 1080) {\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .promise()\n            .done(() => {\n                $('.rkg-modal form, .modal-div').hide();\n            });\n        return;\n    }\n    $('.rkg-modal')\n        .fadeOut({queue: false, duration: 'fast'})\n        .animate({top: '37.5%'})\n        .promise()\n        .done(() => {\n            $('.rkg-modal form, .modal-div').hide();\n            $('.rkg-modal-background').fadeOut('fast');\n        });\n});\n\n$('.course-signup-ok-close').click((e) => {\n    modalShow = false;\n    e.preventDefault();\n    modalStatusClass();\n    $('.rkg-modal-status').text('');\n    $('body').removeClass('modal-open');\n    signup = null;\n    if ($(window).width() <= 1080) {\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .promise()\n            .done(() => {\n                $('.rkg-modal form, .modal-div')\n                    .hide()\n                    .promise()\n                    .done(() => {\n                        window.location.reload();\n                    });\n            });\n        return;\n    }\n    $('.rkg-modal')\n        .fadeOut({queue: false, duration: 'fast'})\n        .animate({top: '37.5%'})\n        .promise()\n        .done(() => {\n            $('.rkg-modal form, .modal-div').hide();\n            $('.rkg-modal-background')\n                .fadeOut('fast')\n                .hide()\n                .promise()\n                .done(() => {\n                    window.location.reload();\n                });\n        });\n});\n\nif ($('#no-required-user').length !== 0) {\n    modalOpen('#registration');\n}\n\n$('.rkg-login-button, .rkg-login-show').click(() => {\n    modalOpen('#login');\n});\n\n$('.rkg-registration-show').click(() => {\n    modalOpen('#registration');\n});\n\n$('.rkg-lost-password-show').click(() => {\n    modalOpen('#lost-password');\n});\n\n$('#rkg-members-button').click(() => {\n    if ($('#rkg-members-table-container').is(':empty')) {\n        $.ajax({\n            type: 'POST',\n            url: rkgTheme.ajaxurl,\n            data: {\n                action: 'getMembersList',\n            },\n            success(data) {\n                $('#rkg-members-table-container').html(data);\n            },\n        });\n    }\n\n    if (($(window).width() <= 1080) && (window.devicePixelRatio > 1.5)) {\n        $('.rkg-profile-meni').css('left', '-90vw')\n            .promise()\n            .done(() => {\n                modalOpen('#rkg-moddal-members');\n            });\n        return;\n    }\n    $('.rkg-profile-meni').animate({\n        height: 'toggle',\n        opacity: 'toggle',\n    }, 'fast')\n        .promise()\n        .done(() => {\n            modalOpen('#rkg-moddal-members');\n        });\n});\n\n$('.course-signup').on('click', (e) => {\n    e.preventDefault();\n    signup = 'course';\n    const signupId = $(e.currentTarget).data('course');\n    const signupName = $(e.currentTarget).data('name');\n    const signupDate = $(e.currentTarget).data('date');\n    const link = $(e.currentTarget).data('link');\n    $('input[name=\"signup-course\"]').val(signupId);\n    $('.course-signup-name').text(signupName);\n    $('.course-signup-date').text(signupDate);\n    $('#course-signup-modal-link').attr('href', link);\n    jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n        if (response === 'yes') {\n            const dob = $('#dob').val();\n            const oib = $('#oib').val();\n            const tel = $('#tel').val();\n            if ((dob.length === 0) || (oib.length === 0) || (tel.length === 0)) {\n                modalOpen('#additional-details-form');\n            } else {\n                $('#additional-details-form').submit();\n            }\n        } else {\n            modalOpen('#registration');\n        }\n    });\n});\n\n$('form#login').on('submit', (e) => {\n    modalStatusClass();\n    $('.rkg-modal-status').text('Prijava u tijeku...');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'ajaxlogin',\n            username: $('form#login #username').val(),\n            password: $('form#login #password').val(),\n            security: $('form#login #security').val(),\n        },\n        success(data) {\n            modalStatusClass(data.status);\n            $('.rkg-modal-status').text(data.message);\n            if (data.status === 0) {\n                if (signup === 'course') {\n                    modalOpen('#additional-details-form');\n                    signup = null;\n                } else {\n                    window.location.reload();\n                }\n            }\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n    e.preventDefault();\n});\n\n$('form#registration').on('submit', (e) => {\n    modalStatusClass();\n    $('.rkg-modal-status').text('Registracija u tijeku...');\n    const regNonce     = $('#vb_new_user_nonce').val();\n    const regPass      = $('#vb_pass').val();\n    const regMail      = $('#vb_email').val();\n    const regFirstname = $('#vb_name').val();\n    const regLastname  = $('#vb_surname').val();\n    const data         = {\n        action: 'register_user',\n        nonce: regNonce,\n        pass: regPass,\n        mail: regMail,\n        firstname: regFirstname,\n        lastname: regLastname,\n    };\n\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data,\n        success(data) {\n            modalStatusClass(data.status);\n            $('.rkg-modal-status').text(data.message);\n            if (data.status === 0) {\n                if (signup === 'course') {\n                    modalOpen('#additional-details-form');\n                    signup = null;\n                } else {\n                    window.location.reload();\n                }\n            }\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n\n    e.preventDefault();\n});\n\n$('form#additional-details-form').on('submit', (e) => {\n    modalStatusClass();\n    $('.rkg-modal-status').text(rkgTheme.loadingmessage);\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'rkg_user_additional_details',\n            pob: $('form#additional-details-form #pob').val(),\n            dob: $('form#additional-details-form #dob').val(),\n            oib: $('form#additional-details-form #oib').val(),\n            tel: $('form#additional-details-form #tel').val(),\n            course: $('form#additional-details-form #signup-course').val(),\n        },\n        success: (data) => {\n            modalStatusClass(data.status);\n            $('form#additional-details-form p.status').text(data.message);\n            modalOpen('#course-signup-ok');\n        },\n    });\n    e.preventDefault();\n});\n\n$('.rkg-course-signup-close').click(() => {\n    $('.rkg-course-signup').fadeOut({queue: false, duration: 'fast'})\n        .animate({top: '25%'}, () => {\n            $('.rkg-modal-background').fadeOut(\n                'fast',\n                () => window.location.reload(),\n            );\n        });\n\n    if ($(window).width() <= 1080) {\n        $('.rkg-modal')\n            .fadeOut({queue: false, duration: 'fast'})\n            .promise()\n            .done(() => {\n                window.location.reload();\n            });\n        return;\n    }\n    $('.rkg-modal')\n        .fadeOut({queue: false, duration: 'fast'})\n        .animate({top: '37.5%'})\n        .promise()\n        .done(() => {\n            window.location.reload();\n        });\n});\n\n$('.course-signout').on('click', (e) => {\n    e.preventDefault();\n    const signupId = $(e.currentTarget).data('course');\n    const signoutName = $(e.currentTarget).data('name');\n    $('input[name=\"signout-course\"]').val(signupId);\n    $('.course-signout-name').text(signoutName);\n    modalOpen('#course-signout-form');\n});\n\n$('#course-signup-ok-pay, #course-signup-show-pay').click((e) => {\n    modalOpen('#course-signup-pay');\n    e.preventDefault();\n});\n\n$('#helth-survey-link').click((e) => {\n    modalOpen('#helth-survey');\n    e.preventDefault();\n});\n\n$('#responsibility-survey-link').click((e) => {\n    modalOpen('#responsibility-survey');\n    e.preventDefault();\n});\n\nconst resize = new Croppie(document.getElementById('brevet-crop'), {\n    viewport: {width: 257, height: 300},\n    boundary: {width: 320, height: 363},\n    showZoomer: true,\n    enableOrientation: true,\n    url: 'http://lorempixel.com/500/400/',\n});\n\n$('.croppie-rotate').on('click', (e) => {\n    resize.rotate(parseInt($(e.currentTarget).data('deg'), 10));\n});\n\nfunction readURL(input) {\n    if (input.files && input.files[0]) {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            // $('.croppie-container').html('');\n            // $('#brevet-crop')[0].croppie('destroy');\n            modalOpen('#rkg-moddal-brevet', () => {\n                console.log(e);\n                resize.bind({\n                    url: e.target.result,\n                });\n                $('.brevet-upload-button').on('click', () => {\n                    resize.result('base64').then((dataImg) => {\n                        // const data = [{image: dataImg}, {name: 'myimgage.jpg'}];\n                        const formData = new FormData();\n                        formData.append('action', 'brevet_upload');\n                        formData.append('image', dataImg);\n                        jQuery.ajax({\n                            url: rkgScript.ajaxUrl,\n                            type: 'POST',\n                            contentType: false,\n                            processData: false,\n                            data: formData,\n                            success(response) {\n                                console.log(response);\n                                $('.course-brevet-image').html(`<img src=\"${response}\" />`);\n                                modalStatusClass();\n                                $('.rkg-modal-status').text('');\n                                $('body').removeClass('modal-open');\n                                signup = null;\n                                if ($(window).width() <= 1080) {\n                                    $('.rkg-modal')\n                                        .fadeOut({queue: false, duration: 'fast'})\n                                        .promise()\n                                        .done(() => {\n                                            window.location.reload();\n                                        });\n                                    return;\n                                }\n                                $('.rkg-modal')\n                                    .fadeOut({queue: false, duration: 'fast'})\n                                    .animate({top: '37.5%'})\n                                    .promise()\n                                    .done(() => {\n                                        window.location.reload();\n                                    });\n                            },\n                        });\n                        $('#result').attr('src', dataImg);\n                    });\n                });\n            });\n        };\n        reader.readAsDataURL(input.files[0]);\n    }\n}\n\n$('#brevet').change(function () {\n    if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n        alert('The File APIs are not fully supported in this browser.');\n        return;\n    }\n    readURL(this);\n});\n\n$('#brevet-link').click((e) => {\n    e.preventDefault();\n    $('#brevet').click();\n});\n\n$('form#helth-survey').on('submit', (e) => {\n    e.preventDefault();\n    const formData  = new FormData($('#helth-survey').get(0));\n    console.log(rkgTheme.ajaxurl);\n    formData.append('action', 'health_survey');\n\n    jQuery.ajax({\n        url: rkgTheme.ajaxurl,\n        type: 'POST',\n        contentType: false,\n        processData: false,\n        data: formData,\n        success() {\n            window.location.reload();\n        },\n        error(response) {\n            console.log(response);\n        },\n    });\n});\n\n$('form#responsibility-survey').on('submit', (e) => {\n    e.preventDefault();\n    const formData  = new FormData($('#responsibility-survey').get(0));\n    console.log(rkgTheme.ajaxurl);\n    formData.append('action', 'responsibility_survey');\n\n    jQuery.ajax({\n        url: rkgTheme.ajaxurl,\n        type: 'POST',\n        contentType: false,\n        processData: false,\n        data: formData,\n        success() {\n            window.location.reload();\n        },\n        error(response) {\n            console.log(response);\n        },\n    });\n});\n\n$('.excursion-signup').click((e) => {\n    e.preventDefault();\n    const signupId = $(e.currentTarget).data('post');\n\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'rkg_user_excursion_signup',\n            post: signupId,\n        },\n        success: () => {\n            modalOpen('#excursion-signup-ok');\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n});\n\n$('#excursion-signup-ok-gear, #excursion-signup-gear').click((e) => {\n    e.preventDefault();\n    modalOpen('#gear-form');\n});\n\n$('.excursion-signout').click((e) => {\n    e.preventDefault();\n    signup = 'course';\n    const signupId = $(e.currentTarget).data('post');\n    const signoutName = $(e.currentTarget).data('name');\n    $('input[name=\"signout-excursion\"]').val(signupId);\n    $('.excursion-signout-name').text(signoutName);\n    jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n        if (response === 'yes') {\n            modalOpen('#excursion-signout-form');\n        }\n    });\n});\n\n$('.excursion-signup-waiting').click((e) => {\n    e.preventDefault();\n    const signupId = $(e.currentTarget).data('post');\n\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'rkg_user_excursion_signup_waiting',\n            post: signupId,\n        },\n        success: () => {\n            modalOpen('#excursion-signup-ok');\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n});\n\n$('.excursion-signout-waiting').click((e) => {\n    e.preventDefault();\n    signup = 'course';\n    const signupId = $(e.currentTarget).data('post');\n    const signoutName = $(e.currentTarget).data('name');\n    $('input[name=\"signout-excursion\"]').val(signupId);\n    $('.excursion-signout-name').text(signoutName);\n    jQuery.post(rkgTheme.ajaxurl, loginStatus, (response) => {\n        if (response === 'yes') {\n            modalOpen('#excursion-signout-waiting-form');\n        }\n    });\n});\n\n$('form#excursion-signout-form').on('submit', (e) => {\n    $('form#excursion-signout-form p.status').show()\n        .text('Odjava u tijeku...');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'rkg_excursion_signout',\n            post: $('form#excursion-signout-form #signout-excursion').val(),\n        },\n        success: (data) => {\n            $('form#excursion-signout-form p.status').text(data.message);\n            window.location.reload();\n        },\n    });\n    e.preventDefault();\n});\n\n$('form#excursion-signout-waiting-form').on('submit', (e) => {\n    $('form#excursion-signout-form p.status').show()\n        .text('Odjava u tijeku...');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'rkg_excursion_signout_waiting',\n            post: $('form#excursion-signout-form #signout-excursion').val(),\n        },\n        success: (data) => {\n            $('form#excursion-signout-form-waiting p.status').text(data.message);\n            window.location.reload();\n        },\n    });\n    e.preventDefault();\n});\n\n$('form#gear-form').on('submit', (e) => {\n    e.preventDefault();\n    const formData  = new FormData($('#gear-form').get(0));\n    formData.append('action', 'gear_reserve');\n\n    jQuery.ajax({\n        url: rkgTheme.ajaxurl,\n        type: 'POST',\n        contentType: false,\n        processData: false,\n        data: formData,\n        success() {\n            window.location.reload();\n        },\n        error(response) {\n            console.log(response);\n        },\n    });\n});\n\n$('#no-gear').click((e) => {\n    e.preventDefault();\n    const gearId = $(e.currentTarget).data('post');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'gear_reserve_no',\n            post: gearId,\n        },\n        success: () => {\n            window.location.reload();\n        },\n    });\n});\n\n$('#excursion-signup-guest').click((e) => {\n    modalOpen('#excursion-guest-form');\n    e.preventDefault();\n});\n\n$('form#excursion-guest-form').on('submit', (e) => {\n    e.preventDefault();\n    const formData  = new FormData($('#excursion-guest-form').get(0));\n    formData.append('action', 'guest_invite');\n\n    jQuery.ajax({\n        url: rkgTheme.ajaxurl,\n        type: 'POST',\n        contentType: false,\n        processData: false,\n        data: formData,\n        success() {\n            window.location.reload();\n        },\n        error(response) {\n            console.log(response);\n        },\n    });\n});\n\n$('.guest-uninvite').click((e) => {\n    e.preventDefault();\n    const name = $(e.currentTarget).data('name');\n    const email = $(e.currentTarget).data('email');\n    $('#guest-remove-name').html(name);\n    $('#guest-remove-email').val(email);\n    modalOpen('#excursion-guest-remove-form');\n});\n\n$('form#excursion-guest-remove-form').on('submit', (e) => {\n    e.preventDefault();\n    const formData  = new FormData($('#excursion-guest-form').get(0));\n    formData.append('action', 'guest_uninvite');\n\n    jQuery.ajax({\n        url: rkgTheme.ajaxurl,\n        type: 'POST',\n        contentType: false,\n        processData: false,\n        data: formData,\n        success() {\n            window.location.reload();\n        },\n        error(response) {\n            console.log(response);\n        },\n    });\n});\n\n$('.course-interested').click((e) => {\n    e.preventDefault();\n    const course = $(e.currentTarget).data('course');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'course_interest',\n            course,\n        },\n        success() {\n            modalOpen('#course-interested-form');\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n});\n\n$('.course-not-interested').click((e) => {\n    e.preventDefault();\n    const course = $(e.currentTarget).data('course');\n    $.ajax({\n        type: 'POST',\n        dataType: 'json',\n        url: rkgTheme.ajaxurl,\n        data: {\n            action: 'course_not_interest',\n            course,\n        },\n        success() {\n            modalOpen('#course-not-interested-form');\n        },\n        error: (error) => {\n            console.log(error);\n        },\n    });\n});\n","/* global modalOpen */\n\nfunction setCookie(cname, cvalue, exdays) {\n    const d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    let expires = `expires=${d.toUTCString()}`;\n    if (exdays === 0) {\n        expires = '';\n    }\n    console.log(expires);\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n}\n\nfunction getCookie(cname) {\n    const name = `${cname}=`;\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return '';\n}\n\nfunction checkBetaCookie() {\n    const betaMessage = getCookie('betaMessage');\n    if (betaMessage === '') {\n        modalOpen('#beta-message');\n        setCookie('betaMessage', true, 0);\n    }\n}\n\ncheckBetaCookie();\n\n"]}